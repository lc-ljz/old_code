var $root=protobuf.get("coreml");$root.CoreML={},$root.CoreML.Specification={},$root.CoreML.Specification.Pipeline=class{constructor(){this.models=[],this.names=[]}static decode(e,o){const a=new $root.CoreML.Specification.Pipeline,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.models.push($root.CoreML.Specification.Model.decode(e,e.uint32()));break;case 2:a.names.push(e.string());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.PipelineClassifier=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.PipelineClassifier,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.pipeline=$root.CoreML.Specification.Pipeline.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.PipelineClassifier.prototype.pipeline=null,$root.CoreML.Specification.PipelineRegressor=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.PipelineRegressor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.pipeline=$root.CoreML.Specification.Pipeline.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.PipelineRegressor.prototype.pipeline=null,$root.CoreML.Specification.FeatureDescription=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FeatureDescription,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.name=e.string();break;case 2:a.shortDescription=e.string();break;case 3:a.type=$root.CoreML.Specification.FeatureType.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FeatureDescription.prototype.name="",$root.CoreML.Specification.FeatureDescription.prototype.shortDescription="",$root.CoreML.Specification.FeatureDescription.prototype.type=null,$root.CoreML.Specification.Metadata=class{constructor(){this.userDefined={}}static decode(e,o){const a=new $root.CoreML.Specification.Metadata,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shortDescription=e.string();break;case 2:a.versionString=e.string();break;case 3:a.author=e.string();break;case 4:a.license=e.string();break;case 100:e.pair(a.userDefined,()=>e.string(),()=>e.string());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Metadata.prototype.shortDescription="",$root.CoreML.Specification.Metadata.prototype.versionString="",$root.CoreML.Specification.Metadata.prototype.author="",$root.CoreML.Specification.Metadata.prototype.license="",$root.CoreML.Specification.ModelDescription=class{constructor(){this.input=[],this.output=[],this.trainingInput=[]}static decode(e,o){const a=new $root.CoreML.Specification.ModelDescription,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.input.push($root.CoreML.Specification.FeatureDescription.decode(e,e.uint32()));break;case 10:a.output.push($root.CoreML.Specification.FeatureDescription.decode(e,e.uint32()));break;case 11:a.predictedFeatureName=e.string();break;case 12:a.predictedProbabilitiesName=e.string();break;case 50:a.trainingInput.push($root.CoreML.Specification.FeatureDescription.decode(e,e.uint32()));break;case 100:a.metadata=$root.CoreML.Specification.Metadata.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ModelDescription.prototype.predictedFeatureName="",$root.CoreML.Specification.ModelDescription.prototype.predictedProbabilitiesName="",$root.CoreML.Specification.ModelDescription.prototype.metadata=null,$root.CoreML.Specification.SerializedModel=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SerializedModel,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.identifier=e.string();break;case 2:a.model=e.bytes();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SerializedModel.prototype.identifier="",$root.CoreML.Specification.SerializedModel.prototype.model=new Uint8Array([]),$root.CoreML.Specification.Model=class{constructor(){}get Type(){return $root.CoreML.Specification.Model.TypeSet=$root.CoreML.Specification.Model.TypeSet||new Set(["pipelineClassifier","pipelineRegressor","pipeline","glmRegressor","supportVectorRegressor","treeEnsembleRegressor","neuralNetworkRegressor","bayesianProbitRegressor","glmClassifier","supportVectorClassifier","treeEnsembleClassifier","neuralNetworkClassifier","kNearestNeighborsClassifier","neuralNetwork","itemSimilarityRecommender","customModel","linkedModel","oneHotEncoder","imputer","featureVectorizer","dictVectorizer","scaler","categoricalMapping","normalizer","arrayFeatureExtractor","nonMaximumSuppression","identity","textClassifier","wordTagger","visionFeaturePrint","soundAnalysisPreprocessing","gazetteer","wordEmbedding","serializedModel"]),Object.keys(this).find(e=>$root.CoreML.Specification.Model.TypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.Model,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.specificationVersion=e.int32();break;case 2:a.description=$root.CoreML.Specification.ModelDescription.decode(e,e.uint32());break;case 10:a.isUpdatable=e.bool();break;case 200:a.pipelineClassifier=$root.CoreML.Specification.PipelineClassifier.decode(e,e.uint32());break;case 201:a.pipelineRegressor=$root.CoreML.Specification.PipelineRegressor.decode(e,e.uint32());break;case 202:a.pipeline=$root.CoreML.Specification.Pipeline.decode(e,e.uint32());break;case 300:a.glmRegressor=$root.CoreML.Specification.GLMRegressor.decode(e,e.uint32());break;case 301:a.supportVectorRegressor=$root.CoreML.Specification.SupportVectorRegressor.decode(e,e.uint32());break;case 302:a.treeEnsembleRegressor=$root.CoreML.Specification.TreeEnsembleRegressor.decode(e,e.uint32());break;case 303:a.neuralNetworkRegressor=$root.CoreML.Specification.NeuralNetworkRegressor.decode(e,e.uint32());break;case 304:a.bayesianProbitRegressor=$root.CoreML.Specification.BayesianProbitRegressor.decode(e,e.uint32());break;case 400:a.glmClassifier=$root.CoreML.Specification.GLMClassifier.decode(e,e.uint32());break;case 401:a.supportVectorClassifier=$root.CoreML.Specification.SupportVectorClassifier.decode(e,e.uint32());break;case 402:a.treeEnsembleClassifier=$root.CoreML.Specification.TreeEnsembleClassifier.decode(e,e.uint32());break;case 403:a.neuralNetworkClassifier=$root.CoreML.Specification.NeuralNetworkClassifier.decode(e,e.uint32());break;case 404:a.kNearestNeighborsClassifier=$root.CoreML.Specification.KNearestNeighborsClassifier.decode(e,e.uint32());break;case 500:a.neuralNetwork=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;case 501:a.itemSimilarityRecommender=$root.CoreML.Specification.ItemSimilarityRecommender.decode(e,e.uint32());break;case 555:a.customModel=$root.CoreML.Specification.CustomModel.decode(e,e.uint32());break;case 556:a.linkedModel=$root.CoreML.Specification.LinkedModel.decode(e,e.uint32());break;case 600:a.oneHotEncoder=$root.CoreML.Specification.OneHotEncoder.decode(e,e.uint32());break;case 601:a.imputer=$root.CoreML.Specification.Imputer.decode(e,e.uint32());break;case 602:a.featureVectorizer=$root.CoreML.Specification.FeatureVectorizer.decode(e,e.uint32());break;case 603:a.dictVectorizer=$root.CoreML.Specification.DictVectorizer.decode(e,e.uint32());break;case 604:a.scaler=$root.CoreML.Specification.Scaler.decode(e,e.uint32());break;case 606:a.categoricalMapping=$root.CoreML.Specification.CategoricalMapping.decode(e,e.uint32());break;case 607:a.normalizer=$root.CoreML.Specification.Normalizer.decode(e,e.uint32());break;case 609:a.arrayFeatureExtractor=$root.CoreML.Specification.ArrayFeatureExtractor.decode(e,e.uint32());break;case 610:a.nonMaximumSuppression=$root.CoreML.Specification.NonMaximumSuppression.decode(e,e.uint32());break;case 900:a.identity=$root.CoreML.Specification.Identity.decode(e,e.uint32());break;case 2e3:a.textClassifier=$root.CoreML.Specification.CoreMLModels.TextClassifier.decode(e,e.uint32());break;case 2001:a.wordTagger=$root.CoreML.Specification.CoreMLModels.WordTagger.decode(e,e.uint32());break;case 2002:a.visionFeaturePrint=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.decode(e,e.uint32());break;case 2003:a.soundAnalysisPreprocessing=$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.decode(e,e.uint32());break;case 2004:a.gazetteer=$root.CoreML.Specification.CoreMLModels.Gazetteer.decode(e,e.uint32());break;case 2005:a.wordEmbedding=$root.CoreML.Specification.CoreMLModels.WordEmbedding.decode(e,e.uint32());break;case 3e3:a.serializedModel=$root.CoreML.Specification.SerializedModel.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Model.prototype.specificationVersion=0,$root.CoreML.Specification.Model.prototype.description=null,$root.CoreML.Specification.Model.prototype.isUpdatable=!1,$root.CoreML.Specification.CoreMLModels={},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint=class{constructor(){}get VisionFeaturePrintType(){return $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.VisionFeaturePrintTypeSet=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.VisionFeaturePrintTypeSet||new Set(["scene","objects"]),Object.keys(this).find(e=>$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.VisionFeaturePrintTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 20:a.scene=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene.decode(e,e.uint32());break;case 21:a.objects=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.version=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene.prototype.version=0,$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene.SceneVersion={SCENE_VERSION_INVALID:0,SCENE_VERSION_1:1},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects=class{constructor(){this.output=[]}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.version=e.int32();break;case 100:a.output.push(e.string());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.prototype.version=0,$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.ObjectsVersion={OBJECTS_VERSION_INVALID:0,OBJECTS_VERSION_1:1},$root.CoreML.Specification.CoreMLModels.TextClassifier=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.CoreMLModels.TextClassifier.ClassLabelsSet=$root.CoreML.Specification.CoreMLModels.TextClassifier.ClassLabelsSet||new Set(["stringClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.CoreMLModels.TextClassifier.ClassLabelsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.TextClassifier,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.revision=e.uint32();break;case 10:a.language=e.string();break;case 100:a.modelParameterData=e.bytes();break;case 200:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.TextClassifier.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.TextClassifier.prototype.language="",$root.CoreML.Specification.CoreMLModels.TextClassifier.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.WordTagger=class{constructor(){}get Tags(){return $root.CoreML.Specification.CoreMLModels.WordTagger.TagsSet=$root.CoreML.Specification.CoreMLModels.WordTagger.TagsSet||new Set(["stringTags"]),Object.keys(this).find(e=>$root.CoreML.Specification.CoreMLModels.WordTagger.TagsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.WordTagger,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.revision=e.uint32();break;case 10:a.language=e.string();break;case 20:a.tokensOutputFeatureName=e.string();break;case 21:a.tokenTagsOutputFeatureName=e.string();break;case 22:a.tokenLocationsOutputFeatureName=e.string();break;case 23:a.tokenLengthsOutputFeatureName=e.string();break;case 100:a.modelParameterData=e.bytes();break;case 200:a.stringTags=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.language="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokensOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokenTagsOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokenLocationsOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokenLengthsOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.Gazetteer=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.CoreMLModels.Gazetteer.ClassLabelsSet=$root.CoreML.Specification.CoreMLModels.Gazetteer.ClassLabelsSet||new Set(["stringClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.CoreMLModels.Gazetteer.ClassLabelsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.Gazetteer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.revision=e.uint32();break;case 10:a.language=e.string();break;case 100:a.modelParameterData=e.bytes();break;case 200:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.Gazetteer.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.Gazetteer.prototype.language="",$root.CoreML.Specification.CoreMLModels.Gazetteer.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.WordEmbedding=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.WordEmbedding,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.revision=e.uint32();break;case 10:a.language=e.string();break;case 100:a.modelParameterData=e.bytes();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.WordEmbedding.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.WordEmbedding.prototype.language="",$root.CoreML.Specification.CoreMLModels.WordEmbedding.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing=class{constructor(){}get SoundAnalysisPreprocessingType(){return $root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.SoundAnalysisPreprocessingTypeSet=$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.SoundAnalysisPreprocessingTypeSet||new Set(["vggish"]),Object.keys(this).find(e=>$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.SoundAnalysisPreprocessingTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 20:a.vggish=$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.StringToInt64Map=class{constructor(){this.map={}}static decode(e,o){const a=new $root.CoreML.Specification.StringToInt64Map,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:e.pair(a.map,()=>e.string(),()=>e.int64());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Int64ToStringMap=class{constructor(){this.map={}}static decode(e,o){const a=new $root.CoreML.Specification.Int64ToStringMap,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:e.pair(a.map,()=>e.int64(),()=>e.string());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.StringToDoubleMap=class{constructor(){this.map={}}static decode(e,o){const a=new $root.CoreML.Specification.StringToDoubleMap,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:e.pair(a.map,()=>e.string(),()=>e.double());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Int64ToDoubleMap=class{constructor(){this.map={}}static decode(e,o){const a=new $root.CoreML.Specification.Int64ToDoubleMap,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:e.pair(a.map,()=>e.int64(),()=>e.double());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.StringVector=class{constructor(){this.vector=[]}static decode(e,o){const a=new $root.CoreML.Specification.StringVector,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.vector.push(e.string());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Int64Vector=class{constructor(){this.vector=[]}static decode(e,o){const a=new $root.CoreML.Specification.Int64Vector,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.vector=e.array(a.vector,()=>e.int64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FloatVector=class{constructor(){this.vector=[]}static decode(e,o){const a=new $root.CoreML.Specification.FloatVector,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.vector=e.floats(a.vector,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DoubleVector=class{constructor(){this.vector=[]}static decode(e,o){const a=new $root.CoreML.Specification.DoubleVector,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.vector=e.doubles(a.vector,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Int64Range=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.Int64Range,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.minValue=e.int64();break;case 2:a.maxValue=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Int64Range.prototype.minValue=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.Int64Range.prototype.maxValue=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.Int64Set=class{constructor(){this.values=[]}static decode(e,o){const a=new $root.CoreML.Specification.Int64Set,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.values=e.array(a.values,()=>e.int64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DoubleRange=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.DoubleRange,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.minValue=e.double();break;case 2:a.maxValue=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DoubleRange.prototype.minValue=0,$root.CoreML.Specification.DoubleRange.prototype.maxValue=0,$root.CoreML.Specification.Int64FeatureType=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.Int64FeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.DoubleFeatureType=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.DoubleFeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.StringFeatureType=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.StringFeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SizeRange=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SizeRange,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.lowerBound=e.uint64();break;case 2:a.upperBound=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SizeRange.prototype.lowerBound=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SizeRange.prototype.upperBound=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ImageFeatureType=class{constructor(){}get SizeFlexibility(){return $root.CoreML.Specification.ImageFeatureType.SizeFlexibilitySet=$root.CoreML.Specification.ImageFeatureType.SizeFlexibilitySet||new Set(["enumeratedSizes","imageSizeRange"]),Object.keys(this).find(e=>$root.CoreML.Specification.ImageFeatureType.SizeFlexibilitySet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.ImageFeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.width=e.int64();break;case 2:a.height=e.int64();break;case 21:a.enumeratedSizes=$root.CoreML.Specification.ImageFeatureType.EnumeratedImageSizes.decode(e,e.uint32());break;case 31:a.imageSizeRange=$root.CoreML.Specification.ImageFeatureType.ImageSizeRange.decode(e,e.uint32());break;case 3:a.colorSpace=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ImageFeatureType.prototype.width=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ImageFeatureType.prototype.height=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ImageFeatureType.prototype.colorSpace=0,$root.CoreML.Specification.ImageFeatureType.ColorSpace={INVALID_COLOR_SPACE:0,GRAYSCALE:10,RGB:20,BGR:30},$root.CoreML.Specification.ImageFeatureType.ImageSize=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ImageFeatureType.ImageSize,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.width=e.uint64();break;case 2:a.height=e.uint64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ImageFeatureType.ImageSize.prototype.width=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ImageFeatureType.ImageSize.prototype.height=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ImageFeatureType.EnumeratedImageSizes=class{constructor(){this.sizes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ImageFeatureType.EnumeratedImageSizes,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.sizes.push($root.CoreML.Specification.ImageFeatureType.ImageSize.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ImageFeatureType.ImageSizeRange=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ImageFeatureType.ImageSizeRange,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.widthRange=$root.CoreML.Specification.SizeRange.decode(e,e.uint32());break;case 2:a.heightRange=$root.CoreML.Specification.SizeRange.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ImageFeatureType.ImageSizeRange.prototype.widthRange=null,$root.CoreML.Specification.ImageFeatureType.ImageSizeRange.prototype.heightRange=null,$root.CoreML.Specification.ArrayFeatureType=class{constructor(){this.shape=[]}get ShapeFlexibility(){return $root.CoreML.Specification.ArrayFeatureType.ShapeFlexibilitySet=$root.CoreML.Specification.ArrayFeatureType.ShapeFlexibilitySet||new Set(["enumeratedShapes","shapeRange"]),Object.keys(this).find(e=>$root.CoreML.Specification.ArrayFeatureType.ShapeFlexibilitySet.has(e)&&this[e]!=null)}get defaultOptionalValue(){return $root.CoreML.Specification.ArrayFeatureType.defaultOptionalValueSet=$root.CoreML.Specification.ArrayFeatureType.defaultOptionalValueSet||new Set(["intDefaultValue","floatDefaultValue","doubleDefaultValue"]),Object.keys(this).find(e=>$root.CoreML.Specification.ArrayFeatureType.defaultOptionalValueSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.ArrayFeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shape=e.array(a.shape,()=>e.int64(),t);break;case 2:a.dataType=e.int32();break;case 21:a.enumeratedShapes=$root.CoreML.Specification.ArrayFeatureType.EnumeratedShapes.decode(e,e.uint32());break;case 31:a.shapeRange=$root.CoreML.Specification.ArrayFeatureType.ShapeRange.decode(e,e.uint32());break;case 41:a.intDefaultValue=e.int32();break;case 51:a.floatDefaultValue=e.float();break;case 61:a.doubleDefaultValue=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ArrayFeatureType.prototype.dataType=0,$root.CoreML.Specification.ArrayFeatureType.ArrayDataType={INVALID_ARRAY_DATA_TYPE:0,FLOAT32:65568,DOUBLE:65600,INT32:131104},$root.CoreML.Specification.ArrayFeatureType.Shape=class{constructor(){this.shape=[]}static decode(e,o){const a=new $root.CoreML.Specification.ArrayFeatureType.Shape,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shape=e.array(a.shape,()=>e.int64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ArrayFeatureType.EnumeratedShapes=class{constructor(){this.shapes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ArrayFeatureType.EnumeratedShapes,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shapes.push($root.CoreML.Specification.ArrayFeatureType.Shape.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ArrayFeatureType.ShapeRange=class{constructor(){this.sizeRanges=[]}static decode(e,o){const a=new $root.CoreML.Specification.ArrayFeatureType.ShapeRange,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.sizeRanges.push($root.CoreML.Specification.SizeRange.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DictionaryFeatureType=class{constructor(){}get KeyType(){return $root.CoreML.Specification.DictionaryFeatureType.KeyTypeSet=$root.CoreML.Specification.DictionaryFeatureType.KeyTypeSet||new Set(["int64KeyType","stringKeyType"]),Object.keys(this).find(e=>$root.CoreML.Specification.DictionaryFeatureType.KeyTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.DictionaryFeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.int64KeyType=$root.CoreML.Specification.Int64FeatureType.decode(e,e.uint32());break;case 2:a.stringKeyType=$root.CoreML.Specification.StringFeatureType.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SequenceFeatureType=class{constructor(){}get Type(){return $root.CoreML.Specification.SequenceFeatureType.TypeSet=$root.CoreML.Specification.SequenceFeatureType.TypeSet||new Set(["int64Type","stringType"]),Object.keys(this).find(e=>$root.CoreML.Specification.SequenceFeatureType.TypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.SequenceFeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.int64Type=$root.CoreML.Specification.Int64FeatureType.decode(e,e.uint32());break;case 3:a.stringType=$root.CoreML.Specification.StringFeatureType.decode(e,e.uint32());break;case 101:a.sizeRange=$root.CoreML.Specification.SizeRange.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SequenceFeatureType.prototype.sizeRange=null,$root.CoreML.Specification.FeatureType=class{constructor(){}get Type(){return $root.CoreML.Specification.FeatureType.TypeSet=$root.CoreML.Specification.FeatureType.TypeSet||new Set(["int64Type","doubleType","stringType","imageType","multiArrayType","dictionaryType","sequenceType"]),Object.keys(this).find(e=>$root.CoreML.Specification.FeatureType.TypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.FeatureType,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.int64Type=$root.CoreML.Specification.Int64FeatureType.decode(e,e.uint32());break;case 2:a.doubleType=$root.CoreML.Specification.DoubleFeatureType.decode(e,e.uint32());break;case 3:a.stringType=$root.CoreML.Specification.StringFeatureType.decode(e,e.uint32());break;case 4:a.imageType=$root.CoreML.Specification.ImageFeatureType.decode(e,e.uint32());break;case 5:a.multiArrayType=$root.CoreML.Specification.ArrayFeatureType.decode(e,e.uint32());break;case 6:a.dictionaryType=$root.CoreML.Specification.DictionaryFeatureType.decode(e,e.uint32());break;case 7:a.sequenceType=$root.CoreML.Specification.SequenceFeatureType.decode(e,e.uint32());break;case 1e3:a.isOptional=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FeatureType.prototype.isOptional=!1,$root.CoreML.Specification.ArrayFeatureExtractor=class{constructor(){this.extractIndex=[]}static decode(e,o){const a=new $root.CoreML.Specification.ArrayFeatureExtractor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.extractIndex=e.array(a.extractIndex,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BayesianProbitRegressor=class{constructor(){this.features=[]}static decode(e,o){const a=new $root.CoreML.Specification.BayesianProbitRegressor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.numberOfFeatures=e.uint32();break;case 2:a.bias=$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.decode(e,e.uint32());break;case 3:a.features.push($root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight.decode(e,e.uint32()));break;case 10:a.regressionInputFeatureName=e.string();break;case 11:a.optimismInputFeatureName=e.string();break;case 12:a.samplingScaleInputFeatureName=e.string();break;case 13:a.samplingTruncationInputFeatureName=e.string();break;case 20:a.meanOutputFeatureName=e.string();break;case 21:a.varianceOutputFeatureName=e.string();break;case 22:a.pessimisticProbabilityOutputFeatureName=e.string();break;case 23:a.sampledProbabilityOutputFeatureName=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BayesianProbitRegressor.prototype.numberOfFeatures=0,$root.CoreML.Specification.BayesianProbitRegressor.prototype.bias=null,$root.CoreML.Specification.BayesianProbitRegressor.prototype.regressionInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.optimismInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.samplingScaleInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.samplingTruncationInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.meanOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.varianceOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.pessimisticProbabilityOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.sampledProbabilityOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.Gaussian=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BayesianProbitRegressor.Gaussian,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.mean=e.double();break;case 2:a.precision=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.prototype.mean=0,$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.prototype.precision=0,$root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.featureValue=e.uint32();break;case 2:a.featureWeight=$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight.prototype.featureValue=0,$root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight.prototype.featureWeight=null,$root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight=class{constructor(){this.weights=[]}static decode(e,o){const a=new $root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.featureId=e.uint32();break;case 2:a.weights.push($root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight.prototype.featureId=0,$root.CoreML.Specification.CategoricalMapping=class{constructor(){}get MappingType(){return $root.CoreML.Specification.CategoricalMapping.MappingTypeSet=$root.CoreML.Specification.CategoricalMapping.MappingTypeSet||new Set(["stringToInt64Map","int64ToStringMap"]),Object.keys(this).find(e=>$root.CoreML.Specification.CategoricalMapping.MappingTypeSet.has(e)&&this[e]!=null)}get ValueOnUnknown(){return $root.CoreML.Specification.CategoricalMapping.ValueOnUnknownSet=$root.CoreML.Specification.CategoricalMapping.ValueOnUnknownSet||new Set(["strValue","int64Value"]),Object.keys(this).find(e=>$root.CoreML.Specification.CategoricalMapping.ValueOnUnknownSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CategoricalMapping,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.stringToInt64Map=$root.CoreML.Specification.StringToInt64Map.decode(e,e.uint32());break;case 2:a.int64ToStringMap=$root.CoreML.Specification.Int64ToStringMap.decode(e,e.uint32());break;case 101:a.strValue=e.string();break;case 102:a.int64Value=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CustomModel=class{constructor(){this.parameters={}}static decode(e,o){const a=new $root.CoreML.Specification.CustomModel,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.className=e.string();break;case 30:e.pair(a.parameters,()=>e.string(),()=>$root.CoreML.Specification.CustomModel.CustomModelParamValue.decode(e,e.uint32()));break;case 40:a.description=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CustomModel.prototype.className="",$root.CoreML.Specification.CustomModel.prototype.description="",$root.CoreML.Specification.CustomModel.CustomModelParamValue=class{constructor(){}get value(){return $root.CoreML.Specification.CustomModel.CustomModelParamValue.valueSet=$root.CoreML.Specification.CustomModel.CustomModelParamValue.valueSet||new Set(["doubleValue","stringValue","intValue","longValue","boolValue","bytesValue"]),Object.keys(this).find(e=>$root.CoreML.Specification.CustomModel.CustomModelParamValue.valueSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CustomModel.CustomModelParamValue,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.doubleValue=e.double();break;case 20:a.stringValue=e.string();break;case 30:a.intValue=e.int32();break;case 40:a.longValue=e.int64();break;case 50:a.boolValue=e.bool();break;case 60:a.bytesValue=e.bytes();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DictVectorizer=class{constructor(){}get Map(){return $root.CoreML.Specification.DictVectorizer.MapSet=$root.CoreML.Specification.DictVectorizer.MapSet||new Set(["stringToIndex","int64ToIndex"]),Object.keys(this).find(e=>$root.CoreML.Specification.DictVectorizer.MapSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.DictVectorizer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.stringToIndex=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 2:a.int64ToIndex=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FeatureVectorizer=class{constructor(){this.inputList=[]}static decode(e,o){const a=new $root.CoreML.Specification.FeatureVectorizer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputList.push($root.CoreML.Specification.FeatureVectorizer.InputColumn.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FeatureVectorizer.InputColumn=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FeatureVectorizer.InputColumn,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputColumn=e.string();break;case 2:a.inputDimensions=e.uint64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FeatureVectorizer.InputColumn.prototype.inputColumn="",$root.CoreML.Specification.FeatureVectorizer.InputColumn.prototype.inputDimensions=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.GLMRegressor=class{constructor(){this.weights=[],this.offset=[]}static decode(e,o){const a=new $root.CoreML.Specification.GLMRegressor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.weights.push($root.CoreML.Specification.GLMRegressor.DoubleArray.decode(e,e.uint32()));break;case 2:a.offset=e.doubles(a.offset,t);break;case 3:a.postEvaluationTransform=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GLMRegressor.prototype.postEvaluationTransform=0,$root.CoreML.Specification.GLMRegressor.DoubleArray=class{constructor(){this.value=[]}static decode(e,o){const a=new $root.CoreML.Specification.GLMRegressor.DoubleArray,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.value=e.doubles(a.value,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GLMRegressor.PostEvaluationTransform={NoTransform:0,Logit:1,Probit:2},$root.CoreML.Specification.GLMClassifier=class{constructor(){this.weights=[],this.offset=[]}get ClassLabels(){return $root.CoreML.Specification.GLMClassifier.ClassLabelsSet=$root.CoreML.Specification.GLMClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.GLMClassifier.ClassLabelsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.GLMClassifier,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.weights.push($root.CoreML.Specification.GLMClassifier.DoubleArray.decode(e,e.uint32()));break;case 2:a.offset=e.doubles(a.offset,t);break;case 3:a.postEvaluationTransform=e.int32();break;case 4:a.classEncoding=e.int32();break;case 100:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:a.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GLMClassifier.prototype.postEvaluationTransform=0,$root.CoreML.Specification.GLMClassifier.prototype.classEncoding=0,$root.CoreML.Specification.GLMClassifier.DoubleArray=class{constructor(){this.value=[]}static decode(e,o){const a=new $root.CoreML.Specification.GLMClassifier.DoubleArray,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.value=e.doubles(a.value,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GLMClassifier.PostEvaluationTransform={Logit:0,Probit:1},$root.CoreML.Specification.GLMClassifier.ClassEncoding={ReferenceClass:0,OneVsRest:1},$root.CoreML.Specification.KNearestNeighborsClassifier=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.KNearestNeighborsClassifier.ClassLabelsSet=$root.CoreML.Specification.KNearestNeighborsClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.KNearestNeighborsClassifier.ClassLabelsSet.has(e)&&this[e]!=null)}get DefaultClassLabel(){return $root.CoreML.Specification.KNearestNeighborsClassifier.DefaultClassLabelSet=$root.CoreML.Specification.KNearestNeighborsClassifier.DefaultClassLabelSet||new Set(["defaultStringLabel","defaultInt64Label"]),Object.keys(this).find(e=>$root.CoreML.Specification.KNearestNeighborsClassifier.DefaultClassLabelSet.has(e)&&this[e]!=null)}get WeightingScheme(){return $root.CoreML.Specification.KNearestNeighborsClassifier.WeightingSchemeSet=$root.CoreML.Specification.KNearestNeighborsClassifier.WeightingSchemeSet||new Set(["uniformWeighting","inverseDistanceWeighting"]),Object.keys(this).find(e=>$root.CoreML.Specification.KNearestNeighborsClassifier.WeightingSchemeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.KNearestNeighborsClassifier,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.nearestNeighborsIndex=$root.CoreML.Specification.NearestNeighborsIndex.decode(e,e.uint32());break;case 3:a.numberOfNeighbors=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 100:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:a.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 110:a.defaultStringLabel=e.string();break;case 111:a.defaultInt64Label=e.int64();break;case 200:a.uniformWeighting=$root.CoreML.Specification.UniformWeighting.decode(e,e.uint32());break;case 210:a.inverseDistanceWeighting=$root.CoreML.Specification.InverseDistanceWeighting.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.KNearestNeighborsClassifier.prototype.nearestNeighborsIndex=null,$root.CoreML.Specification.KNearestNeighborsClassifier.prototype.numberOfNeighbors=null,$root.CoreML.Specification.NearestNeighborsIndex=class{constructor(){this.floatSamples=[]}get IndexType(){return $root.CoreML.Specification.NearestNeighborsIndex.IndexTypeSet=$root.CoreML.Specification.NearestNeighborsIndex.IndexTypeSet||new Set(["linearIndex","singleKdTreeIndex"]),Object.keys(this).find(e=>$root.CoreML.Specification.NearestNeighborsIndex.IndexTypeSet.has(e)&&this[e]!=null)}get DistanceFunction(){return $root.CoreML.Specification.NearestNeighborsIndex.DistanceFunctionSet=$root.CoreML.Specification.NearestNeighborsIndex.DistanceFunctionSet||new Set(["squaredEuclideanDistance"]),Object.keys(this).find(e=>$root.CoreML.Specification.NearestNeighborsIndex.DistanceFunctionSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.NearestNeighborsIndex,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.numberOfDimensions=e.int32();break;case 2:a.floatSamples.push($root.CoreML.Specification.FloatVector.decode(e,e.uint32()));break;case 100:a.linearIndex=$root.CoreML.Specification.LinearIndex.decode(e,e.uint32());break;case 110:a.singleKdTreeIndex=$root.CoreML.Specification.SingleKdTreeIndex.decode(e,e.uint32());break;case 200:a.squaredEuclideanDistance=$root.CoreML.Specification.SquaredEuclideanDistance.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NearestNeighborsIndex.prototype.numberOfDimensions=0,$root.CoreML.Specification.UniformWeighting=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.UniformWeighting,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.InverseDistanceWeighting=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.InverseDistanceWeighting,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.LinearIndex=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LinearIndex,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SingleKdTreeIndex=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SingleKdTreeIndex,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.leafSize=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SingleKdTreeIndex.prototype.leafSize=0,$root.CoreML.Specification.SquaredEuclideanDistance=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SquaredEuclideanDistance,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.Int64Parameter=class{constructor(){}get AllowedValues(){return $root.CoreML.Specification.Int64Parameter.AllowedValuesSet=$root.CoreML.Specification.Int64Parameter.AllowedValuesSet||new Set(["range","set"]),Object.keys(this).find(e=>$root.CoreML.Specification.Int64Parameter.AllowedValuesSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.Int64Parameter,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.defaultValue=e.int64();break;case 10:a.range=$root.CoreML.Specification.Int64Range.decode(e,e.uint32());break;case 11:a.set=$root.CoreML.Specification.Int64Set.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Int64Parameter.prototype.defaultValue=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.DoubleParameter=class{constructor(){}get AllowedValues(){return $root.CoreML.Specification.DoubleParameter.AllowedValuesSet=$root.CoreML.Specification.DoubleParameter.AllowedValuesSet||new Set(["range"]),Object.keys(this).find(e=>$root.CoreML.Specification.DoubleParameter.AllowedValuesSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.DoubleParameter,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.defaultValue=e.double();break;case 10:a.range=$root.CoreML.Specification.DoubleRange.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DoubleParameter.prototype.defaultValue=0,$root.CoreML.Specification.StringParameter=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.StringParameter,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.defaultValue=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.StringParameter.prototype.defaultValue="",$root.CoreML.Specification.BoolParameter=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BoolParameter,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.defaultValue=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BoolParameter.prototype.defaultValue=!1,$root.CoreML.Specification.Identity=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.Identity,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.Imputer=class{constructor(){}get ImputedValue(){return $root.CoreML.Specification.Imputer.ImputedValueSet=$root.CoreML.Specification.Imputer.ImputedValueSet||new Set(["imputedDoubleValue","imputedInt64Value","imputedStringValue","imputedDoubleArray","imputedInt64Array","imputedStringDictionary","imputedInt64Dictionary"]),Object.keys(this).find(e=>$root.CoreML.Specification.Imputer.ImputedValueSet.has(e)&&this[e]!=null)}get ReplaceValue(){return $root.CoreML.Specification.Imputer.ReplaceValueSet=$root.CoreML.Specification.Imputer.ReplaceValueSet||new Set(["replaceDoubleValue","replaceInt64Value","replaceStringValue"]),Object.keys(this).find(e=>$root.CoreML.Specification.Imputer.ReplaceValueSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.Imputer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.imputedDoubleValue=e.double();break;case 2:a.imputedInt64Value=e.int64();break;case 3:a.imputedStringValue=e.string();break;case 4:a.imputedDoubleArray=$root.CoreML.Specification.DoubleVector.decode(e,e.uint32());break;case 5:a.imputedInt64Array=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 6:a.imputedStringDictionary=$root.CoreML.Specification.StringToDoubleMap.decode(e,e.uint32());break;case 7:a.imputedInt64Dictionary=$root.CoreML.Specification.Int64ToDoubleMap.decode(e,e.uint32());break;case 11:a.replaceDoubleValue=e.double();break;case 12:a.replaceInt64Value=e.int64();break;case 13:a.replaceStringValue=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetworkMultiArrayShapeMapping={RANK5_ARRAY_MAPPING:0,EXACT_ARRAY_MAPPING:1},$root.CoreML.Specification.NeuralNetworkImageShapeMapping={RANK5_IMAGE_MAPPING:0,RANK4_IMAGE_MAPPING:1},$root.CoreML.Specification.NeuralNetwork=class{constructor(){this.layers=[],this.preprocessing=[]}static decode(e,o){const a=new $root.CoreML.Specification.NeuralNetwork,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.layers.push($root.CoreML.Specification.NeuralNetworkLayer.decode(e,e.uint32()));break;case 2:a.preprocessing.push($root.CoreML.Specification.NeuralNetworkPreprocessing.decode(e,e.uint32()));break;case 5:a.arrayInputShapeMapping=e.int32();break;case 6:a.imageInputShapeMapping=e.int32();break;case 10:a.updateParams=$root.CoreML.Specification.NetworkUpdateParameters.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetwork.prototype.arrayInputShapeMapping=0,$root.CoreML.Specification.NeuralNetwork.prototype.imageInputShapeMapping=0,$root.CoreML.Specification.NeuralNetwork.prototype.updateParams=null,$root.CoreML.Specification.NeuralNetworkImageScaler=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.NeuralNetworkImageScaler,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.channelScale=e.float();break;case 20:a.blueBias=e.float();break;case 21:a.greenBias=e.float();break;case 22:a.redBias=e.float();break;case 30:a.grayBias=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.channelScale=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.blueBias=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.greenBias=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.redBias=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.grayBias=0,$root.CoreML.Specification.NeuralNetworkMeanImage=class{constructor(){this.meanImage=[]}static decode(e,o){const a=new $root.CoreML.Specification.NeuralNetworkMeanImage,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.meanImage=e.floats(a.meanImage,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetworkPreprocessing=class{constructor(){}get preprocessor(){return $root.CoreML.Specification.NeuralNetworkPreprocessing.preprocessorSet=$root.CoreML.Specification.NeuralNetworkPreprocessing.preprocessorSet||new Set(["scaler","meanImage"]),Object.keys(this).find(e=>$root.CoreML.Specification.NeuralNetworkPreprocessing.preprocessorSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.NeuralNetworkPreprocessing,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.featureName=e.string();break;case 10:a.scaler=$root.CoreML.Specification.NeuralNetworkImageScaler.decode(e,e.uint32());break;case 11:a.meanImage=$root.CoreML.Specification.NeuralNetworkMeanImage.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetworkPreprocessing.prototype.featureName="",$root.CoreML.Specification.ActivationReLU=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationReLU,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ActivationLeakyReLU=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationLeakyReLU,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationLeakyReLU.prototype.alpha=0,$root.CoreML.Specification.ActivationTanh=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationTanh,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ActivationScaledTanh=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationScaledTanh,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;case 2:a.beta=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationScaledTanh.prototype.alpha=0,$root.CoreML.Specification.ActivationScaledTanh.prototype.beta=0,$root.CoreML.Specification.ActivationSigmoid=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationSigmoid,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ActivationLinear=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationLinear,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;case 2:a.beta=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationLinear.prototype.alpha=0,$root.CoreML.Specification.ActivationLinear.prototype.beta=0,$root.CoreML.Specification.ActivationSigmoidHard=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationSigmoidHard,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;case 2:a.beta=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationSigmoidHard.prototype.alpha=0,$root.CoreML.Specification.ActivationSigmoidHard.prototype.beta=0,$root.CoreML.Specification.ActivationPReLU=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationPReLU,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationPReLU.prototype.alpha=null,$root.CoreML.Specification.ActivationELU=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationELU,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationELU.prototype.alpha=0,$root.CoreML.Specification.ActivationThresholdedReLU=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationThresholdedReLU,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationThresholdedReLU.prototype.alpha=0,$root.CoreML.Specification.ActivationSoftsign=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationSoftsign,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ActivationSoftplus=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationSoftplus,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ActivationParametricSoftplus=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ActivationParametricSoftplus,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 2:a.beta=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ActivationParametricSoftplus.prototype.alpha=null,$root.CoreML.Specification.ActivationParametricSoftplus.prototype.beta=null,$root.CoreML.Specification.ActivationParams=class{constructor(){}get NonlinearityType(){return $root.CoreML.Specification.ActivationParams.NonlinearityTypeSet=$root.CoreML.Specification.ActivationParams.NonlinearityTypeSet||new Set(["linear","ReLU","leakyReLU","thresholdedReLU","PReLU","tanh","scaledTanh","sigmoid","sigmoidHard","ELU","softsign","softplus","parametricSoftplus"]),Object.keys(this).find(e=>$root.CoreML.Specification.ActivationParams.NonlinearityTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.ActivationParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 5:a.linear=$root.CoreML.Specification.ActivationLinear.decode(e,e.uint32());break;case 10:a.ReLU=$root.CoreML.Specification.ActivationReLU.decode(e,e.uint32());break;case 15:a.leakyReLU=$root.CoreML.Specification.ActivationLeakyReLU.decode(e,e.uint32());break;case 20:a.thresholdedReLU=$root.CoreML.Specification.ActivationThresholdedReLU.decode(e,e.uint32());break;case 25:a.PReLU=$root.CoreML.Specification.ActivationPReLU.decode(e,e.uint32());break;case 30:a.tanh=$root.CoreML.Specification.ActivationTanh.decode(e,e.uint32());break;case 31:a.scaledTanh=$root.CoreML.Specification.ActivationScaledTanh.decode(e,e.uint32());break;case 40:a.sigmoid=$root.CoreML.Specification.ActivationSigmoid.decode(e,e.uint32());break;case 41:a.sigmoidHard=$root.CoreML.Specification.ActivationSigmoidHard.decode(e,e.uint32());break;case 50:a.ELU=$root.CoreML.Specification.ActivationELU.decode(e,e.uint32());break;case 60:a.softsign=$root.CoreML.Specification.ActivationSoftsign.decode(e,e.uint32());break;case 70:a.softplus=$root.CoreML.Specification.ActivationSoftplus.decode(e,e.uint32());break;case 71:a.parametricSoftplus=$root.CoreML.Specification.ActivationParametricSoftplus.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Tensor=class{constructor(){this.dimValue=[]}static decode(e,o){const a=new $root.CoreML.Specification.Tensor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.rank=e.uint32();break;case 2:a.dimValue=e.array(a.dimValue,()=>e.int64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Tensor.prototype.rank=0,$root.CoreML.Specification.NeuralNetworkLayer=class{constructor(){this.input=[],this.output=[],this.inputTensor=[],this.outputTensor=[]}get layer(){return $root.CoreML.Specification.NeuralNetworkLayer.layerSet=$root.CoreML.Specification.NeuralNetworkLayer.layerSet||new Set(["convolution","pooling","activation","innerProduct","embedding","batchnorm","mvn","l2normalize","softmax","lrn","crop","padding","upsample","resizeBilinear","cropResize","unary","add","multiply","average","scale","bias","max","min","dot","reduce","loadConstant","reshape","flatten","permute","concat","split","sequenceRepeat","reorganizeData","slice","simpleRecurrent","gru","uniDirectionalLSTM","biDirectionalLSTM","custom","copy","branch","loop","loopBreak","loopContinue","rangeStatic","rangeDynamic","clip","ceil","floor","sign","round","exp2","sin","cos","tan","asin","acos","atan","sinh","cosh","tanh","asinh","acosh","atanh","erf","gelu","equal","notEqual","lessThan","lessEqual","greaterThan","greaterEqual","logicalOr","logicalXor","logicalNot","logicalAnd","modBroadcastable","minBroadcastable","maxBroadcastable","addBroadcastable","powBroadcastable","divideBroadcastable","floorDivBroadcastable","multiplyBroadcastable","subtractBroadcastable","tile","stack","gather","scatter","gatherND","scatterND","softmaxND","gatherAlongAxis","scatterAlongAxis","reverse","reverseSeq","splitND","concatND","transpose","sliceStatic","sliceDynamic","slidingWindows","topK","argMin","argMax","embeddingND","batchedMatmul","getShape","loadConstantND","fillLike","fillStatic","fillDynamic","broadcastToLike","broadcastToStatic","broadcastToDynamic","squeeze","expandDims","flattenTo2D","reshapeLike","reshapeStatic","reshapeDynamic","rankPreservingReshape","constantPad","randomNormalLike","randomNormalStatic","randomNormalDynamic","randomUniformLike","randomUniformStatic","randomUniformDynamic","randomBernoulliLike","randomBernoulliStatic","randomBernoulliDynamic","categoricalDistribution","reduceL1","reduceL2","reduceMax","reduceMin","reduceSum","reduceProd","reduceMean","reduceLogSum","reduceSumSquare","reduceLogSumExp","whereNonZero","matrixBandPart","lowerTriangular","upperTriangular","whereBroadcastable","layerNormalization","NonMaximumSuppression","oneHot","cumSum","clampedReLU","argSort","pooling3d","globalPooling3d","sliceBySize","convolution3d"]),Object.keys(this).find(e=>$root.CoreML.Specification.NeuralNetworkLayer.layerSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.NeuralNetworkLayer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.name=e.string();break;case 2:a.input.push(e.string());break;case 3:a.output.push(e.string());break;case 4:a.inputTensor.push($root.CoreML.Specification.Tensor.decode(e,e.uint32()));break;case 5:a.outputTensor.push($root.CoreML.Specification.Tensor.decode(e,e.uint32()));break;case 10:a.isUpdatable=e.bool();break;case 100:a.convolution=$root.CoreML.Specification.ConvolutionLayerParams.decode(e,e.uint32());break;case 120:a.pooling=$root.CoreML.Specification.PoolingLayerParams.decode(e,e.uint32());break;case 130:a.activation=$root.CoreML.Specification.ActivationParams.decode(e,e.uint32());break;case 140:a.innerProduct=$root.CoreML.Specification.InnerProductLayerParams.decode(e,e.uint32());break;case 150:a.embedding=$root.CoreML.Specification.EmbeddingLayerParams.decode(e,e.uint32());break;case 160:a.batchnorm=$root.CoreML.Specification.BatchnormLayerParams.decode(e,e.uint32());break;case 165:a.mvn=$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.decode(e,e.uint32());break;case 170:a.l2normalize=$root.CoreML.Specification.L2NormalizeLayerParams.decode(e,e.uint32());break;case 175:a.softmax=$root.CoreML.Specification.SoftmaxLayerParams.decode(e,e.uint32());break;case 180:a.lrn=$root.CoreML.Specification.LRNLayerParams.decode(e,e.uint32());break;case 190:a.crop=$root.CoreML.Specification.CropLayerParams.decode(e,e.uint32());break;case 200:a.padding=$root.CoreML.Specification.PaddingLayerParams.decode(e,e.uint32());break;case 210:a.upsample=$root.CoreML.Specification.UpsampleLayerParams.decode(e,e.uint32());break;case 211:a.resizeBilinear=$root.CoreML.Specification.ResizeBilinearLayerParams.decode(e,e.uint32());break;case 212:a.cropResize=$root.CoreML.Specification.CropResizeLayerParams.decode(e,e.uint32());break;case 220:a.unary=$root.CoreML.Specification.UnaryFunctionLayerParams.decode(e,e.uint32());break;case 230:a.add=$root.CoreML.Specification.AddLayerParams.decode(e,e.uint32());break;case 231:a.multiply=$root.CoreML.Specification.MultiplyLayerParams.decode(e,e.uint32());break;case 240:a.average=$root.CoreML.Specification.AverageLayerParams.decode(e,e.uint32());break;case 245:a.scale=$root.CoreML.Specification.ScaleLayerParams.decode(e,e.uint32());break;case 250:a.bias=$root.CoreML.Specification.BiasLayerParams.decode(e,e.uint32());break;case 260:a.max=$root.CoreML.Specification.MaxLayerParams.decode(e,e.uint32());break;case 261:a.min=$root.CoreML.Specification.MinLayerParams.decode(e,e.uint32());break;case 270:a.dot=$root.CoreML.Specification.DotProductLayerParams.decode(e,e.uint32());break;case 280:a.reduce=$root.CoreML.Specification.ReduceLayerParams.decode(e,e.uint32());break;case 290:a.loadConstant=$root.CoreML.Specification.LoadConstantLayerParams.decode(e,e.uint32());break;case 300:a.reshape=$root.CoreML.Specification.ReshapeLayerParams.decode(e,e.uint32());break;case 301:a.flatten=$root.CoreML.Specification.FlattenLayerParams.decode(e,e.uint32());break;case 310:a.permute=$root.CoreML.Specification.PermuteLayerParams.decode(e,e.uint32());break;case 320:a.concat=$root.CoreML.Specification.ConcatLayerParams.decode(e,e.uint32());break;case 330:a.split=$root.CoreML.Specification.SplitLayerParams.decode(e,e.uint32());break;case 340:a.sequenceRepeat=$root.CoreML.Specification.SequenceRepeatLayerParams.decode(e,e.uint32());break;case 345:a.reorganizeData=$root.CoreML.Specification.ReorganizeDataLayerParams.decode(e,e.uint32());break;case 350:a.slice=$root.CoreML.Specification.SliceLayerParams.decode(e,e.uint32());break;case 400:a.simpleRecurrent=$root.CoreML.Specification.SimpleRecurrentLayerParams.decode(e,e.uint32());break;case 410:a.gru=$root.CoreML.Specification.GRULayerParams.decode(e,e.uint32());break;case 420:a.uniDirectionalLSTM=$root.CoreML.Specification.UniDirectionalLSTMLayerParams.decode(e,e.uint32());break;case 430:a.biDirectionalLSTM=$root.CoreML.Specification.BiDirectionalLSTMLayerParams.decode(e,e.uint32());break;case 500:a.custom=$root.CoreML.Specification.CustomLayerParams.decode(e,e.uint32());break;case 600:a.copy=$root.CoreML.Specification.CopyLayerParams.decode(e,e.uint32());break;case 605:a.branch=$root.CoreML.Specification.BranchLayerParams.decode(e,e.uint32());break;case 615:a.loop=$root.CoreML.Specification.LoopLayerParams.decode(e,e.uint32());break;case 620:a.loopBreak=$root.CoreML.Specification.LoopBreakLayerParams.decode(e,e.uint32());break;case 625:a.loopContinue=$root.CoreML.Specification.LoopContinueLayerParams.decode(e,e.uint32());break;case 635:a.rangeStatic=$root.CoreML.Specification.RangeStaticLayerParams.decode(e,e.uint32());break;case 640:a.rangeDynamic=$root.CoreML.Specification.RangeDynamicLayerParams.decode(e,e.uint32());break;case 660:a.clip=$root.CoreML.Specification.ClipLayerParams.decode(e,e.uint32());break;case 665:a.ceil=$root.CoreML.Specification.CeilLayerParams.decode(e,e.uint32());break;case 670:a.floor=$root.CoreML.Specification.FloorLayerParams.decode(e,e.uint32());break;case 680:a.sign=$root.CoreML.Specification.SignLayerParams.decode(e,e.uint32());break;case 685:a.round=$root.CoreML.Specification.RoundLayerParams.decode(e,e.uint32());break;case 700:a.exp2=$root.CoreML.Specification.Exp2LayerParams.decode(e,e.uint32());break;case 710:a.sin=$root.CoreML.Specification.SinLayerParams.decode(e,e.uint32());break;case 715:a.cos=$root.CoreML.Specification.CosLayerParams.decode(e,e.uint32());break;case 720:a.tan=$root.CoreML.Specification.TanLayerParams.decode(e,e.uint32());break;case 730:a.asin=$root.CoreML.Specification.AsinLayerParams.decode(e,e.uint32());break;case 735:a.acos=$root.CoreML.Specification.AcosLayerParams.decode(e,e.uint32());break;case 740:a.atan=$root.CoreML.Specification.AtanLayerParams.decode(e,e.uint32());break;case 750:a.sinh=$root.CoreML.Specification.SinhLayerParams.decode(e,e.uint32());break;case 755:a.cosh=$root.CoreML.Specification.CoshLayerParams.decode(e,e.uint32());break;case 760:a.tanh=$root.CoreML.Specification.TanhLayerParams.decode(e,e.uint32());break;case 770:a.asinh=$root.CoreML.Specification.AsinhLayerParams.decode(e,e.uint32());break;case 775:a.acosh=$root.CoreML.Specification.AcoshLayerParams.decode(e,e.uint32());break;case 780:a.atanh=$root.CoreML.Specification.AtanhLayerParams.decode(e,e.uint32());break;case 790:a.erf=$root.CoreML.Specification.ErfLayerParams.decode(e,e.uint32());break;case 795:a.gelu=$root.CoreML.Specification.GeluLayerParams.decode(e,e.uint32());break;case 815:a.equal=$root.CoreML.Specification.EqualLayerParams.decode(e,e.uint32());break;case 820:a.notEqual=$root.CoreML.Specification.NotEqualLayerParams.decode(e,e.uint32());break;case 825:a.lessThan=$root.CoreML.Specification.LessThanLayerParams.decode(e,e.uint32());break;case 827:a.lessEqual=$root.CoreML.Specification.LessEqualLayerParams.decode(e,e.uint32());break;case 830:a.greaterThan=$root.CoreML.Specification.GreaterThanLayerParams.decode(e,e.uint32());break;case 832:a.greaterEqual=$root.CoreML.Specification.GreaterEqualLayerParams.decode(e,e.uint32());break;case 840:a.logicalOr=$root.CoreML.Specification.LogicalOrLayerParams.decode(e,e.uint32());break;case 845:a.logicalXor=$root.CoreML.Specification.LogicalXorLayerParams.decode(e,e.uint32());break;case 850:a.logicalNot=$root.CoreML.Specification.LogicalNotLayerParams.decode(e,e.uint32());break;case 855:a.logicalAnd=$root.CoreML.Specification.LogicalAndLayerParams.decode(e,e.uint32());break;case 865:a.modBroadcastable=$root.CoreML.Specification.ModBroadcastableLayerParams.decode(e,e.uint32());break;case 870:a.minBroadcastable=$root.CoreML.Specification.MinBroadcastableLayerParams.decode(e,e.uint32());break;case 875:a.maxBroadcastable=$root.CoreML.Specification.MaxBroadcastableLayerParams.decode(e,e.uint32());break;case 880:a.addBroadcastable=$root.CoreML.Specification.AddBroadcastableLayerParams.decode(e,e.uint32());break;case 885:a.powBroadcastable=$root.CoreML.Specification.PowBroadcastableLayerParams.decode(e,e.uint32());break;case 890:a.divideBroadcastable=$root.CoreML.Specification.DivideBroadcastableLayerParams.decode(e,e.uint32());break;case 895:a.floorDivBroadcastable=$root.CoreML.Specification.FloorDivBroadcastableLayerParams.decode(e,e.uint32());break;case 900:a.multiplyBroadcastable=$root.CoreML.Specification.MultiplyBroadcastableLayerParams.decode(e,e.uint32());break;case 905:a.subtractBroadcastable=$root.CoreML.Specification.SubtractBroadcastableLayerParams.decode(e,e.uint32());break;case 920:a.tile=$root.CoreML.Specification.TileLayerParams.decode(e,e.uint32());break;case 925:a.stack=$root.CoreML.Specification.StackLayerParams.decode(e,e.uint32());break;case 930:a.gather=$root.CoreML.Specification.GatherLayerParams.decode(e,e.uint32());break;case 935:a.scatter=$root.CoreML.Specification.ScatterLayerParams.decode(e,e.uint32());break;case 940:a.gatherND=$root.CoreML.Specification.GatherNDLayerParams.decode(e,e.uint32());break;case 945:a.scatterND=$root.CoreML.Specification.ScatterNDLayerParams.decode(e,e.uint32());break;case 950:a.softmaxND=$root.CoreML.Specification.SoftmaxNDLayerParams.decode(e,e.uint32());break;case 952:a.gatherAlongAxis=$root.CoreML.Specification.GatherAlongAxisLayerParams.decode(e,e.uint32());break;case 954:a.scatterAlongAxis=$root.CoreML.Specification.ScatterAlongAxisLayerParams.decode(e,e.uint32());break;case 960:a.reverse=$root.CoreML.Specification.ReverseLayerParams.decode(e,e.uint32());break;case 965:a.reverseSeq=$root.CoreML.Specification.ReverseSeqLayerParams.decode(e,e.uint32());break;case 975:a.splitND=$root.CoreML.Specification.SplitNDLayerParams.decode(e,e.uint32());break;case 980:a.concatND=$root.CoreML.Specification.ConcatNDLayerParams.decode(e,e.uint32());break;case 985:a.transpose=$root.CoreML.Specification.TransposeLayerParams.decode(e,e.uint32());break;case 995:a.sliceStatic=$root.CoreML.Specification.SliceStaticLayerParams.decode(e,e.uint32());break;case 1e3:a.sliceDynamic=$root.CoreML.Specification.SliceDynamicLayerParams.decode(e,e.uint32());break;case 1005:a.slidingWindows=$root.CoreML.Specification.SlidingWindowsLayerParams.decode(e,e.uint32());break;case 1015:a.topK=$root.CoreML.Specification.TopKLayerParams.decode(e,e.uint32());break;case 1020:a.argMin=$root.CoreML.Specification.ArgMinLayerParams.decode(e,e.uint32());break;case 1025:a.argMax=$root.CoreML.Specification.ArgMaxLayerParams.decode(e,e.uint32());break;case 1040:a.embeddingND=$root.CoreML.Specification.EmbeddingNDLayerParams.decode(e,e.uint32());break;case 1045:a.batchedMatmul=$root.CoreML.Specification.BatchedMatMulLayerParams.decode(e,e.uint32());break;case 1065:a.getShape=$root.CoreML.Specification.GetShapeLayerParams.decode(e,e.uint32());break;case 1070:a.loadConstantND=$root.CoreML.Specification.LoadConstantNDLayerParams.decode(e,e.uint32());break;case 1080:a.fillLike=$root.CoreML.Specification.FillLikeLayerParams.decode(e,e.uint32());break;case 1085:a.fillStatic=$root.CoreML.Specification.FillStaticLayerParams.decode(e,e.uint32());break;case 1090:a.fillDynamic=$root.CoreML.Specification.FillDynamicLayerParams.decode(e,e.uint32());break;case 1100:a.broadcastToLike=$root.CoreML.Specification.BroadcastToLikeLayerParams.decode(e,e.uint32());break;case 1105:a.broadcastToStatic=$root.CoreML.Specification.BroadcastToStaticLayerParams.decode(e,e.uint32());break;case 1110:a.broadcastToDynamic=$root.CoreML.Specification.BroadcastToDynamicLayerParams.decode(e,e.uint32());break;case 1120:a.squeeze=$root.CoreML.Specification.SqueezeLayerParams.decode(e,e.uint32());break;case 1125:a.expandDims=$root.CoreML.Specification.ExpandDimsLayerParams.decode(e,e.uint32());break;case 1130:a.flattenTo2D=$root.CoreML.Specification.FlattenTo2DLayerParams.decode(e,e.uint32());break;case 1135:a.reshapeLike=$root.CoreML.Specification.ReshapeLikeLayerParams.decode(e,e.uint32());break;case 1140:a.reshapeStatic=$root.CoreML.Specification.ReshapeStaticLayerParams.decode(e,e.uint32());break;case 1145:a.reshapeDynamic=$root.CoreML.Specification.ReshapeDynamicLayerParams.decode(e,e.uint32());break;case 1150:a.rankPreservingReshape=$root.CoreML.Specification.RankPreservingReshapeLayerParams.decode(e,e.uint32());break;case 1155:a.constantPad=$root.CoreML.Specification.ConstantPaddingLayerParams.decode(e,e.uint32());break;case 1170:a.randomNormalLike=$root.CoreML.Specification.RandomNormalLikeLayerParams.decode(e,e.uint32());break;case 1175:a.randomNormalStatic=$root.CoreML.Specification.RandomNormalStaticLayerParams.decode(e,e.uint32());break;case 1180:a.randomNormalDynamic=$root.CoreML.Specification.RandomNormalDynamicLayerParams.decode(e,e.uint32());break;case 1190:a.randomUniformLike=$root.CoreML.Specification.RandomUniformLikeLayerParams.decode(e,e.uint32());break;case 1195:a.randomUniformStatic=$root.CoreML.Specification.RandomUniformStaticLayerParams.decode(e,e.uint32());break;case 1200:a.randomUniformDynamic=$root.CoreML.Specification.RandomUniformDynamicLayerParams.decode(e,e.uint32());break;case 1210:a.randomBernoulliLike=$root.CoreML.Specification.RandomBernoulliLikeLayerParams.decode(e,e.uint32());break;case 1215:a.randomBernoulliStatic=$root.CoreML.Specification.RandomBernoulliStaticLayerParams.decode(e,e.uint32());break;case 1220:a.randomBernoulliDynamic=$root.CoreML.Specification.RandomBernoulliDynamicLayerParams.decode(e,e.uint32());break;case 1230:a.categoricalDistribution=$root.CoreML.Specification.CategoricalDistributionLayerParams.decode(e,e.uint32());break;case 1250:a.reduceL1=$root.CoreML.Specification.ReduceL1LayerParams.decode(e,e.uint32());break;case 1255:a.reduceL2=$root.CoreML.Specification.ReduceL2LayerParams.decode(e,e.uint32());break;case 1260:a.reduceMax=$root.CoreML.Specification.ReduceMaxLayerParams.decode(e,e.uint32());break;case 1265:a.reduceMin=$root.CoreML.Specification.ReduceMinLayerParams.decode(e,e.uint32());break;case 1270:a.reduceSum=$root.CoreML.Specification.ReduceSumLayerParams.decode(e,e.uint32());break;case 1275:a.reduceProd=$root.CoreML.Specification.ReduceProdLayerParams.decode(e,e.uint32());break;case 1280:a.reduceMean=$root.CoreML.Specification.ReduceMeanLayerParams.decode(e,e.uint32());break;case 1285:a.reduceLogSum=$root.CoreML.Specification.ReduceLogSumLayerParams.decode(e,e.uint32());break;case 1290:a.reduceSumSquare=$root.CoreML.Specification.ReduceSumSquareLayerParams.decode(e,e.uint32());break;case 1295:a.reduceLogSumExp=$root.CoreML.Specification.ReduceLogSumExpLayerParams.decode(e,e.uint32());break;case 1313:a.whereNonZero=$root.CoreML.Specification.WhereNonZeroLayerParams.decode(e,e.uint32());break;case 1315:a.matrixBandPart=$root.CoreML.Specification.MatrixBandPartLayerParams.decode(e,e.uint32());break;case 1320:a.lowerTriangular=$root.CoreML.Specification.LowerTriangularLayerParams.decode(e,e.uint32());break;case 1325:a.upperTriangular=$root.CoreML.Specification.UpperTriangularLayerParams.decode(e,e.uint32());break;case 1330:a.whereBroadcastable=$root.CoreML.Specification.WhereBroadcastableLayerParams.decode(e,e.uint32());break;case 1350:a.layerNormalization=$root.CoreML.Specification.LayerNormalizationLayerParams.decode(e,e.uint32());break;case 1400:a.NonMaximumSuppression=$root.CoreML.Specification.NonMaximumSuppressionLayerParams.decode(e,e.uint32());break;case 1450:a.oneHot=$root.CoreML.Specification.OneHotLayerParams.decode(e,e.uint32());break;case 1455:a.cumSum=$root.CoreML.Specification.CumSumLayerParams.decode(e,e.uint32());break;case 1460:a.clampedReLU=$root.CoreML.Specification.ClampedReLULayerParams.decode(e,e.uint32());break;case 1461:a.argSort=$root.CoreML.Specification.ArgSortLayerParams.decode(e,e.uint32());break;case 1465:a.pooling3d=$root.CoreML.Specification.Pooling3DLayerParams.decode(e,e.uint32());break;case 1466:a.globalPooling3d=$root.CoreML.Specification.GlobalPooling3DLayerParams.decode(e,e.uint32());break;case 1470:a.sliceBySize=$root.CoreML.Specification.SliceBySizeLayerParams.decode(e,e.uint32());break;case 1471:a.convolution3d=$root.CoreML.Specification.Convolution3DLayerParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetworkLayer.prototype.name="",$root.CoreML.Specification.NeuralNetworkLayer.prototype.isUpdatable=!1,$root.CoreML.Specification.BranchLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BranchLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.ifBranch=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;case 2:a.elseBranch=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BranchLayerParams.prototype.ifBranch=null,$root.CoreML.Specification.BranchLayerParams.prototype.elseBranch=null,$root.CoreML.Specification.LoopLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LoopLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.maxLoopIterations=e.uint64();break;case 2:a.conditionVar=e.string();break;case 3:a.conditionNetwork=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;case 4:a.bodyNetwork=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LoopLayerParams.prototype.maxLoopIterations=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LoopLayerParams.prototype.conditionVar="",$root.CoreML.Specification.LoopLayerParams.prototype.conditionNetwork=null,$root.CoreML.Specification.LoopLayerParams.prototype.bodyNetwork=null,$root.CoreML.Specification.LoopBreakLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LoopBreakLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.LoopContinueLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LoopContinueLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.CopyLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CopyLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.GreaterThanLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GreaterThanLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 2:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GreaterThanLayerParams.prototype.alpha=0,$root.CoreML.Specification.GreaterEqualLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GreaterEqualLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 2:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GreaterEqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.LessThanLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LessThanLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 2:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LessThanLayerParams.prototype.alpha=0,$root.CoreML.Specification.LessEqualLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LessEqualLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 2:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LessEqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.EqualLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.EqualLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.EqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.NotEqualLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.NotEqualLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NotEqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.LogicalAndLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LogicalAndLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.LogicalOrLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LogicalOrLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.LogicalXorLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LogicalXorLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.LogicalNotLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LogicalNotLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.BorderAmounts=class{constructor(){this.borderAmounts=[]}static decode(e,o){const a=new $root.CoreML.Specification.BorderAmounts,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.borderAmounts.push($root.CoreML.Specification.BorderAmounts.EdgeSizes.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BorderAmounts.EdgeSizes=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BorderAmounts.EdgeSizes,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.startEdgeSize=e.uint64();break;case 2:a.endEdgeSize=e.uint64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BorderAmounts.EdgeSizes.prototype.startEdgeSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BorderAmounts.EdgeSizes.prototype.endEdgeSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ValidPadding=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ValidPadding,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.paddingAmounts=$root.CoreML.Specification.BorderAmounts.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ValidPadding.prototype.paddingAmounts=null,$root.CoreML.Specification.SamePadding=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SamePadding,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.asymmetryMode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SamePadding.prototype.asymmetryMode=0,$root.CoreML.Specification.SamePadding.SamePaddingMode={BOTTOM_RIGHT_HEAVY:0,TOP_LEFT_HEAVY:1},$root.CoreML.Specification.SamplingMode=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SamplingMode,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.samplingMethod=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SamplingMode.prototype.samplingMethod=0,$root.CoreML.Specification.SamplingMode.Method={STRICT_ALIGN_ENDPOINTS_MODE:0,ALIGN_ENDPOINTS_MODE:1,UPSAMPLE_MODE:2,ROI_ALIGN_MODE:3},$root.CoreML.Specification.BoxCoordinatesMode=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BoxCoordinatesMode,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.boxMode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BoxCoordinatesMode.prototype.boxMode=0,$root.CoreML.Specification.BoxCoordinatesMode.Coordinates={CORNERS_HEIGHT_FIRST:0,CORNERS_WIDTH_FIRST:1,CENTER_SIZE_HEIGHT_FIRST:2,CENTER_SIZE_WIDTH_FIRST:3},$root.CoreML.Specification.WeightParams=class{constructor(){this.floatValue=[]}static decode(e,o){const a=new $root.CoreML.Specification.WeightParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.floatValue=e.floats(a.floatValue,t);break;case 2:a.float16Value=e.bytes();break;case 30:a.rawValue=e.bytes();break;case 31:a.int8RawValue=e.bytes();break;case 40:a.quantization=$root.CoreML.Specification.QuantizationParams.decode(e,e.uint32());break;case 50:a.isUpdatable=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.WeightParams.prototype.float16Value=new Uint8Array([]),$root.CoreML.Specification.WeightParams.prototype.rawValue=new Uint8Array([]),$root.CoreML.Specification.WeightParams.prototype.int8RawValue=new Uint8Array([]),$root.CoreML.Specification.WeightParams.prototype.quantization=null,$root.CoreML.Specification.WeightParams.prototype.isUpdatable=!1,$root.CoreML.Specification.QuantizationParams=class{constructor(){}get QuantizationType(){return $root.CoreML.Specification.QuantizationParams.QuantizationTypeSet=$root.CoreML.Specification.QuantizationParams.QuantizationTypeSet||new Set(["linearQuantization","lookupTableQuantization"]),Object.keys(this).find(e=>$root.CoreML.Specification.QuantizationParams.QuantizationTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.QuantizationParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.numberOfBits=e.uint64();break;case 101:a.linearQuantization=$root.CoreML.Specification.LinearQuantizationParams.decode(e,e.uint32());break;case 102:a.lookupTableQuantization=$root.CoreML.Specification.LookUpTableQuantizationParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.QuantizationParams.prototype.numberOfBits=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LinearQuantizationParams=class{constructor(){this.scale=[],this.bias=[]}static decode(e,o){const a=new $root.CoreML.Specification.LinearQuantizationParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.scale=e.floats(a.scale,t);break;case 2:a.bias=e.floats(a.bias,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LookUpTableQuantizationParams=class{constructor(){this.floatValue=[]}static decode(e,o){const a=new $root.CoreML.Specification.LookUpTableQuantizationParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.floatValue=e.floats(a.floatValue,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ConvolutionLayerParams=class{constructor(){this.kernelSize=[],this.stride=[],this.dilationFactor=[],this.outputShape=[]}get ConvolutionPaddingType(){return $root.CoreML.Specification.ConvolutionLayerParams.ConvolutionPaddingTypeSet=$root.CoreML.Specification.ConvolutionLayerParams.ConvolutionPaddingTypeSet||new Set(["valid","same"]),Object.keys(this).find(e=>$root.CoreML.Specification.ConvolutionLayerParams.ConvolutionPaddingTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.ConvolutionLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.outputChannels=e.uint64();break;case 2:a.kernelChannels=e.uint64();break;case 10:a.nGroups=e.uint64();break;case 20:a.kernelSize=e.array(a.kernelSize,()=>e.uint64(),t);break;case 30:a.stride=e.array(a.stride,()=>e.uint64(),t);break;case 40:a.dilationFactor=e.array(a.dilationFactor,()=>e.uint64(),t);break;case 50:a.valid=$root.CoreML.Specification.ValidPadding.decode(e,e.uint32());break;case 51:a.same=$root.CoreML.Specification.SamePadding.decode(e,e.uint32());break;case 60:a.isDeconvolution=e.bool();break;case 70:a.hasBias=e.bool();break;case 90:a.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 91:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 100:a.outputShape=e.array(a.outputShape,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ConvolutionLayerParams.prototype.outputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ConvolutionLayerParams.prototype.kernelChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ConvolutionLayerParams.prototype.nGroups=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ConvolutionLayerParams.prototype.isDeconvolution=!1,$root.CoreML.Specification.ConvolutionLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.ConvolutionLayerParams.prototype.weights=null,$root.CoreML.Specification.ConvolutionLayerParams.prototype.bias=null,$root.CoreML.Specification.Convolution3DLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.Convolution3DLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.outputChannels=e.int32();break;case 2:a.inputChannels=e.int32();break;case 10:a.nGroups=e.int32();break;case 20:a.kernelDepth=e.int32();break;case 21:a.kernelHeight=e.int32();break;case 22:a.kernelWidth=e.int32();break;case 31:a.strideDepth=e.int32();break;case 32:a.strideHeight=e.int32();break;case 33:a.strideWidth=e.int32();break;case 40:a.dilationDepth=e.int32();break;case 41:a.dilationHeight=e.int32();break;case 42:a.dilationWidth=e.int32();break;case 50:a.hasBias=e.bool();break;case 60:a.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 61:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 70:a.paddingType=e.int32();break;case 80:a.customPaddingFront=e.int32();break;case 81:a.customPaddingBack=e.int32();break;case 82:a.customPaddingTop=e.int32();break;case 83:a.customPaddingBottom=e.int32();break;case 84:a.customPaddingLeft=e.int32();break;case 85:a.customPaddingRight=e.int32();break;case 86:a.isDeconvolution=e.bool();break;case 87:a.outputShape=e.array(a.outputShape,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Convolution3DLayerParams.prototype.outputChannels=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.inputChannels=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.nGroups=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.kernelDepth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.kernelHeight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.kernelWidth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.strideDepth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.strideHeight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.strideWidth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.dilationDepth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.dilationHeight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.dilationWidth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.Convolution3DLayerParams.prototype.weights=null,$root.CoreML.Specification.Convolution3DLayerParams.prototype.bias=null,$root.CoreML.Specification.Convolution3DLayerParams.prototype.paddingType=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingFront=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingBack=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingTop=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingBottom=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingLeft=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingRight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.isDeconvolution=!1,$root.CoreML.Specification.Convolution3DLayerParams.PaddingType={CUSTOM:0,VALID:1,SAME:2},$root.CoreML.Specification.InnerProductLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.InnerProductLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputChannels=e.uint64();break;case 2:a.outputChannels=e.uint64();break;case 10:a.hasBias=e.bool();break;case 20:a.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 22:a.int8DynamicQuantize=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.InnerProductLayerParams.prototype.inputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.InnerProductLayerParams.prototype.outputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.InnerProductLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.InnerProductLayerParams.prototype.weights=null,$root.CoreML.Specification.InnerProductLayerParams.prototype.bias=null,$root.CoreML.Specification.InnerProductLayerParams.prototype.int8DynamicQuantize=!1,$root.CoreML.Specification.EmbeddingLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.EmbeddingLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputDim=e.uint64();break;case 2:a.outputChannels=e.uint64();break;case 10:a.hasBias=e.bool();break;case 20:a.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.EmbeddingLayerParams.prototype.inputDim=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingLayerParams.prototype.outputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.EmbeddingLayerParams.prototype.weights=null,$root.CoreML.Specification.EmbeddingLayerParams.prototype.bias=null,$root.CoreML.Specification.EmbeddingNDLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.EmbeddingNDLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.vocabSize=e.uint64();break;case 2:a.embeddingSize=e.uint64();break;case 3:a.hasBias=e.bool();break;case 20:a.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.vocabSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.embeddingSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.weights=null,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.bias=null,$root.CoreML.Specification.BatchnormLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BatchnormLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.channels=e.uint64();break;case 5:a.computeMeanVar=e.bool();break;case 6:a.instanceNormalization=e.bool();break;case 10:a.epsilon=e.float();break;case 15:a.gamma=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 16:a.beta=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 17:a.mean=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 18:a.variance=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BatchnormLayerParams.prototype.channels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BatchnormLayerParams.prototype.computeMeanVar=!1,$root.CoreML.Specification.BatchnormLayerParams.prototype.instanceNormalization=!1,$root.CoreML.Specification.BatchnormLayerParams.prototype.epsilon=0,$root.CoreML.Specification.BatchnormLayerParams.prototype.gamma=null,$root.CoreML.Specification.BatchnormLayerParams.prototype.beta=null,$root.CoreML.Specification.BatchnormLayerParams.prototype.mean=null,$root.CoreML.Specification.BatchnormLayerParams.prototype.variance=null,$root.CoreML.Specification.PoolingLayerParams=class{constructor(){this.kernelSize=[],this.stride=[]}get PoolingPaddingType(){return $root.CoreML.Specification.PoolingLayerParams.PoolingPaddingTypeSet=$root.CoreML.Specification.PoolingLayerParams.PoolingPaddingTypeSet||new Set(["valid","same","includeLastPixel"]),Object.keys(this).find(e=>$root.CoreML.Specification.PoolingLayerParams.PoolingPaddingTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.PoolingLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.type=e.int32();break;case 10:a.kernelSize=e.array(a.kernelSize,()=>e.uint64(),t);break;case 20:a.stride=e.array(a.stride,()=>e.uint64(),t);break;case 30:a.valid=$root.CoreML.Specification.ValidPadding.decode(e,e.uint32());break;case 31:a.same=$root.CoreML.Specification.SamePadding.decode(e,e.uint32());break;case 32:a.includeLastPixel=$root.CoreML.Specification.PoolingLayerParams.ValidCompletePadding.decode(e,e.uint32());break;case 50:a.avgPoolExcludePadding=e.bool();break;case 60:a.globalPooling=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.PoolingLayerParams.prototype.type=0,$root.CoreML.Specification.PoolingLayerParams.prototype.avgPoolExcludePadding=!1,$root.CoreML.Specification.PoolingLayerParams.prototype.globalPooling=!1,$root.CoreML.Specification.PoolingLayerParams.PoolingType={MAX:0,AVERAGE:1,L2:2},$root.CoreML.Specification.PoolingLayerParams.ValidCompletePadding=class{constructor(){this.paddingAmounts=[]}static decode(e,o){const a=new $root.CoreML.Specification.PoolingLayerParams.ValidCompletePadding,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.paddingAmounts=e.array(a.paddingAmounts,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Pooling3DLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.Pooling3DLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.type=e.int32();break;case 2:a.kernelDepth=e.int32();break;case 3:a.kernelHeight=e.int32();break;case 4:a.kernelWidth=e.int32();break;case 5:a.strideDepth=e.int32();break;case 6:a.strideHeight=e.int32();break;case 7:a.strideWidth=e.int32();break;case 15:a.paddingType=e.int32();break;case 8:a.customPaddingFront=e.int32();break;case 9:a.customPaddingBack=e.int32();break;case 10:a.customPaddingTop=e.int32();break;case 11:a.customPaddingBottom=e.int32();break;case 12:a.customPaddingLeft=e.int32();break;case 13:a.customPaddingRight=e.int32();break;case 14:a.countExcludePadding=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Pooling3DLayerParams.prototype.type=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.kernelDepth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.kernelHeight=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.kernelWidth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.strideDepth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.strideHeight=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.strideWidth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.paddingType=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingFront=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingBack=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingTop=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingBottom=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingLeft=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingRight=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.countExcludePadding=!1,$root.CoreML.Specification.Pooling3DLayerParams.PoolingType3D={MAX:0,AVERAGE:1},$root.CoreML.Specification.Pooling3DLayerParams.Pooling3DPaddingType={CUSTOM:0,VALID:1,SAME:2},$root.CoreML.Specification.GlobalPooling3DLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GlobalPooling3DLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.type=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GlobalPooling3DLayerParams.prototype.type=0,$root.CoreML.Specification.GlobalPooling3DLayerParams.GlobalPoolingType3D={MAX:0,AVERAGE:1},$root.CoreML.Specification.PaddingLayerParams=class{constructor(){}get PaddingType(){return $root.CoreML.Specification.PaddingLayerParams.PaddingTypeSet=$root.CoreML.Specification.PaddingLayerParams.PaddingTypeSet||new Set(["constant","reflection","replication"]),Object.keys(this).find(e=>$root.CoreML.Specification.PaddingLayerParams.PaddingTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.PaddingLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.constant=$root.CoreML.Specification.PaddingLayerParams.PaddingConstant.decode(e,e.uint32());break;case 2:a.reflection=$root.CoreML.Specification.PaddingLayerParams.PaddingReflection.decode(e,e.uint32());break;case 3:a.replication=$root.CoreML.Specification.PaddingLayerParams.PaddingReplication.decode(e,e.uint32());break;case 10:a.paddingAmounts=$root.CoreML.Specification.BorderAmounts.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.PaddingLayerParams.prototype.paddingAmounts=null,$root.CoreML.Specification.PaddingLayerParams.PaddingConstant=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.PaddingLayerParams.PaddingConstant,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.value=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.PaddingLayerParams.PaddingConstant.prototype.value=0,$root.CoreML.Specification.PaddingLayerParams.PaddingReflection=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.PaddingLayerParams.PaddingReflection,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.PaddingLayerParams.PaddingReplication=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.PaddingLayerParams.PaddingReplication,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ConcatLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ConcatLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 100:a.sequenceConcat=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ConcatLayerParams.prototype.sequenceConcat=!1,$root.CoreML.Specification.LRNLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LRNLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;case 2:a.beta=e.float();break;case 3:a.localSize=e.uint64();break;case 4:a.k=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LRNLayerParams.prototype.alpha=0,$root.CoreML.Specification.LRNLayerParams.prototype.beta=0,$root.CoreML.Specification.LRNLayerParams.prototype.localSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LRNLayerParams.prototype.k=0,$root.CoreML.Specification.SoftmaxLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SoftmaxLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SplitLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SplitLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.nOutputs=e.uint64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SplitLayerParams.prototype.nOutputs=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.AddLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AddLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.AddLayerParams.prototype.alpha=0,$root.CoreML.Specification.MultiplyLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MultiplyLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.MultiplyLayerParams.prototype.alpha=0,$root.CoreML.Specification.UnaryFunctionLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.UnaryFunctionLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.type=e.int32();break;case 2:a.alpha=e.float();break;case 3:a.epsilon=e.float();break;case 4:a.shift=e.float();break;case 5:a.scale=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.type=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.alpha=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.epsilon=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.shift=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.scale=0,$root.CoreML.Specification.UnaryFunctionLayerParams.Operation={SQRT:0,RSQRT:1,INVERSE:2,POWER:3,EXP:4,LOG:5,ABS:6,THRESHOLD:7},$root.CoreML.Specification.UpsampleLayerParams=class{constructor(){this.scalingFactor=[],this.fractionalScalingFactor=[]}static decode(e,o){const a=new $root.CoreML.Specification.UpsampleLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.scalingFactor=e.array(a.scalingFactor,()=>e.uint64(),t);break;case 7:a.fractionalScalingFactor=e.floats(a.fractionalScalingFactor,t);break;case 5:a.mode=e.int32();break;case 6:a.linearUpsampleMode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.UpsampleLayerParams.prototype.mode=0,$root.CoreML.Specification.UpsampleLayerParams.prototype.linearUpsampleMode=0,$root.CoreML.Specification.UpsampleLayerParams.InterpolationMode={NN:0,BILINEAR:1},$root.CoreML.Specification.UpsampleLayerParams.LinearUpsampleMode={DEFAULT:0,ALIGN_CORNERS_TRUE:1,ALIGN_CORNERS_FALSE:2},$root.CoreML.Specification.ResizeBilinearLayerParams=class{constructor(){this.targetSize=[]}static decode(e,o){const a=new $root.CoreML.Specification.ResizeBilinearLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.targetSize=e.array(a.targetSize,()=>e.uint64(),t);break;case 2:a.mode=$root.CoreML.Specification.SamplingMode.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ResizeBilinearLayerParams.prototype.mode=null,$root.CoreML.Specification.CropResizeLayerParams=class{constructor(){this.targetSize=[]}static decode(e,o){const a=new $root.CoreML.Specification.CropResizeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.targetSize=e.array(a.targetSize,()=>e.uint64(),t);break;case 2:a.normalizedCoordinates=e.bool();break;case 3:a.mode=$root.CoreML.Specification.SamplingMode.decode(e,e.uint32());break;case 4:a.boxIndicesMode=$root.CoreML.Specification.BoxCoordinatesMode.decode(e,e.uint32());break;case 5:a.spatialScale=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CropResizeLayerParams.prototype.normalizedCoordinates=!1,$root.CoreML.Specification.CropResizeLayerParams.prototype.mode=null,$root.CoreML.Specification.CropResizeLayerParams.prototype.boxIndicesMode=null,$root.CoreML.Specification.CropResizeLayerParams.prototype.spatialScale=0,$root.CoreML.Specification.BiasLayerParams=class{constructor(){this.shape=[]}static decode(e,o){const a=new $root.CoreML.Specification.BiasLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shape=e.array(a.shape,()=>e.uint64(),t);break;case 2:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BiasLayerParams.prototype.bias=null,$root.CoreML.Specification.ScaleLayerParams=class{constructor(){this.shapeScale=[],this.shapeBias=[]}static decode(e,o){const a=new $root.CoreML.Specification.ScaleLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shapeScale=e.array(a.shapeScale,()=>e.uint64(),t);break;case 2:a.scale=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 3:a.hasBias=e.bool();break;case 4:a.shapeBias=e.array(a.shapeBias,()=>e.uint64(),t);break;case 5:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ScaleLayerParams.prototype.scale=null,$root.CoreML.Specification.ScaleLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.ScaleLayerParams.prototype.bias=null,$root.CoreML.Specification.LoadConstantLayerParams=class{constructor(){this.shape=[]}static decode(e,o){const a=new $root.CoreML.Specification.LoadConstantLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shape=e.array(a.shape,()=>e.uint64(),t);break;case 2:a.data=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LoadConstantLayerParams.prototype.data=null,$root.CoreML.Specification.L2NormalizeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.L2NormalizeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.epsilon=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.L2NormalizeLayerParams.prototype.epsilon=0,$root.CoreML.Specification.FlattenLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FlattenLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.mode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FlattenLayerParams.prototype.mode=0,$root.CoreML.Specification.FlattenLayerParams.FlattenOrder={CHANNEL_FIRST:0,CHANNEL_LAST:1},$root.CoreML.Specification.ReshapeLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReshapeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.targetShape=e.array(a.targetShape,()=>e.int64(),t);break;case 2:a.mode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReshapeLayerParams.prototype.mode=0,$root.CoreML.Specification.ReshapeLayerParams.ReshapeOrder={CHANNEL_FIRST:0,CHANNEL_LAST:1},$root.CoreML.Specification.PermuteLayerParams=class{constructor(){this.axis=[]}static decode(e,o){const a=new $root.CoreML.Specification.PermuteLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.array(a.axis,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReorganizeDataLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ReorganizeDataLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.mode=e.int32();break;case 2:a.blockSize=e.uint64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReorganizeDataLayerParams.prototype.mode=0,$root.CoreML.Specification.ReorganizeDataLayerParams.prototype.blockSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ReorganizeDataLayerParams.ReorganizationType={SPACE_TO_DEPTH:0,DEPTH_TO_SPACE:1,PIXEL_SHUFFLE:2},$root.CoreML.Specification.SliceLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SliceLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.startIndex=e.int64();break;case 2:a.endIndex=e.int64();break;case 3:a.stride=e.uint64();break;case 4:a.axis=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SliceLayerParams.prototype.startIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SliceLayerParams.prototype.endIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SliceLayerParams.prototype.stride=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SliceLayerParams.prototype.axis=0,$root.CoreML.Specification.SliceLayerParams.SliceAxis={CHANNEL_AXIS:0,HEIGHT_AXIS:1,WIDTH_AXIS:2},$root.CoreML.Specification.ReduceLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ReduceLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.mode=e.int32();break;case 2:a.epsilon=e.float();break;case 3:a.axis=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceLayerParams.prototype.mode=0,$root.CoreML.Specification.ReduceLayerParams.prototype.epsilon=0,$root.CoreML.Specification.ReduceLayerParams.prototype.axis=0,$root.CoreML.Specification.ReduceLayerParams.ReduceOperation={SUM:0,AVG:1,PROD:2,LOGSUM:3,SUMSQUARE:4,L1:5,L2:6,MAX:7,MIN:8,ARGMAX:9},$root.CoreML.Specification.ReduceLayerParams.ReduceAxis={CHW:0,HW:1,C:2,H:3,W:4},$root.CoreML.Specification.CropLayerParams=class{constructor(){this.offset=[]}static decode(e,o){const a=new $root.CoreML.Specification.CropLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.cropAmounts=$root.CoreML.Specification.BorderAmounts.decode(e,e.uint32());break;case 5:a.offset=e.array(a.offset,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CropLayerParams.prototype.cropAmounts=null,$root.CoreML.Specification.AverageLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AverageLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.MaxLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MaxLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.MinLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MinLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.DotProductLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.DotProductLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.cosineSimilarity=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DotProductLayerParams.prototype.cosineSimilarity=!1,$root.CoreML.Specification.MeanVarianceNormalizeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MeanVarianceNormalizeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.acrossChannels=e.bool();break;case 2:a.normalizeVariance=e.bool();break;case 3:a.epsilon=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.prototype.acrossChannels=!1,$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.prototype.normalizeVariance=!1,$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.prototype.epsilon=0,$root.CoreML.Specification.SequenceRepeatLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SequenceRepeatLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.nRepetitions=e.uint64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SequenceRepeatLayerParams.prototype.nRepetitions=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SimpleRecurrentLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SimpleRecurrentLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputVectorSize=e.uint64();break;case 2:a.outputVectorSize=e.uint64();break;case 10:a.activation=$root.CoreML.Specification.ActivationParams.decode(e,e.uint32());break;case 15:a.sequenceOutput=e.bool();break;case 20:a.hasBiasVector=e.bool();break;case 30:a.weightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 31:a.recursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 32:a.biasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 100:a.reverseInput=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.activation=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.sequenceOutput=!1,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.hasBiasVector=!1,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.weightMatrix=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.recursionMatrix=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.biasVector=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.reverseInput=!1,$root.CoreML.Specification.GRULayerParams=class{constructor(){this.activations=[]}static decode(e,o){const a=new $root.CoreML.Specification.GRULayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputVectorSize=e.uint64();break;case 2:a.outputVectorSize=e.uint64();break;case 10:a.activations.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 15:a.sequenceOutput=e.bool();break;case 20:a.hasBiasVectors=e.bool();break;case 30:a.updateGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 31:a.resetGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 32:a.outputGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 50:a.updateGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 51:a.resetGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 52:a.outputGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 70:a.updateGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 71:a.resetGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 72:a.outputGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 100:a.reverseInput=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GRULayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.GRULayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.GRULayerParams.prototype.sequenceOutput=!1,$root.CoreML.Specification.GRULayerParams.prototype.hasBiasVectors=!1,$root.CoreML.Specification.GRULayerParams.prototype.updateGateWeightMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.resetGateWeightMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.outputGateWeightMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.updateGateRecursionMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.resetGateRecursionMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.outputGateRecursionMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.updateGateBiasVector=null,$root.CoreML.Specification.GRULayerParams.prototype.resetGateBiasVector=null,$root.CoreML.Specification.GRULayerParams.prototype.outputGateBiasVector=null,$root.CoreML.Specification.GRULayerParams.prototype.reverseInput=!1,$root.CoreML.Specification.LSTMParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LSTMParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.sequenceOutput=e.bool();break;case 20:a.hasBiasVectors=e.bool();break;case 30:a.forgetBias=e.bool();break;case 40:a.hasPeepholeVectors=e.bool();break;case 50:a.coupledInputAndForgetGate=e.bool();break;case 60:a.cellClipThreshold=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LSTMParams.prototype.sequenceOutput=!1,$root.CoreML.Specification.LSTMParams.prototype.hasBiasVectors=!1,$root.CoreML.Specification.LSTMParams.prototype.forgetBias=!1,$root.CoreML.Specification.LSTMParams.prototype.hasPeepholeVectors=!1,$root.CoreML.Specification.LSTMParams.prototype.coupledInputAndForgetGate=!1,$root.CoreML.Specification.LSTMParams.prototype.cellClipThreshold=0,$root.CoreML.Specification.LSTMWeightParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LSTMWeightParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 2:a.forgetGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 3:a.blockInputWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 4:a.outputGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 20:a.inputGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:a.forgetGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 22:a.blockInputRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 23:a.outputGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 40:a.inputGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 41:a.forgetGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 42:a.blockInputBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 43:a.outputGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 60:a.inputGatePeepholeVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 61:a.forgetGatePeepholeVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 62:a.outputGatePeepholeVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LSTMWeightParams.prototype.inputGateWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGateWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.blockInputWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGateWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.inputGateRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGateRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.blockInputRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGateRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.inputGateBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGateBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.blockInputBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGateBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.inputGatePeepholeVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGatePeepholeVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGatePeepholeVector=null,$root.CoreML.Specification.UniDirectionalLSTMLayerParams=class{constructor(){this.activations=[]}static decode(e,o){const a=new $root.CoreML.Specification.UniDirectionalLSTMLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputVectorSize=e.uint64();break;case 2:a.outputVectorSize=e.uint64();break;case 10:a.activations.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 15:a.params=$root.CoreML.Specification.LSTMParams.decode(e,e.uint32());break;case 20:a.weightParams=$root.CoreML.Specification.LSTMWeightParams.decode(e,e.uint32());break;case 100:a.reverseInput=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.params=null,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.weightParams=null,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.reverseInput=!1,$root.CoreML.Specification.BiDirectionalLSTMLayerParams=class{constructor(){this.activationsForwardLSTM=[],this.activationsBackwardLSTM=[],this.weightParams=[]}static decode(e,o){const a=new $root.CoreML.Specification.BiDirectionalLSTMLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.inputVectorSize=e.uint64();break;case 2:a.outputVectorSize=e.uint64();break;case 10:a.activationsForwardLSTM.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 11:a.activationsBackwardLSTM.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 15:a.params=$root.CoreML.Specification.LSTMParams.decode(e,e.uint32());break;case 20:a.weightParams.push($root.CoreML.Specification.LSTMWeightParams.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BiDirectionalLSTMLayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BiDirectionalLSTMLayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BiDirectionalLSTMLayerParams.prototype.params=null,$root.CoreML.Specification.CustomLayerParams=class{constructor(){this.weights=[],this.parameters={}}static decode(e,o){const a=new $root.CoreML.Specification.CustomLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.className=e.string();break;case 20:a.weights.push($root.CoreML.Specification.WeightParams.decode(e,e.uint32()));break;case 30:e.pair(a.parameters,()=>e.string(),()=>$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.decode(e,e.uint32()));break;case 40:a.description=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CustomLayerParams.prototype.className="",$root.CoreML.Specification.CustomLayerParams.prototype.description="",$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue=class{constructor(){}get value(){return $root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.valueSet=$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.valueSet||new Set(["doubleValue","stringValue","intValue","longValue","boolValue"]),Object.keys(this).find(e=>$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.valueSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.doubleValue=e.double();break;case 20:a.stringValue=e.string();break;case 30:a.intValue=e.int32();break;case 40:a.longValue=e.int64();break;case 50:a.boolValue=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TransposeLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.TransposeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BatchedMatMulLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BatchedMatMulLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.transposeA=e.bool();break;case 2:a.transposeB=e.bool();break;case 5:a.weightMatrixFirstDimension=e.uint64();break;case 6:a.weightMatrixSecondDimension=e.uint64();break;case 7:a.hasBias=e.bool();break;case 8:a.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 9:a.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 10:a.int8DynamicQuantize=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.transposeA=!1,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.transposeB=!1,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.weightMatrixFirstDimension=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.weightMatrixSecondDimension=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.weights=null,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.bias=null,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.int8DynamicQuantize=!1,$root.CoreML.Specification.ConcatNDLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ConcatNDLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ConcatNDLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SoftmaxNDLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SoftmaxNDLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SoftmaxNDLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ReverseLayerParams=class{constructor(){this.reverseDim=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReverseLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.reverseDim=e.array(a.reverseDim,()=>e.bool(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReverseSeqLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ReverseSeqLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.batchAxis=e.int64();break;case 2:a.sequenceAxis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReverseSeqLayerParams.prototype.batchAxis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ReverseSeqLayerParams.prototype.sequenceAxis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.LoadConstantNDLayerParams=class{constructor(){this.shape=[]}static decode(e,o){const a=new $root.CoreML.Specification.LoadConstantNDLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shape=e.array(a.shape,()=>e.uint64(),t);break;case 2:a.data=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LoadConstantNDLayerParams.prototype.data=null,$root.CoreML.Specification.FillLikeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FillLikeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.value=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FillLikeLayerParams.prototype.value=0,$root.CoreML.Specification.FillStaticLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.FillStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.value=e.float();break;case 2:a.targetShape=e.array(a.targetShape,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FillStaticLayerParams.prototype.value=0,$root.CoreML.Specification.FillDynamicLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FillDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.value=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FillDynamicLayerParams.prototype.value=0,$root.CoreML.Specification.WhereBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.WhereBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SinLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SinLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.CosLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CosLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.TanLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.TanLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.AsinLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AsinLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.AcosLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AcosLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.AtanLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AtanLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SinhLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SinhLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.CoshLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CoshLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.TanhLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.TanhLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.AsinhLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AsinhLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.AcoshLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AcoshLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.AtanhLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AtanhLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.PowBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.PowBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.Exp2LayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.Exp2LayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.WhereNonZeroLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.WhereNonZeroLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.MatrixBandPartLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MatrixBandPartLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.numLower=e.int64();break;case 2:a.numUpper=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.MatrixBandPartLayerParams.prototype.numLower=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.MatrixBandPartLayerParams.prototype.numUpper=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.UpperTriangularLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.UpperTriangularLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.k=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.UpperTriangularLayerParams.prototype.k=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.LowerTriangularLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LowerTriangularLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.k=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LowerTriangularLayerParams.prototype.k=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.BroadcastToLikeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BroadcastToLikeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.BroadcastToStaticLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.BroadcastToStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.targetShape=e.array(a.targetShape,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.BroadcastToDynamicLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.BroadcastToDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.AddBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AddBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.MaxBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MaxBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.MinBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MinBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ModBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ModBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.FloorDivBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FloorDivBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SubtractBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SubtractBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.MultiplyBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MultiplyBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.DivideBroadcastableLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.DivideBroadcastableLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.GatherLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GatherLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GatherLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterMode={SCATTER_UPDATE:0,SCATTER_ADD:1,SCATTER_SUB:2,SCATTER_MUL:3,SCATTER_DIV:4,SCATTER_MAX:5,SCATTER_MIN:6},$root.CoreML.Specification.ScatterLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ScatterLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.mode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ScatterLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterLayerParams.prototype.mode=0,$root.CoreML.Specification.GatherNDLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GatherNDLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ScatterNDLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ScatterNDLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.mode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ScatterNDLayerParams.prototype.mode=0,$root.CoreML.Specification.GatherAlongAxisLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GatherAlongAxisLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GatherAlongAxisLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterAlongAxisLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ScatterAlongAxisLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.mode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ScatterAlongAxisLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterAlongAxisLayerParams.prototype.mode=0,$root.CoreML.Specification.StackLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.StackLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.StackLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RankPreservingReshapeLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.RankPreservingReshapeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.targetShape=e.array(a.targetShape,()=>e.int64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ConstantPaddingLayerParams=class{constructor(){this.padAmounts=[]}static decode(e,o){const a=new $root.CoreML.Specification.ConstantPaddingLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.value=e.float();break;case 2:a.padAmounts=e.array(a.padAmounts,()=>e.uint64(),t);break;case 3:a.padToGivenOutputSizeMode=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ConstantPaddingLayerParams.prototype.value=0,$root.CoreML.Specification.ConstantPaddingLayerParams.prototype.padToGivenOutputSizeMode=!1,$root.CoreML.Specification.RandomNormalLikeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RandomNormalLikeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.mean=e.float();break;case 3:a.stdDev=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomNormalLikeLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomNormalLikeLayerParams.prototype.mean=0,$root.CoreML.Specification.RandomNormalLikeLayerParams.prototype.stdDev=0,$root.CoreML.Specification.RandomNormalStaticLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.RandomNormalStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.mean=e.float();break;case 3:a.stdDev=e.float();break;case 4:a.outputShape=e.array(a.outputShape,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomNormalStaticLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomNormalStaticLayerParams.prototype.mean=0,$root.CoreML.Specification.RandomNormalStaticLayerParams.prototype.stdDev=0,$root.CoreML.Specification.RandomNormalDynamicLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RandomNormalDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.mean=e.float();break;case 3:a.stdDev=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomNormalDynamicLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomNormalDynamicLayerParams.prototype.mean=0,$root.CoreML.Specification.RandomNormalDynamicLayerParams.prototype.stdDev=0,$root.CoreML.Specification.RandomUniformLikeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RandomUniformLikeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.minVal=e.float();break;case 3:a.maxVal=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomUniformLikeLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomUniformLikeLayerParams.prototype.minVal=0,$root.CoreML.Specification.RandomUniformLikeLayerParams.prototype.maxVal=0,$root.CoreML.Specification.RandomUniformStaticLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.RandomUniformStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.minVal=e.float();break;case 3:a.maxVal=e.float();break;case 4:a.outputShape=e.array(a.outputShape,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomUniformStaticLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomUniformStaticLayerParams.prototype.minVal=0,$root.CoreML.Specification.RandomUniformStaticLayerParams.prototype.maxVal=0,$root.CoreML.Specification.RandomUniformDynamicLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RandomUniformDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.minVal=e.float();break;case 3:a.maxVal=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomUniformDynamicLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomUniformDynamicLayerParams.prototype.minVal=0,$root.CoreML.Specification.RandomUniformDynamicLayerParams.prototype.maxVal=0,$root.CoreML.Specification.RandomBernoulliLikeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RandomBernoulliLikeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.prob=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomBernoulliLikeLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomBernoulliLikeLayerParams.prototype.prob=0,$root.CoreML.Specification.RandomBernoulliStaticLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.RandomBernoulliStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.prob=e.float();break;case 3:a.outputShape=e.array(a.outputShape,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomBernoulliStaticLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomBernoulliStaticLayerParams.prototype.prob=0,$root.CoreML.Specification.RandomBernoulliDynamicLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RandomBernoulliDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.prob=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RandomBernoulliDynamicLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomBernoulliDynamicLayerParams.prototype.prob=0,$root.CoreML.Specification.CategoricalDistributionLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CategoricalDistributionLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.seed=e.int64();break;case 2:a.numSamples=e.int64();break;case 3:a.isLogits=e.bool();break;case 4:a.eps=e.float();break;case 5:a.temperature=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.numSamples=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.isLogits=!1,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.eps=0,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.temperature=0,$root.CoreML.Specification.ReduceL1LayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceL1LayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceL1LayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceL1LayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceL2LayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceL2LayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceL2LayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceL2LayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceMaxLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceMaxLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceMaxLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceMaxLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceMinLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceMinLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceMinLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceMinLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceSumLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceSumLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceSumLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceSumLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceProdLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceProdLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceProdLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceProdLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceMeanLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceMeanLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceMeanLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceMeanLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceLogSumLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceLogSumLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceLogSumLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceLogSumLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceSumSquareLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceSumSquareLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceSumSquareLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceSumSquareLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceLogSumExpLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReduceLogSumExpLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.keepDims=e.bool();break;case 3:a.reduceAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReduceLogSumExpLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceLogSumExpLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ExpandDimsLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.ExpandDimsLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FlattenTo2DLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FlattenTo2DLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.FlattenTo2DLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ReshapeStaticLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.ReshapeStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.targetShape=e.array(a.targetShape,()=>e.int64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ReshapeLikeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ReshapeLikeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ReshapeDynamicLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ReshapeDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SqueezeLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const a=new $root.CoreML.Specification.SqueezeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axes=e.array(a.axes,()=>e.int64(),t);break;case 2:a.squeezeAll=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SqueezeLayerParams.prototype.squeezeAll=!1,$root.CoreML.Specification.TopKLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.TopKLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.K=e.uint64();break;case 3:a.useBottomK=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TopKLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.TopKLayerParams.prototype.K=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TopKLayerParams.prototype.useBottomK=!1,$root.CoreML.Specification.ArgMaxLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ArgMaxLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.removeDim=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ArgMaxLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ArgMaxLayerParams.prototype.removeDim=!1,$root.CoreML.Specification.ArgMinLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ArgMinLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.removeDim=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ArgMinLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ArgMinLayerParams.prototype.removeDim=!1,$root.CoreML.Specification.SplitNDLayerParams=class{constructor(){this.splitSizes=[]}static decode(e,o){const a=new $root.CoreML.Specification.SplitNDLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.numSplits=e.uint64();break;case 3:a.splitSizes=e.array(a.splitSizes,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SplitNDLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SplitNDLayerParams.prototype.numSplits=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.CeilLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CeilLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.RoundLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RoundLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.FloorLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.FloorLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.SignLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SignLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ClipLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ClipLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.minVal=e.float();break;case 2:a.maxVal=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ClipLayerParams.prototype.minVal=0,$root.CoreML.Specification.ClipLayerParams.prototype.maxVal=0,$root.CoreML.Specification.SliceStaticLayerParams=class{constructor(){this.beginIds=[],this.beginMasks=[],this.endIds=[],this.endMasks=[],this.strides=[],this.squeezeMasks=[]}static decode(e,o){const a=new $root.CoreML.Specification.SliceStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.beginIds=e.array(a.beginIds,()=>e.int64(),t);break;case 2:a.beginMasks=e.array(a.beginMasks,()=>e.bool(),t);break;case 3:a.endIds=e.array(a.endIds,()=>e.int64(),t);break;case 4:a.endMasks=e.array(a.endMasks,()=>e.bool(),t);break;case 5:a.strides=e.array(a.strides,()=>e.int64(),t);break;case 6:a.squeezeMasks=e.array(a.squeezeMasks,()=>e.bool(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SliceDynamicLayerParams=class{constructor(){this.beginMasks=[],this.endIds=[],this.endMasks=[],this.strides=[],this.squeezeMasks=[]}static decode(e,o){const a=new $root.CoreML.Specification.SliceDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 2:a.beginMasks=e.array(a.beginMasks,()=>e.bool(),t);break;case 3:a.endIds=e.array(a.endIds,()=>e.int64(),t);break;case 4:a.endMasks=e.array(a.endMasks,()=>e.bool(),t);break;case 5:a.strides=e.array(a.strides,()=>e.int64(),t);break;case 6:a.squeezeMasks=e.array(a.squeezeMasks,()=>e.bool(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TileLayerParams=class{constructor(){this.reps=[]}static decode(e,o){const a=new $root.CoreML.Specification.TileLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.reps=e.array(a.reps,()=>e.uint64(),t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GetShapeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GetShapeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.ErfLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ErfLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.GeluLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.GeluLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.mode=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.GeluLayerParams.prototype.mode=0,$root.CoreML.Specification.GeluLayerParams.GeluMode={EXACT:0,TANH_APPROXIMATION:1,SIGMOID_APPROXIMATION:2},$root.CoreML.Specification.RangeStaticLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RangeStaticLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.endValue=e.float();break;case 2:a.startValue=e.float();break;case 3:a.stepSizeValue=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RangeStaticLayerParams.prototype.endValue=0,$root.CoreML.Specification.RangeStaticLayerParams.prototype.startValue=0,$root.CoreML.Specification.RangeStaticLayerParams.prototype.stepSizeValue=0,$root.CoreML.Specification.RangeDynamicLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RangeDynamicLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 2:a.startValue=e.float();break;case 3:a.stepSizeValue=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RangeDynamicLayerParams.prototype.startValue=0,$root.CoreML.Specification.RangeDynamicLayerParams.prototype.stepSizeValue=0,$root.CoreML.Specification.SlidingWindowsLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SlidingWindowsLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.windowSize=e.uint64();break;case 3:a.step=e.uint64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SlidingWindowsLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SlidingWindowsLayerParams.prototype.windowSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SlidingWindowsLayerParams.prototype.step=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LayerNormalizationLayerParams=class{constructor(){this.normalizedShape=[]}static decode(e,o){const a=new $root.CoreML.Specification.LayerNormalizationLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.normalizedShape=e.array(a.normalizedShape,()=>e.int64(),t);break;case 2:a.eps=e.float();break;case 3:a.gamma=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 4:a.beta=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LayerNormalizationLayerParams.prototype.eps=0,$root.CoreML.Specification.LayerNormalizationLayerParams.prototype.gamma=null,$root.CoreML.Specification.LayerNormalizationLayerParams.prototype.beta=null,$root.CoreML.Specification.NonMaximumSuppressionLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.NonMaximumSuppressionLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.iouThreshold=e.float();break;case 2:a.scoreThreshold=e.float();break;case 3:a.maxBoxes=e.uint64();break;case 4:a.perClassSuppression=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.iouThreshold=0,$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.scoreThreshold=0,$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.maxBoxes=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.perClassSuppression=!1,$root.CoreML.Specification.ClampedReLULayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ClampedReLULayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.float();break;case 2:a.beta=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ClampedReLULayerParams.prototype.alpha=0,$root.CoreML.Specification.ClampedReLULayerParams.prototype.beta=0,$root.CoreML.Specification.ArgSortLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ArgSortLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.descending=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ArgSortLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ArgSortLayerParams.prototype.descending=!1,$root.CoreML.Specification.SliceBySizeLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SliceBySizeLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 2:a.size=e.int64();break;case 3:a.axis=e.int64();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SliceBySizeLayerParams.prototype.size=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SliceBySizeLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.NeuralNetworkClassifier=class{constructor(){this.layers=[],this.preprocessing=[]}get ClassLabels(){return $root.CoreML.Specification.NeuralNetworkClassifier.ClassLabelsSet=$root.CoreML.Specification.NeuralNetworkClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.NeuralNetworkClassifier.ClassLabelsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.NeuralNetworkClassifier,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.layers.push($root.CoreML.Specification.NeuralNetworkLayer.decode(e,e.uint32()));break;case 2:a.preprocessing.push($root.CoreML.Specification.NeuralNetworkPreprocessing.decode(e,e.uint32()));break;case 5:a.arrayInputShapeMapping=e.int32();break;case 6:a.imageInputShapeMapping=e.int32();break;case 10:a.updateParams=$root.CoreML.Specification.NetworkUpdateParameters.decode(e,e.uint32());break;case 100:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:a.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 200:a.labelProbabilityLayerName=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetworkClassifier.prototype.arrayInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkClassifier.prototype.imageInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkClassifier.prototype.updateParams=null,$root.CoreML.Specification.NeuralNetworkClassifier.prototype.labelProbabilityLayerName="",$root.CoreML.Specification.OneHotLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.OneHotLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.oneHotVectorSize=e.uint64();break;case 2:a.axis=e.int64();break;case 3:a.onValue=e.float();break;case 4:a.offValue=e.float();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.OneHotLayerParams.prototype.oneHotVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.OneHotLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.OneHotLayerParams.prototype.onValue=0,$root.CoreML.Specification.OneHotLayerParams.prototype.offValue=0,$root.CoreML.Specification.CumSumLayerParams=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CumSumLayerParams,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.axis=e.int64();break;case 2:a.excludeFinalSum=e.bool();break;case 3:a.reverse=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CumSumLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.CumSumLayerParams.prototype.excludeFinalSum=!1,$root.CoreML.Specification.CumSumLayerParams.prototype.reverse=!1,$root.CoreML.Specification.NeuralNetworkRegressor=class{constructor(){this.layers=[],this.preprocessing=[]}static decode(e,o){const a=new $root.CoreML.Specification.NeuralNetworkRegressor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.layers.push($root.CoreML.Specification.NeuralNetworkLayer.decode(e,e.uint32()));break;case 2:a.preprocessing.push($root.CoreML.Specification.NeuralNetworkPreprocessing.decode(e,e.uint32()));break;case 5:a.arrayInputShapeMapping=e.int32();break;case 6:a.imageInputShapeMapping=e.int32();break;case 10:a.updateParams=$root.CoreML.Specification.NetworkUpdateParameters.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NeuralNetworkRegressor.prototype.arrayInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkRegressor.prototype.imageInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkRegressor.prototype.updateParams=null,$root.CoreML.Specification.NetworkUpdateParameters=class{constructor(){this.lossLayers=[]}static decode(e,o){const a=new $root.CoreML.Specification.NetworkUpdateParameters,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.lossLayers.push($root.CoreML.Specification.LossLayer.decode(e,e.uint32()));break;case 2:a.optimizer=$root.CoreML.Specification.Optimizer.decode(e,e.uint32());break;case 3:a.epochs=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 10:a.shuffle=$root.CoreML.Specification.BoolParameter.decode(e,e.uint32());break;case 20:a.seed=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NetworkUpdateParameters.prototype.optimizer=null,$root.CoreML.Specification.NetworkUpdateParameters.prototype.epochs=null,$root.CoreML.Specification.NetworkUpdateParameters.prototype.shuffle=null,$root.CoreML.Specification.NetworkUpdateParameters.prototype.seed=null,$root.CoreML.Specification.LossLayer=class{constructor(){}get LossLayerType(){return $root.CoreML.Specification.LossLayer.LossLayerTypeSet=$root.CoreML.Specification.LossLayer.LossLayerTypeSet||new Set(["categoricalCrossEntropyLossLayer","meanSquaredErrorLossLayer"]),Object.keys(this).find(e=>$root.CoreML.Specification.LossLayer.LossLayerTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.LossLayer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.name=e.string();break;case 10:a.categoricalCrossEntropyLossLayer=$root.CoreML.Specification.CategoricalCrossEntropyLossLayer.decode(e,e.uint32());break;case 11:a.meanSquaredErrorLossLayer=$root.CoreML.Specification.MeanSquaredErrorLossLayer.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LossLayer.prototype.name="",$root.CoreML.Specification.CategoricalCrossEntropyLossLayer=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.CategoricalCrossEntropyLossLayer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.input=e.string();break;case 2:a.target=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.CategoricalCrossEntropyLossLayer.prototype.input="",$root.CoreML.Specification.CategoricalCrossEntropyLossLayer.prototype.target="",$root.CoreML.Specification.MeanSquaredErrorLossLayer=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.MeanSquaredErrorLossLayer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.input=e.string();break;case 2:a.target=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.MeanSquaredErrorLossLayer.prototype.input="",$root.CoreML.Specification.MeanSquaredErrorLossLayer.prototype.target="",$root.CoreML.Specification.Optimizer=class{constructor(){}get OptimizerType(){return $root.CoreML.Specification.Optimizer.OptimizerTypeSet=$root.CoreML.Specification.Optimizer.OptimizerTypeSet||new Set(["sgdOptimizer","adamOptimizer"]),Object.keys(this).find(e=>$root.CoreML.Specification.Optimizer.OptimizerTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.Optimizer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 10:a.sgdOptimizer=$root.CoreML.Specification.SGDOptimizer.decode(e,e.uint32());break;case 11:a.adamOptimizer=$root.CoreML.Specification.AdamOptimizer.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SGDOptimizer=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SGDOptimizer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.learningRate=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 2:a.miniBatchSize=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 3:a.momentum=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SGDOptimizer.prototype.learningRate=null,$root.CoreML.Specification.SGDOptimizer.prototype.miniBatchSize=null,$root.CoreML.Specification.SGDOptimizer.prototype.momentum=null,$root.CoreML.Specification.AdamOptimizer=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.AdamOptimizer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.learningRate=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 2:a.miniBatchSize=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 3:a.beta1=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 4:a.beta2=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 5:a.eps=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.AdamOptimizer.prototype.learningRate=null,$root.CoreML.Specification.AdamOptimizer.prototype.miniBatchSize=null,$root.CoreML.Specification.AdamOptimizer.prototype.beta1=null,$root.CoreML.Specification.AdamOptimizer.prototype.beta2=null,$root.CoreML.Specification.AdamOptimizer.prototype.eps=null,$root.CoreML.Specification.Normalizer=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.Normalizer,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.normType=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Normalizer.prototype.normType=0,$root.CoreML.Specification.Normalizer.NormType={LMax:0,L1:1,L2:2},$root.CoreML.Specification.OneHotEncoder=class{constructor(){}get CategoryType(){return $root.CoreML.Specification.OneHotEncoder.CategoryTypeSet=$root.CoreML.Specification.OneHotEncoder.CategoryTypeSet||new Set(["stringCategories","int64Categories"]),Object.keys(this).find(e=>$root.CoreML.Specification.OneHotEncoder.CategoryTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.OneHotEncoder,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.stringCategories=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 2:a.int64Categories=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 10:a.outputSparse=e.bool();break;case 11:a.handleUnknown=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.OneHotEncoder.prototype.outputSparse=!1,$root.CoreML.Specification.OneHotEncoder.prototype.handleUnknown=0,$root.CoreML.Specification.OneHotEncoder.HandleUnknown={ErrorOnUnknown:0,IgnoreUnknown:1},$root.CoreML.Specification.Scaler=class{constructor(){this.shiftValue=[],this.scaleValue=[]}static decode(e,o){const a=new $root.CoreML.Specification.Scaler,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.shiftValue=e.doubles(a.shiftValue,t);break;case 2:a.scaleValue=e.doubles(a.scaleValue,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NonMaximumSuppression=class{constructor(){}get SuppressionMethod(){return $root.CoreML.Specification.NonMaximumSuppression.SuppressionMethodSet=$root.CoreML.Specification.NonMaximumSuppression.SuppressionMethodSet||new Set(["pickTop"]),Object.keys(this).find(e=>$root.CoreML.Specification.NonMaximumSuppression.SuppressionMethodSet.has(e)&&this[e]!=null)}get ClassLabels(){return $root.CoreML.Specification.NonMaximumSuppression.ClassLabelsSet=$root.CoreML.Specification.NonMaximumSuppression.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.NonMaximumSuppression.ClassLabelsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.NonMaximumSuppression,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.pickTop=$root.CoreML.Specification.NonMaximumSuppression.PickTop.decode(e,e.uint32());break;case 100:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:a.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 110:a.iouThreshold=e.double();break;case 111:a.confidenceThreshold=e.double();break;case 200:a.confidenceInputFeatureName=e.string();break;case 201:a.coordinatesInputFeatureName=e.string();break;case 202:a.iouThresholdInputFeatureName=e.string();break;case 203:a.confidenceThresholdInputFeatureName=e.string();break;case 210:a.confidenceOutputFeatureName=e.string();break;case 211:a.coordinatesOutputFeatureName=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NonMaximumSuppression.prototype.iouThreshold=0,$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceThreshold=0,$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.coordinatesInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.iouThresholdInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceThresholdInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceOutputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.coordinatesOutputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.PickTop=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.NonMaximumSuppression.PickTop,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.perClass=e.bool();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.NonMaximumSuppression.PickTop.prototype.perClass=!1,$root.CoreML.Specification.LinearKernel=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LinearKernel,i=e.next(o);for(;e.end(i);){const t=e.uint32();e.skipType(7&t)}return a}},$root.CoreML.Specification.RBFKernel=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.RBFKernel,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.gamma=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.RBFKernel.prototype.gamma=0,$root.CoreML.Specification.PolyKernel=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.PolyKernel,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.degree=e.int32();break;case 2:a.c=e.double();break;case 3:a.gamma=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.PolyKernel.prototype.degree=0,$root.CoreML.Specification.PolyKernel.prototype.c=0,$root.CoreML.Specification.PolyKernel.prototype.gamma=0,$root.CoreML.Specification.SigmoidKernel=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SigmoidKernel,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.gamma=e.double();break;case 2:a.c=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SigmoidKernel.prototype.gamma=0,$root.CoreML.Specification.SigmoidKernel.prototype.c=0,$root.CoreML.Specification.Kernel=class{constructor(){}get kernel(){return $root.CoreML.Specification.Kernel.kernelSet=$root.CoreML.Specification.Kernel.kernelSet||new Set(["linearKernel","rbfKernel","polyKernel","sigmoidKernel"]),Object.keys(this).find(e=>$root.CoreML.Specification.Kernel.kernelSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.Kernel,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.linearKernel=$root.CoreML.Specification.LinearKernel.decode(e,e.uint32());break;case 2:a.rbfKernel=$root.CoreML.Specification.RBFKernel.decode(e,e.uint32());break;case 3:a.polyKernel=$root.CoreML.Specification.PolyKernel.decode(e,e.uint32());break;case 4:a.sigmoidKernel=$root.CoreML.Specification.SigmoidKernel.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SparseNode=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.SparseNode,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.index=e.int32();break;case 2:a.value=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SparseNode.prototype.index=0,$root.CoreML.Specification.SparseNode.prototype.value=0,$root.CoreML.Specification.SparseVector=class{constructor(){this.nodes=[]}static decode(e,o){const a=new $root.CoreML.Specification.SparseVector,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.nodes.push($root.CoreML.Specification.SparseNode.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SparseSupportVectors=class{constructor(){this.vectors=[]}static decode(e,o){const a=new $root.CoreML.Specification.SparseSupportVectors,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.vectors.push($root.CoreML.Specification.SparseVector.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DenseVector=class{constructor(){this.values=[]}static decode(e,o){const a=new $root.CoreML.Specification.DenseVector,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.values=e.doubles(a.values,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.DenseSupportVectors=class{constructor(){this.vectors=[]}static decode(e,o){const a=new $root.CoreML.Specification.DenseSupportVectors,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.vectors.push($root.CoreML.Specification.DenseVector.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.Coefficients=class{constructor(){this.alpha=[]}static decode(e,o){const a=new $root.CoreML.Specification.Coefficients,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.alpha=e.doubles(a.alpha,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SupportVectorRegressor=class{constructor(){}get supportVectors(){return $root.CoreML.Specification.SupportVectorRegressor.supportVectorsSet=$root.CoreML.Specification.SupportVectorRegressor.supportVectorsSet||new Set(["sparseSupportVectors","denseSupportVectors"]),Object.keys(this).find(e=>$root.CoreML.Specification.SupportVectorRegressor.supportVectorsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.SupportVectorRegressor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.kernel=$root.CoreML.Specification.Kernel.decode(e,e.uint32());break;case 2:a.sparseSupportVectors=$root.CoreML.Specification.SparseSupportVectors.decode(e,e.uint32());break;case 3:a.denseSupportVectors=$root.CoreML.Specification.DenseSupportVectors.decode(e,e.uint32());break;case 4:a.coefficients=$root.CoreML.Specification.Coefficients.decode(e,e.uint32());break;case 5:a.rho=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SupportVectorRegressor.prototype.kernel=null,$root.CoreML.Specification.SupportVectorRegressor.prototype.coefficients=null,$root.CoreML.Specification.SupportVectorRegressor.prototype.rho=0,$root.CoreML.Specification.SupportVectorClassifier=class{constructor(){this.numberOfSupportVectorsPerClass=[],this.coefficients=[],this.rho=[],this.probA=[],this.probB=[]}get supportVectors(){return $root.CoreML.Specification.SupportVectorClassifier.supportVectorsSet=$root.CoreML.Specification.SupportVectorClassifier.supportVectorsSet||new Set(["sparseSupportVectors","denseSupportVectors"]),Object.keys(this).find(e=>$root.CoreML.Specification.SupportVectorClassifier.supportVectorsSet.has(e)&&this[e]!=null)}get ClassLabels(){return $root.CoreML.Specification.SupportVectorClassifier.ClassLabelsSet=$root.CoreML.Specification.SupportVectorClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.SupportVectorClassifier.ClassLabelsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.SupportVectorClassifier,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.kernel=$root.CoreML.Specification.Kernel.decode(e,e.uint32());break;case 2:a.numberOfSupportVectorsPerClass=e.array(a.numberOfSupportVectorsPerClass,()=>e.int32(),t);break;case 3:a.sparseSupportVectors=$root.CoreML.Specification.SparseSupportVectors.decode(e,e.uint32());break;case 4:a.denseSupportVectors=$root.CoreML.Specification.DenseSupportVectors.decode(e,e.uint32());break;case 5:a.coefficients.push($root.CoreML.Specification.Coefficients.decode(e,e.uint32()));break;case 6:a.rho=e.doubles(a.rho,t);break;case 7:a.probA=e.doubles(a.probA,t);break;case 8:a.probB=e.doubles(a.probB,t);break;case 100:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:a.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.SupportVectorClassifier.prototype.kernel=null,$root.CoreML.Specification.TreeEnsemblePostEvaluationTransform={NoTransform:0,Classification_SoftMax:1,Regression_Logistic:2,Classification_SoftMaxWithZeroClassReference:3},$root.CoreML.Specification.TreeEnsembleParameters=class{constructor(){this.nodes=[],this.basePredictionValue=[]}static decode(e,o){const a=new $root.CoreML.Specification.TreeEnsembleParameters,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.nodes.push($root.CoreML.Specification.TreeEnsembleParameters.TreeNode.decode(e,e.uint32()));break;case 2:a.numPredictionDimensions=e.uint64();break;case 3:a.basePredictionValue=e.doubles(a.basePredictionValue,t);break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TreeEnsembleParameters.prototype.numPredictionDimensions=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode=class{constructor(){this.evaluationInfo=[]}static decode(e,o){const a=new $root.CoreML.Specification.TreeEnsembleParameters.TreeNode,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.treeId=e.uint64();break;case 2:a.nodeId=e.uint64();break;case 3:a.nodeBehavior=e.int32();break;case 10:a.branchFeatureIndex=e.uint64();break;case 11:a.branchFeatureValue=e.double();break;case 12:a.trueChildNodeId=e.uint64();break;case 13:a.falseChildNodeId=e.uint64();break;case 14:a.missingValueTracksTrueChild=e.bool();break;case 20:a.evaluationInfo.push($root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.decode(e,e.uint32()));break;case 30:a.relativeHitRate=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.treeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.nodeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.nodeBehavior=0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.branchFeatureIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.branchFeatureValue=0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.trueChildNodeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.falseChildNodeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.missingValueTracksTrueChild=!1,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.relativeHitRate=0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.TreeNodeBehavior={BranchOnValueLessThanEqual:0,BranchOnValueLessThan:1,BranchOnValueGreaterThanEqual:2,BranchOnValueGreaterThan:3,BranchOnValueEqual:4,BranchOnValueNotEqual:5,LeafNode:6},$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.evaluationIndex=e.uint64();break;case 2:a.evaluationValue=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.prototype.evaluationIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.prototype.evaluationValue=0,$root.CoreML.Specification.TreeEnsembleClassifier=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.TreeEnsembleClassifier.ClassLabelsSet=$root.CoreML.Specification.TreeEnsembleClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find(e=>$root.CoreML.Specification.TreeEnsembleClassifier.ClassLabelsSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.TreeEnsembleClassifier,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.treeEnsemble=$root.CoreML.Specification.TreeEnsembleParameters.decode(e,e.uint32());break;case 2:a.postEvaluationTransform=e.int32();break;case 100:a.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:a.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TreeEnsembleClassifier.prototype.treeEnsemble=null,$root.CoreML.Specification.TreeEnsembleClassifier.prototype.postEvaluationTransform=0,$root.CoreML.Specification.TreeEnsembleRegressor=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.TreeEnsembleRegressor,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.treeEnsemble=$root.CoreML.Specification.TreeEnsembleParameters.decode(e,e.uint32());break;case 2:a.postEvaluationTransform=e.int32();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.TreeEnsembleRegressor.prototype.treeEnsemble=null,$root.CoreML.Specification.TreeEnsembleRegressor.prototype.postEvaluationTransform=0,$root.CoreML.Specification.ItemSimilarityRecommender=class{constructor(){this.itemItemSimilarities=[]}static decode(e,o){const a=new $root.CoreML.Specification.ItemSimilarityRecommender,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.itemItemSimilarities.push($root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems.decode(e,e.uint32()));break;case 2:a.itemStringIds=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 3:a.itemInt64Ids=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 10:a.itemInputFeatureName=e.string();break;case 11:a.numRecommendationsInputFeatureName=e.string();break;case 12:a.itemRestrictionInputFeatureName=e.string();break;case 13:a.itemExclusionInputFeatureName=e.string();break;case 20:a.recommendedItemListOutputFeatureName=e.string();break;case 21:a.recommendedItemScoreOutputFeatureName=e.string();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemStringIds=null,$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemInt64Ids=null,$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.numRecommendationsInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemRestrictionInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemExclusionInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.recommendedItemListOutputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.recommendedItemScoreOutputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.itemId=e.uint64();break;case 2:a.similarityScore=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem.prototype.itemId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem.prototype.similarityScore=0,$root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems=class{constructor(){this.similarItemList=[]}static decode(e,o){const a=new $root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.itemId=e.uint64();break;case 2:a.similarItemList.push($root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem.decode(e,e.uint32()));break;case 3:a.itemScoreAdjustment=e.double();break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems.prototype.itemId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems.prototype.itemScoreAdjustment=0,$root.CoreML.Specification.LinkedModel=class{constructor(){}get LinkType(){return $root.CoreML.Specification.LinkedModel.LinkTypeSet=$root.CoreML.Specification.LinkedModel.LinkTypeSet||new Set(["linkedModelFile"]),Object.keys(this).find(e=>$root.CoreML.Specification.LinkedModel.LinkTypeSet.has(e)&&this[e]!=null)}static decode(e,o){const a=new $root.CoreML.Specification.LinkedModel,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.linkedModelFile=$root.CoreML.Specification.LinkedModelFile.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LinkedModelFile=class{constructor(){}static decode(e,o){const a=new $root.CoreML.Specification.LinkedModelFile,i=e.next(o);for(;e.end(i);){const t=e.uint32();switch(t>>>3){case 1:a.linkedModelFileName=$root.CoreML.Specification.StringParameter.decode(e,e.uint32());break;case 2:a.linkedModelSearchPath=$root.CoreML.Specification.StringParameter.decode(e,e.uint32());break;default:e.skipType(7&t)}}return a}},$root.CoreML.Specification.LinkedModelFile.prototype.linkedModelFileName=null,$root.CoreML.Specification.LinkedModelFile.prototype.linkedModelSearchPath=null;
