let i,p=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});p.decode();let _=null;function m(){return(_===null||_.buffer!==i.memory.buffer)&&(_=new Uint8Array(i.memory.buffer)),_}function x(e,n){return p.decode(m().subarray(e,e+n))}const o=new Array(32).fill(void 0);o.push(void 0,null,!0,!1);let d=o.length;function S(e){d===o.length&&o.push(o.length+1);const n=d;return d=o[n],o[n]=e,n}function v(e){return o[e]}let g=0,w=new TextEncoder("utf-8");const M=typeof w.encodeInto=="function"?function(e,n){return w.encodeInto(e,n)}:function(e,n){const t=w.encode(e);return n.set(t),{read:e.length,written:t.length}};function A(e,n,t){if(t===void 0){const c=w.encode(e),l=n(c.length);return m().subarray(l,l+c.length).set(c),g=c.length,l}let a=e.length,s=n(a);const u=m();let r=0;for(;r<a;r++){const c=e.charCodeAt(r);if(c>127)break;u[s+r]=c}if(r!==a){r!==0&&(e=e.slice(r)),s=t(s,a,a=r+e.length*3);const c=m().subarray(s+r,s+a);r+=M(e,c).written}return g=r,s}let h=null;function j(){return(h===null||h.buffer!==i.memory.buffer)&&(h=new Int32Array(i.memory.buffer)),h}let f=32;function y(e){if(f==1)throw new Error("out of js stack");return o[--f]=e,f}function I(e){e<36||(o[e]=d,d=e)}function b(e){const n=v(e);return I(e),n}function R(e,n){try{var t=i.scalar_transform(y(e),n);return b(t)}finally{o[f++]=void 0}}function T(e){try{var n=i.scalar_range(y(e));return b(n)}finally{o[f++]=void 0}}function E(e,n){try{var t=i.scalar_axis_range(y(e),n);return b(t)}finally{o[f++]=void 0}}function k(e,n){try{var t=A(n,i.__wbindgen_malloc,i.__wbindgen_realloc),a=g,s=i.histogram_transform(y(e),t,a);return b(s)}finally{o[f++]=void 0}}function U(e,n,t){try{var a=i.high_dimensional_pca(y(e),n,t);return b(a)}finally{o[f++]=void 0}}async function B(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(a){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",a);else throw a}const t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}else{const t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}async function O(e){typeof e=="undefined"&&(e=import.meta.url.replace(/\.js$/,"_bg.wasm"));const n={};n.wbg={},n.wbg.__wbindgen_json_parse=function(s,u){var r=JSON.parse(x(s,u));return S(r)},n.wbg.__wbindgen_json_serialize=function(s,u){const r=v(u);var c=JSON.stringify(r===void 0?null:r),l=A(c,i.__wbindgen_malloc,i.__wbindgen_realloc),W=g;j()[s/4+1]=W,j()[s/4+0]=l},(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:t,module:a}=await B(await e,n);return i=t.exports,O.__wbindgen_wasm_module=a,i}export default O;export{U as high_dimensional_pca,k as histogram_transform,E as scalar_axis_range,T as scalar_range,R as scalar_transform};
