var flux=flux||{};flux.ModelFactory=class{match(e){return e.identifier.split(".").pop().toLowerCase()==="bson"}open(e,a){return a.require("./bson").then(t=>{let o=null;const n=e.identifier;try{const r=new t.Reader(e.buffer).read();if(o=flux.ModelFactory._backref(r,r).model,!o)throw new flux.Error("File does not contain Flux model.")}catch(r){const s=r&&r.message?r.message:r.toString();throw new flux.Error(s.replace(/\.$/,"")+" in '"+n+"'.")}return flux.Metadata.open(a).then(r=>{try{return new flux.Model(r,o)}catch(s){const c=s&&s.message?s.message:s.toString();throw new flux.Error(c.replace(/\.$/,"")+" in '"+n+"'.")}})})}static _backref(e,a){if(Array.isArray(e))for(let t=0;t<e.length;t++)e[t]=flux.ModelFactory._backref(e[t],a);else if(e===Object(e)){if(e.tag=="backref"&&e.ref){if(!a._backrefs[e.ref-1])throw new flux.Error("Invalid backref '"+e.ref+"'.");e=a._backrefs[e.ref-1]}for(const t of Object.keys(e))e===a&&t==="_backrefs"||(e[t]=flux.ModelFactory._backref(e[t],a))}return e}},flux.Model=class{constructor(){this._format="Flux",this._graphs=[]}get format(){return this._format}get graphs(){return this._graphs}},flux.Metadata=class{static open(e){return flux.Metadata._metadata?Promise.resolve(flux.Metadata._metadata):e.request(null,"flux-metadata.json","utf-8").then(a=>(flux.Metadata._metadata=new flux.Metadata(a),flux.Metadata._metadata)).catch(()=>(flux.Metadata._metadata=new flux.Metadata(null),flux.Metadata._metadatas))}constructor(e){if(this._map={},this._attributeCache={},e){const a=JSON.parse(e);if(a)for(const t of a)t.name&&t.schema&&(this._map[t.name]=t.schema)}}type(e){return this._map[e]||null}attribute(e,a){let t=this._attributeCache[e];if(!t){t={};const o=this.type(e);if(o&&o.attributes&&o.attributes.length>0)for(const n of o.attributes)t[n.name]=n;this._attributeCache[e]=t}return t[a]||null}},flux.Error=class extends Error{constructor(e){super(e),this.name="Flux Error"}},module&&module.exports&&(module.exports.ModelFactory=flux.ModelFactory);
