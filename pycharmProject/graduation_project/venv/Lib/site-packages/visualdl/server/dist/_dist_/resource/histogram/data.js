import{Modes as M}from"./types.js";function g(f,o,r,c=30){o===r&&(r=o*1.1+1,o=o/1.1-1);const s=(r-o)/c,h=[];for(let n=o;n<r;n+=s)h.push(n);let t=0;return h.map(n=>{const a=n+s;let e=0;for(;t<f.length;){const i=Math.min(r,f[t].right),m=Math.max(o,f[t].left),p=Math.min(i,a)-Math.max(m,n),l=p/(i-m)*f[t].count;if(p>0&&(e+=l),i>a)break;t++}return{x:n,dx:s,y:e}})}export function transform({data:f,mode:o}){const r=f.map(([t,n,a])=>({time:t,step:n,min:Math.min(...a.map(e=>e[0])),max:Math.max(...a.map(e=>e[1])),items:a.map(([e,i,m])=>({left:e,right:i,count:m}))})),c=Math.min(...r.map(({min:t})=>t)),s=Math.max(...r.map(({max:t})=>t)),h=r.map(({time:t,step:n,items:a})=>g(a,c,s).map(({x:e,dx:i,y:m})=>[t,n,e+i/2,Math.floor(m)]));if(o===M.Overlay)return{min:c,max:s,data:h};if(o===M.Offset){let t=Infinity,n=-Infinity,a=Infinity,e=-Infinity;const i=h.map(m=>{const p=m[0][1];return p>n&&(n=p),p<t&&(t=p),m.reduce((l,[,,x,u])=>(u>e&&(e=u),u<a&&(a=u),[...l,x,p,u]),[])});return{minX:c,maxX:s,minZ:a,maxZ:e,minStep:t,maxStep:n,data:i}}}
