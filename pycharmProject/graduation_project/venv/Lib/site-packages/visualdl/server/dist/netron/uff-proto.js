var $root=protobuf.get("uff");$root.uff={},$root.uff.MetaGraph=class{constructor(){this.descriptors=[],this.graphs=[],this.referenced_data=[],this.extra_fields=[]}static decode(t,r){const e=new $root.uff.MetaGraph,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.version=t.int64();break;case 2:e.descriptor_core_version=t.int64();break;case 3:e.descriptors.push($root.uff.Descriptor.decode(t,t.uint32()));break;case 4:e.graphs.push($root.uff.Graph.decode(t,t.uint32()));break;case 5:e.referenced_data.push($root.uff.MetaGraph.ReferencedDataEntry.decode(t,t.uint32()));break;case 100:e.extra_fields.push($root.uff.MetaGraph.ExtraFieldsEntry.decode(t,t.uint32()));break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.MetaGraph;for(t.start();!t.end();){const e=t.tag();switch(e){case"version":r.version=t.integer();break;case"descriptor_core_version":r.descriptor_core_version=t.integer();break;case"descriptors":r.descriptors.push($root.uff.Descriptor.decodeText(t,!0));break;case"graphs":r.graphs.push($root.uff.Graph.decodeText(t,!0));break;case"referenced_data":r.referenced_data.push($root.uff.MetaGraph.ReferencedDataEntry.decodeText(t,!0));break;case"extra_fields":r.extra_fields.push($root.uff.MetaGraph.ExtraFieldsEntry.decodeText(t,!0));break;default:t.field(e,r)}}return r}},$root.uff.MetaGraph.prototype.version=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.uff.MetaGraph.prototype.descriptor_core_version=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.uff.MetaGraph.ReferencedDataEntry=class{constructor(){}static decode(t,r){const e=new $root.uff.MetaGraph.ReferencedDataEntry,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.key=t.string();break;case 2:e.value=$root.uff.Data.decode(t,t.uint32());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.MetaGraph.ReferencedDataEntry;for(t.start();!t.end();){const e=t.tag();switch(e){case"key":r.key=t.string();break;case"value":r.value=$root.uff.Data.decodeText(t,!0);break;default:t.field(e,r)}}return r}},$root.uff.MetaGraph.ReferencedDataEntry.prototype.key="",$root.uff.MetaGraph.ReferencedDataEntry.prototype.value=null,$root.uff.MetaGraph.ExtraFieldsEntry=class{constructor(){}static decode(t,r){const e=new $root.uff.MetaGraph.ExtraFieldsEntry,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.key=t.string();break;case 2:e.value=$root.uff.Data.decode(t,t.uint32());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.MetaGraph.ExtraFieldsEntry;for(t.start();!t.end();){const e=t.tag();switch(e){case"key":r.key=t.string();break;case"value":r.value=$root.uff.Data.decodeText(t,!0);break;default:t.field(e,r)}}return r}},$root.uff.MetaGraph.ExtraFieldsEntry.prototype.key="",$root.uff.MetaGraph.ExtraFieldsEntry.prototype.value=null,$root.uff.Descriptor=class{constructor(){}static decode(t,r){const e=new $root.uff.Descriptor,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.id=t.string();break;case 2:e.version=t.int64();break;case 3:e.optional=t.bool();break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.Descriptor;for(t.start();!t.end();){const e=t.tag();switch(e){case"id":r.id=t.string();break;case"version":r.version=t.integer();break;case"optional":r.optional=t.boolean();break;default:t.field(e,r)}}return r}},$root.uff.Descriptor.prototype.id="",$root.uff.Descriptor.prototype.version=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.uff.Descriptor.prototype.optional=!1,$root.uff.Graph=class{constructor(){this.nodes=[],this.extra_fields=[]}static decode(t,r){const e=new $root.uff.Graph,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.id=t.string();break;case 2:e.nodes.push($root.uff.Node.decode(t,t.uint32()));break;case 100:e.extra_fields.push($root.uff.Graph.ExtraFieldsEntry.decode(t,t.uint32()));break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.Graph;for(t.start();!t.end();){const e=t.tag();switch(e){case"id":r.id=t.string();break;case"nodes":r.nodes.push($root.uff.Node.decodeText(t,!0));break;case"extra_fields":r.extra_fields.push($root.uff.Graph.ExtraFieldsEntry.decodeText(t,!0));break;default:t.field(e,r)}}return r}},$root.uff.Graph.prototype.id="",$root.uff.Graph.ExtraFieldsEntry=class{constructor(){}static decode(t,r){const e=new $root.uff.Graph.ExtraFieldsEntry,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.key=t.string();break;case 2:e.value=$root.uff.Data.decode(t,t.uint32());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.Graph.ExtraFieldsEntry;for(t.start();!t.end();){const e=t.tag();switch(e){case"key":r.key=t.string();break;case"value":r.value=$root.uff.Data.decodeText(t,!0);break;default:t.field(e,r)}}return r}},$root.uff.Graph.ExtraFieldsEntry.prototype.key="",$root.uff.Graph.ExtraFieldsEntry.prototype.value=null,$root.uff.Node=class{constructor(){this.inputs=[],this.fields=[],this.extra_fields=[]}static decode(t,r){const e=new $root.uff.Node,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.id=t.string();break;case 2:e.inputs.push(t.string());break;case 3:e.operation=t.string();break;case 4:e.fields.push($root.uff.Node.FieldsEntry.decode(t,t.uint32()));break;case 100:e.extra_fields.push($root.uff.Node.ExtraFieldsEntry.decode(t,t.uint32()));break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.Node;for(t.start();!t.end();){const e=t.tag();switch(e){case"id":r.id=t.string();break;case"inputs":t.array(r.inputs,()=>t.string());break;case"operation":r.operation=t.string();break;case"fields":r.fields.push($root.uff.Node.FieldsEntry.decodeText(t,!0));break;case"extra_fields":r.extra_fields.push($root.uff.Node.ExtraFieldsEntry.decodeText(t,!0));break;default:t.field(e,r)}}return r}},$root.uff.Node.prototype.id="",$root.uff.Node.prototype.operation="",$root.uff.Node.FieldsEntry=class{constructor(){}static decode(t,r){const e=new $root.uff.Node.FieldsEntry,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.key=t.string();break;case 2:e.value=$root.uff.Data.decode(t,t.uint32());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.Node.FieldsEntry;for(t.start();!t.end();){const e=t.tag();switch(e){case"key":r.key=t.string();break;case"value":r.value=$root.uff.Data.decodeText(t,!0);break;default:t.field(e,r)}}return r}},$root.uff.Node.FieldsEntry.prototype.key="",$root.uff.Node.FieldsEntry.prototype.value=null,$root.uff.Node.ExtraFieldsEntry=class{constructor(){}static decode(t,r){const e=new $root.uff.Node.ExtraFieldsEntry,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.key=t.string();break;case 2:e.value=$root.uff.Data.decode(t,t.uint32());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.Node.ExtraFieldsEntry;for(t.start();!t.end();){const e=t.tag();switch(e){case"key":r.key=t.string();break;case"value":r.value=$root.uff.Data.decodeText(t,!0);break;default:t.field(e,r)}}return r}},$root.uff.Node.ExtraFieldsEntry.prototype.key="",$root.uff.Node.ExtraFieldsEntry.prototype.value=null,$root.uff.Data=class{constructor(){}get type(){return $root.uff.Data.typeSet=$root.uff.Data.typeSet||new Set(["s","s_list","d","d_list","b","b_list","i","i_list","blob","ref","dtype","dtype_list","dim_orders","dim_orders_list"]),Object.keys(this).find(t=>$root.uff.Data.typeSet.has(t)&&this[t]!=null)}static decode(t,r){const e=new $root.uff.Data,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.s=t.string();break;case 2:e.s_list=$root.uff.ListString.decode(t,t.uint32());break;case 3:e.d=t.double();break;case 4:e.d_list=$root.uff.ListDouble.decode(t,t.uint32());break;case 5:e.b=t.bool();break;case 6:e.b_list=$root.uff.ListBool.decode(t,t.uint32());break;case 7:e.i=t.int64();break;case 8:e.i_list=$root.uff.ListInt64.decode(t,t.uint32());break;case 9:e.blob=t.bytes();break;case 100:e.ref=t.string();break;case 101:e.dtype=t.int32();break;case 102:e.dtype_list=$root.uff.ListDataType.decode(t,t.uint32());break;case 103:e.dim_orders=$root.uff.DimensionOrders.decode(t,t.uint32());break;case 104:e.dim_orders_list=$root.uff.ListDimensionOrders.decode(t,t.uint32());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.Data;for(t.start();!t.end();){const e=t.tag();switch(e){case"s":r.s=t.string();break;case"s_list":r.s_list=$root.uff.ListString.decodeText(t,!0);break;case"d":r.d=t.float();break;case"d_list":r.d_list=$root.uff.ListDouble.decodeText(t,!0);break;case"b":r.b=t.boolean();break;case"b_list":r.b_list=$root.uff.ListBool.decodeText(t,!0);break;case"i":r.i=t.integer();break;case"i_list":r.i_list=$root.uff.ListInt64.decodeText(t,!0);break;case"blob":r.blob=t.bytes();break;case"ref":r.ref=t.string();break;case"dtype":r.dtype=t.enum($root.uff.DataType);break;case"dtype_list":r.dtype_list=$root.uff.ListDataType.decodeText(t,!0);break;case"dim_orders":r.dim_orders=$root.uff.DimensionOrders.decodeText(t,!0);break;case"dim_orders_list":r.dim_orders_list=$root.uff.ListDimensionOrders.decodeText(t,!0);break;default:t.field(e,r)}}return r}},$root.uff.DataType={DT_INVALID:0,DT_INT8:65544,DT_INT16:65552,DT_INT32:65568,DT_INT64:65600,DT_FLOAT16:131088,DT_FLOAT32:131104},$root.uff.OrderEnum={OE_ZERO:0,OE_SPECIAL:-1,OE_INCREMENT:2147483647,OE_DECREMENT:-2147483648},$root.uff.DimensionOrders=class{constructor(){this.orders=[]}static decode(t,r){const e=new $root.uff.DimensionOrders,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.orders.push($root.uff.DimensionOrders.OrdersEntry.decode(t,t.uint32()));break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.DimensionOrders;for(t.start();!t.end();){const e=t.tag();switch(e){case"orders":r.orders.push($root.uff.DimensionOrders.OrdersEntry.decodeText(t,!0));break;default:t.field(e,r)}}return r}},$root.uff.DimensionOrders.OrdersEntry=class{constructor(){}static decode(t,r){const e=new $root.uff.DimensionOrders.OrdersEntry,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.key=t.int32();break;case 2:e.value=$root.uff.ListInt64.decode(t,t.uint32());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.DimensionOrders.OrdersEntry;for(t.start();!t.end();){const e=t.tag();switch(e){case"key":r.key=t.enum($root.uff.OrderEnum);break;case"value":r.value=$root.uff.ListInt64.decodeText(t,!0);break;default:t.field(e,r)}}return r}},$root.uff.DimensionOrders.OrdersEntry.prototype.key=0,$root.uff.DimensionOrders.OrdersEntry.prototype.value=null,$root.uff.ListString=class{constructor(){this.val=[]}static decode(t,r){const e=new $root.uff.ListString,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.val.push(t.string());break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.ListString;for(t.start();!t.end();){const e=t.tag();switch(e){case"val":t.array(r.val,()=>t.string());break;default:t.field(e,r)}}return r}},$root.uff.ListDouble=class{constructor(){this.val=[]}static decode(t,r){const e=new $root.uff.ListDouble,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.val=t.doubles(e.val,s);break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.ListDouble;for(t.start();!t.end();){const e=t.tag();switch(e){case"val":t.array(r.val,()=>t.float());break;default:t.field(e,r)}}return r}},$root.uff.ListBool=class{constructor(){this.val=[]}static decode(t,r){const e=new $root.uff.ListBool,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.val=t.array(e.val,()=>t.bool(),s);break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.ListBool;for(t.start();!t.end();){const e=t.tag();switch(e){case"val":t.array(r.val,()=>t.boolean());break;default:t.field(e,r)}}return r}},$root.uff.ListInt64=class{constructor(){this.val=[]}static decode(t,r){const e=new $root.uff.ListInt64,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.val=t.array(e.val,()=>t.int64(),s);break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.ListInt64;for(t.start();!t.end();){const e=t.tag();switch(e){case"val":t.array(r.val,()=>t.integer());break;default:t.field(e,r)}}return r}},$root.uff.ListDataType=class{constructor(){this.val=[]}static decode(t,r){const e=new $root.uff.ListDataType,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.val=t.array(e.val,()=>t.int32(),s);break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.ListDataType;for(t.start();!t.end();){const e=t.tag();switch(e){case"val":t.array(r.val,()=>t.enum($root.uff.DataType));break;default:t.field(e,r)}}return r}},$root.uff.ListDimensionOrders=class{constructor(){this.val=[]}static decode(t,r){const e=new $root.uff.ListDimensionOrders,a=t.next(r);for(;t.end(a);){const s=t.uint32();switch(s>>>3){case 1:e.val.push($root.uff.DimensionOrders.decode(t,t.uint32()));break;default:t.skipType(7&s)}}return e}static decodeText(t){const r=new $root.uff.ListDimensionOrders;for(t.start();!t.end();){const e=t.tag();switch(e){case"val":r.val.push($root.uff.DimensionOrders.decodeText(t,!0));break;default:t.field(e,r)}}return r}};
