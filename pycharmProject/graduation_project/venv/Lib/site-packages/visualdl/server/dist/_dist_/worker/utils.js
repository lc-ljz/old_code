export function checkWorkerModuleSupport(){let r=!1;const n={get type(){return r=!0,"module"}};try{new Worker("blob://",n)}finally{return r}}export function handlerInListener(r,n,t){return r[n].findIndex(o=>Object.is(o,t))}export function pushFunctionToListener(r,n,t){r[n]||(r[n]=[]),handlerInListener(r,n,t)===-1&&r[n].push(t)}export function removeFunctionFromListener(r,n,t){if(r[n])if(!t)delete r[n];else{const o=handlerInListener(r,n,t);o!==-1&&r[n].splice(o,1)}}export function callListener(r,n){var t;(t=r[n.type])===null||t===void 0||t.forEach(o=>{try{o(n.data)}catch(e){const i=e instanceof Error?e:new Error(e);this.emit("ERROR",i)}})}export async function runner(r,n){const{default:t}=await import(r);t(n)}
