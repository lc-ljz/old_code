var torch=torch||{},base=base||require("./base"),long=long||{Long:require("long")};torch.ModelFactory=class{match(n){if(n.identifier.split(".").pop().toLowerCase()=="t7"){const i=n.buffer;return!(i.length>=1&&i[0]>58)}return!1}open(n,i){return torch.Metadata.open(i).then(t=>{const s=n.identifier;try{let e=new torch.T7Reader(n.buffer,o=>(!o||o=="nn.JointTrainModule"||o.startsWith("nn.MSDNet_")||o.startsWith("onmt.")||i.exception(new torch.Error("Unknown type '"+o+"' in '"+s+"'."),!1),null)).read();return e&&Array.isArray(e)&&e.length==2&&e[0].__type__&&!e[1].__type__&&(e=e[0]),new torch.Model(t,e)}catch(e){const o=e&&e.message?e.message:e.toString();throw new torch.Error(o.replace(/\.$/,"")+" in '"+s+"'.")}})}},torch.Model=class{constructor(n,i){this._graphs=[],this._graphs.push(new torch.Graph(n,i))}get graphs(){return this._graphs}get format(){return"Torch v7"}},torch.Graph=class{constructor(n,i){this._inputs=[],this._outputs=[],this._nodes=[],this._groups="false",Object.prototype.hasOwnProperty.call(i,"model")&&(i=i.model);const t=[],s=[];this._loadModule(n,i,[],"",t,s),this._inputs=this._inputs.concat(t.map((e,o)=>new torch.Parameter("input"+(o!=0?(o+1).toString():""),!0,[e]))),this._outputs=this._outputs.concat(s.map((e,o)=>new torch.Parameter("output"+(o!=0?(o+1).toString():""),!0,[e])))}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}get groups(){return this._groups}_loadModule(n,i,t,s,e,o){switch(t.length>0&&(this._groups=!0),i.__type__){case"nn.Sequential":{t.push(s);let h=e,r=[];const a=i.modules.length;let u=0;for(const c of i.modules)u==a-1&&(r=o),this._loadModule(n,c,t,u.toString(),h,r),h=r,r=[],u++;t.pop();break}case"nn.Parallel":case"nn.ParallelTable":case"nn.JointTrain":{t.push(s);let h=[],r=[],a=0;for(const u of i.modules){const c=[].concat(e),l=[].concat(o);this._loadModule(n,u,t,a.toString(),c,l),e.length==0&&(h=h.concat(c)),o.length==0&&(r=r.concat(l)),a++}e=e.concat(h);for(const u of r)o.push(u);t.pop();break}case"nn.Concat":case"nn.ConcatTable":{const h=s;e.length==0&&e.push(new torch.Argument(t.join("/")+":"+s+":in",null,null));let r=[],a=0;for(const u of i.modules){const c=e.map(_=>_),l=[];this._loadModule(n,u,t,h+"."+a.toString(),c,l),r=r.concat(l),a++}delete i.modules,delete i.dimension,this._createNode(n,i,t,s,r,o);break}case"nn.Inception":delete i.modules,delete i.module,delete i.transfer,delete i.pool,this._createNode(n,i,t,s,e,o);break;default:this._createNode(n,i,t,s,e,o)}}_createNode(n,i,t,s,e,o){this._nodes.push(new torch.Node(n,i,t,s,e,o))}},torch.Parameter=class{constructor(n,i,t){this._name=n,this._visible=i,this._arguments=t}get name(){return this._name}get visible(){return this._visible}get arguments(){return this._arguments}},torch.Argument=class{constructor(n,i,t){if(typeof n!="string")throw new torch.Error("Invalid argument identifier '"+JSON.stringify(n)+"'.");this._name=n,this._type=i,this._initializer=t}get name(){return this._name}get type(){return this._initializer?this._initializer.type:this._type}get initializer(){return this._initializer}},torch.Node=class{constructor(n,i,t,s,e,o){this._metadata=n,this._group=t.join("/"),i.name&&typeof i.name=="string"?(this._name=i.name,delete i.name):this._name=this._group?this._group+":"+s:s,this._type=i.__type__||"nn.Module";let h=[];for(const r of Object.keys(i)){const a=i[r];if(a&&a.__type__&&a.__type__.startsWith("torch.")&&a.__type__.endsWith("Storage")){const u=[];a.reset();for(let c=0;c<a.size;c++)u.push(a.read());i[r]=u}}switch(delete i.iSize,delete i.finput,delete i.fgradInput,delete i.output,delete i.gradInput,delete i.gradWeight,delete i.gradBias,delete i.grad_tmp,delete i.scaleT,delete i._input,delete i._output,delete i._gradInput,delete i._gradOutput,delete i.buffer,delete i.buffer2,delete i.tmp_in,delete i.tmp_out,delete i.accUpdateGradParameters,this._type){case"nn.Linear":delete i.addBuffer;break;case"nn.Normalize":case"nn.Normalize2":delete i.addBuffer,delete i.normp,delete i.norm;break;case"cudnn.SpatialConvolution":case"cudnn.SpatialFullConvolution":case"nn.SpatialConvolution":case"nn.SpatialConvolutionMM":case"nn.SpatialDilatedConvolution":case"nn.SpatialFullConvolution":delete i.ones,delete i.input_slice,delete i.output_slice,delete i.convDescData,this._updateSize(i,"adj"),this._updateSize(i,"d"),this._updateSize(i,"dilation"),this._updateSize(i,"k"),this._updateSize(i,"pad");break;case"cudnn.BatchNormalization":case"cudnn.SpatialBatchNormalization":case"nn.BatchNormalization":case"nn.SpatialBatchNormalization":case"nn.InstanceNormalization":delete i.save_mean,delete i.save_std,delete i.gradWeight,delete i.normalized,delete i.centered,delete i.bn;break;case"nn.SpatialCrossMapLRN":delete i.scale;break;case"cudnn.SpatialMaxPooling":case"cudnn.SpatialAveragePooling":case"inn.SpatialMaxPooling":case"nn.SpatialMaxPooling":case"nn.SpatialAveragePooling":delete i.indices,this._updateSize(i,"pad"),this._updateSize(i,"d"),this._updateSize(i,"k");break;case"nn.SpatialZeroPadding":case"nn.SpatialReflectionPadding":case"nn.SpatialReplicationPadding":this._updateBox(i,"pad");break;case"nn.Dropout":delete i.noise;break;case"nn.gModule":delete i.forwardnodes,delete i.backwardnodes;break;case"nn.StereoJoin":delete i.output_L}if(this._attributes=[],i.__type__)for(const r of Object.keys(i)){if(r=="__type__"||r=="_type")continue;const a=i[r];Array.isArray(a)&&a.every(u=>u&&u.__type__&&u.__type__.startsWith("nn."))||(a.__type__&&a.__type__.startsWith("torch.")&&a.__type__.endsWith("Tensor")?h.push(new torch.Parameter(r,!0,[new torch.Argument(r,null,new torch.Tensor(a))])):r=="modules"||a.__type__&&a.__type__!="Function"||this._attributes.push(new torch.Attribute(this._metadata,this._type,r,a)))}this._inputs=[],e.length==0&&this._name&&e.push(new torch.Argument(this._name+":in",null,null)),this._inputs.push(new torch.Parameter("input",!0,e)),o.length==0&&this._name&&o.push(new torch.Argument(this._name,null,null)),this._outputs=[],this._outputs.push(new torch.Parameter("output",!0,o)),h=h.filter(r=>r.name!="weight"||(this._inputs.push(r),!1)),h=h.filter(r=>r.name!="bias"||(this._inputs.push(r),!1)),this._inputs=this._inputs.concat(h)}get name(){return this._name}get type(){return this._type}get group(){return this._group}get metadata(){return this._metadata.type(this._type)}get attributes(){return this._attributes}get inputs(){return this._inputs}get outputs(){return this._outputs}_updateSize(n,i){Object.prototype.hasOwnProperty.call(n,i+"W")&&Object.prototype.hasOwnProperty.call(n,i+"H")&&(n[i]=[n[i+"W"],n[i+"H"]],delete n[i+"W"],delete n[i+"H"])}_updateBox(n,i){Object.prototype.hasOwnProperty.call(n,i+"_t")&&Object.prototype.hasOwnProperty.call(n,i+"_r")&&Object.prototype.hasOwnProperty.call(n,i+"_b")&&Object.prototype.hasOwnProperty.call(n,i+"_l")&&(n[i]=[n[i+"_t"],n[i+"_r"],n[i+"_b"],n[i+"_l"]],delete n[i+"_t"],delete n[i+"_r"],delete n[i+"_b"],delete n[i+"_l"])}},torch.Attribute=class{constructor(n,i,t,s){this._name=t,this._value=s,t=="train"&&(this._visible=!1);const e=n.attribute(i,t);e&&(Object.prototype.hasOwnProperty.call(e,"visible")?this._visible=e.visible:Object.prototype.hasOwnProperty.call(e,"default")&&JSON.stringify(e.default)==JSON.stringify(this._value)&&(this._visible=!1))}get name(){return this._name}get value(){return this._value}get visible(){return this._visible!=0}},torch.Tensor=class{constructor(n){this._type=new torch.TensorType(n),this._storage=n.storage}get type(){return this._type}get state(){return this._context().state||null}get value(){const n=this._context();return n.state?null:(n.limit=Number.MAX_SAFE_INTEGER,this._decode(n,0))}toString(){const n=this._context();if(n.state)return"";n.limit=1e3;const i=this._decode(n,0);return JSON.stringify(i,null,4)}_context(){const n={state:null,index:0,count:0};if(!this._storage||!this._storage.reader)return n.state="Tensor data is empty.",n;switch(this._type.dataType){case"uint8":case"int8":case"int16":case"int32":case"int64":case"float32":case"float64":break;default:n.state="Tensor data type is not implemented."}return n.dimensions=this._type.shape.dimensions,n.dimensions||n.dimensions.length!=0?(n.storage=this._storage,n.storage.reset(),n):(n.state="Tensor has no dimensions.",n)}_decode(n,i){const t=[],s=n.dimensions[i];if(i==n.dimensions.length-1)for(let e=0;e<s;e++){if(n.count>n.limit)return t.push("..."),t;t.push(n.storage.read()),n.index++,n.count++}else for(let e=0;e<s;e++){if(n.count>n.limit)return t.push("..."),t;t.push(this._decode(n,i+1))}return t}},torch.TensorType=class{constructor(n){this._dataType=n.dataType,this._shape=new torch.TensorShape(n.size)}get dataType(){return this._dataType}get shape(){return this._shape}toString(){return(this.dataType||"?")+this._shape.toString()}},torch.TensorShape=class{constructor(n){this._dimensions=n}get dimensions(){return this._dimensions}toString(){return this._dimensions?this._dimensions.length==0?"":"["+this._dimensions.map(n=>n.toString()).join(",")+"]":""}},torch.Metadata=class{static open(n){return torch.Metadata._metadata?Promise.resolve(torch.Metadata._metadata):n.request(null,"torch-metadata.json","utf-8").then(i=>(torch.Metadata._metadata=new torch.Metadata(i),torch.Metadata._metadata)).catch(()=>(torch.Metadata._metadata=new torch.Metadata(null),torch.Metadata._metadata))}constructor(n){if(this._map={},this._attributeCache={},n){const i=JSON.parse(n);if(i)for(const t of i)t.schema.name=t.name,this._map[t.name]=t.schema}}type(n){return this._map[n]||null}attribute(n,i){let t=this._attributeCache[n];if(!t){t={};const s=this.type(n);if(s&&s.attributes&&s.attributes.length>0)for(const e of s.attributes)t[e.name]=e;this._attributeCache[n]=t}return t[i]||null}},torch.Error=class extends Error{constructor(n){super(n),this.name="Error loading Torch model."}},torch.T7Reader=class{constructor(n,i){if(this._callback=i,this._memo=new Map,this._registry={},this._registry["bnn.Binary"]=function(t){t.nn(this)},this._registry["bnn.SpatialConvolution"]=function(t){t.nn(this)},this._registry["cudnn.BatchNormalization"]=function(t){t.nn(this)},this._registry["cudnn.ReLU"]=function(t){t.nn(this)},this._registry["cudnn.Sigmoid"]=function(t){t.nn(this)},this._registry["cudnn.SoftMax"]=function(t){t.nn(this)},this._registry["cudnn.LogSoftMax"]=function(t){t.nn(this)},this._registry["cudnn.SpatialAveragePooling"]=function(t){t.nn(this)},this._registry["cudnn.SpatialBatchNormalization"]=function(t){t.nn(this)},this._registry["cudnn.SpatialConvolution"]=function(t){t.nn(this)},this._registry["cudnn.SpatialFullConvolution"]=function(t){t.nn(this)},this._registry["cudnn.SpatialMaxPooling"]=function(t){t.nn(this)},this._registry["cudnn.SpatialSoftMax"]=function(t){t.nn(this)},this._registry["cudnn.Tanh"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricAveragePooling"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricBatchNormalization"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricConvolution"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricMaxPooling"]=function(t){t.nn(this)},this._registry.Dict=function(t){t.nn(this)},this._registry["inn.ConstAffine"]=function(t){t.nn(this)},this._registry["inn.SpatialMaxPooling"]=function(t){t.nn(this)},this._registry["nn.Abs"]=function(t){t.nn(this)},this._registry["nn.AddConstant"]=function(t){t.nn(this)},this._registry["nn.BatchNormalization"]=function(t){t.nn(this)},this._registry["nn.BilinearSamplerBHWD"]=function(t){t.nn(this)},this._registry["nn.BinActiveZ"]=function(t){t.nn(this)},this._registry["nn.BCECriterion"]=function(t){t.nn(this)},this._registry["nn.CMul"]=function(t){t.nn(this)},this._registry["nn.CAddTable"]=function(t){t.nn(this)},this._registry["nn.CDivTable"]=function(t){t.nn(this)},this._registry["nn.CMulTable"]=function(t){t.nn(this)},this._registry["nn.CSubTable"]=function(t){t.nn(this)},this._registry["nn.Concat"]=function(t){t.nn(this)},this._registry["nn.Copy"]=function(t){t.nn(this)},this._registry["nn.ConcatTable"]=function(t){t.nn(this)},this._registry["nn.Contiguous"]=function(t){t.nn(this)},this._registry["nn.Constant"]=function(t){t.nn(this)},this._registry["nn.CostVolMulti"]=function(t){t.nn(this)},this._registry["nn.DepthConcat"]=function(t){t.nn(this)},this._registry["nn.Dropout"]=function(t){t.nn(this)},this._registry["nn.Exp"]=function(t){t.nn(this)},this._registry["nn.ExpOut"]=function(t){t.nn(this)},this._registry["nn.FlattenTable"]=function(t){t.nn(this)},this._registry["nn.GenNoise"]=function(t){t.nn(this)},this._registry["nn.Identity"]=function(t){t.nn(this)},this._registry["nn.Index"]=function(t){t.nn(this)},this._registry["nn.Inception"]=function(t){t.nn(this)},this._registry["nn.InstanceNormalization"]=function(t){t.nn(this)},this._registry["nn.JoinTable"]=function(t){t.nn(this)},this._registry["nn.JointTrain"]=function(t){t.nn(this)},this._registry["nn.KeypointCoordinate"]=function(t){t.nn(this)},this._registry["nn.LeakyReLU"]=function(t){t.nn(this)},this._registry["nn.Linear"]=function(t){t.nn(this)},this._registry["nn.LinearNoBias"]=function(t){t.nn(this)},this._registry["nn.LogSoftMax"]=function(t){t.nn(this)},this._registry["nn.LookupTable"]=function(t){t.nn(this)},this._registry["nn.LSTM"]=function(t){t.nn(this)},this._registry["nn.MaskZero"]=function(t){t.nn(this)},this._registry["nn.MapTable"]=function(t){t.nn(this)},this._registry["nn.Max"]=function(t){t.nn(this)},this._registry["nn.Mean"]=function(t){t.nn(this)},this._registry["nn.Min"]=function(t){t.nn(this)},this._registry["nn.MulConstant"]=function(t){t.nn(this)},this._registry["nn.MM"]=function(t){t.nn(this)},this._registry["nn.MSECriterion"]=function(t){t.nn(this)},this._registry["nn.Narrow"]=function(t){t.nn(this)},this._registry["nn.NarrowTable"]=function(t){t.nn(this)},this._registry["nn.Normalize"]=function(t){t.nn(this)},this._registry["nn.Normalize2"]=function(t){t.nn(this)},this._registry["nn.NoiseFill"]=function(t){t.nn(this)},this._registry["nn.Padding"]=function(t){t.nn(this)},this._registry["nn.Parallel"]=function(t){t.nn(this)},this._registry["nn.ParallelCriterion"]=function(t){t.nn(this)},this._registry["nn.ParallelTable"]=function(t){t.nn(this)},this._registry["nn.PixelShuffle"]=function(t){t.nn(this)},this._registry["nn.Power"]=function(t){t.nn(this)},this._registry["nn.PReLU"]=function(t){t.nn(this)},this._registry["nn.Recursor"]=function(t){t.nn(this)},this._registry["nn.ReLU"]=function(t){t.nn(this)},this._registry["nn.Replicate"]=function(t){t.nn(this)},this._registry["nn.Reshape"]=function(t){t.nn(this)},this._registry["nn.ShaveImage"]=function(t){t.nn(this)},this._registry["nn.Select"]=function(t){t.nn(this)},this._registry["nn.SelectTable"]=function(t){t.nn(this)},this._registry["nn.Sequencer"]=function(t){t.nn(this)},this._registry["nn.Sequential"]=function(t){t.nn(this)},this._registry["nn.Sigmoid"]=function(t){t.nn(this)},this._registry["nn.Sum"]=function(t){t.nn(this)},this._registry["nn.SoftMax"]=function(t){t.nn(this)},this._registry["nn.SpatialAveragePooling"]=function(t){t.nn(this)},this._registry["nn.SpatialBatchNormalization"]=function(t){t.nn(this)},this._registry["nn.SpatialConvolution"]=function(t){t.nn(this)},this._registry["nn.SpatialConvolutionMM"]=function(t){t.nn(this)},this._registry["nn.SpatialCrossMapLRN"]=function(t){t.nn(this)},this._registry["nn.SpatialDilatedConvolution"]=function(t){t.nn(this)},this._registry["nn.SpatialDropout"]=function(t){t.nn(this)},this._registry["nn.SpatialFractionalMaxPooling"]=function(t){t.nn(this)},this._registry["nn.SpatialFullConvolution"]=function(t){t.nn(this)},this._registry["nn.SpatialLPPooling"]=function(t){t.nn(this)},this._registry["nn.SpatialMaxPooling"]=function(t){t.nn(this)},this._registry["nn.SpatialReflectionPadding"]=function(t){t.nn(this)},this._registry["nn.SpatialReplicationPadding"]=function(t){t.nn(this)},this._registry["nn.SpatialSoftMax"]=function(t){t.nn(this)},this._registry["nn.SpatialSubtractiveNormalization"]=function(t){t.nn(this)},this._registry["nn.SpatialUpSamplingBilinear"]=function(t){t.nn(this)},this._registry["nn.SpatialUpSamplingNearest"]=function(t){t.nn(this)},this._registry["nn.SpatialZeroPadding"]=function(t){t.nn(this)},this._registry["nn.SplitTable"]=function(t){t.nn(this)},this._registry["nn.Squeeze"]=function(t){t.nn(this)},this._registry["nn.Square"]=function(t){t.nn(this)},this._registry["nn.Sqrt"]=function(t){t.nn(this)},this._registry["nn.StereoJoin"]=function(t){t.nn(this)},this._registry["nn.Tanh"]=function(t){t.nn(this)},this._registry["nn.Transpose"]=function(t){t.nn(this)},this._registry["nn.TotalVariation"]=function(t){t.nn(this)},this._registry["nn.Unpool"]=function(t){t.nn(this)},this._registry["nn.View"]=function(t){t.nn(this)},this._registry["nn.gModule"]=function(t){t.nn(this)},this._registry["nngraph.Node"]=function(t){t.nn(this)},this._registry["graph.Edge"]=function(t){t.nn(this)},this._registry["graph.Graph"]=function(t){t.nn(this)},this._registry["torch.ByteTensor"]=function(t){t.tensor(this,"uint8")},this._registry["torch.CharTensor"]=function(t){t.tensor(this,"int8")},this._registry["torch.ShortTensor"]=function(t){t.tensor(this,"int16")},this._registry["torch.IntTensor"]=function(t){t.tensor(this,"int32")},this._registry["torch.LongTensor"]=function(t){t.tensor(this,"int64")},this._registry["torch.FloatTensor"]=function(t){t.tensor(this,"float32")},this._registry["torch.DoubleTensor"]=function(t){t.tensor(this,"float64")},this._registry["torch.CudaByteTensor"]=function(t){t.tensor(this,"uint8")},this._registry["torch.CudaCharTensor"]=function(t){t.tensor(this,"int8")},this._registry["torch.CudaShortTensor"]=function(t){t.tensor(this,"int16")},this._registry["torch.CudaIntTensor"]=function(t){t.tensor(this,"int32")},this._registry["torch.CudaLongTensor"]=function(t){t.tensor(this,"int64")},this._registry["torch.CudaTensor"]=function(t){t.tensor(this,"float32")},this._registry["torch.CudaDoubleTensor"]=function(t){t.tensor(this,"float64")},this._registry["torch.ByteStorage"]=function(t){t.storage(this,"uint8",1)},this._registry["torch.CharStorage"]=function(t){t.storage(this,"int8",1)},this._registry["torch.ShortStorage"]=function(t){t.storage(this,"int16",2)},this._registry["torch.IntStorage"]=function(t){t.storage(this,"int32",4)},this._registry["torch.LongStorage"]=function(t){t.storage(this,"int64",8)},this._registry["torch.FloatStorage"]=function(t){t.storage(this,"float32",4)},this._registry["torch.DoubleStorage"]=function(t){t.storage(this,"float64",8)},this._registry["torch.CudaByteStorage"]=function(t){t.storage(this,"uint8",1)},this._registry["torch.CudaCharStorage"]=function(t){t.storage(this,"int8",1)},this._registry["torch.CudaShortStorage"]=function(t){t.storage(this,"int16",2)},this._registry["torch.CudaIntStorage"]=function(t){t.storage(this,"int32",4)},this._registry["torch.CudaLongStorage"]=function(t){t.storage(this,"int64",8)},this._registry["torch.CudaIntStorage"]=function(t){t.storage(this,"int32",4)},this._registry["torch.CudaStorage"]=function(t){t.storage(this,"float32",4)},this._registry["torch.CudaFloatStorage"]=function(t){t.storage(this,"float64",8)},this._registry["w2nn.AuxiliaryLossTable"]=function(t){t.nn(this)},this._registry["w2nn.InplaceClip01"]=function(t){t.nn(this)},this._registry["w2nn.ScaleTable"]=function(t){t.nn(this)},n.length==0)throw new torch.Error("File is empty.");n[0]<=8?this._reader=new torch.BinaryReader(n):(this._reader=new torch.TextReader(n),this._reader.int32(),this._reader.reset())}read(){const n=this.int32();switch(n){case 0:return null;case 1:return this.float64();case 2:return this.string();case 3:return this.table();case 4:return this.object();case 5:return this.boolean();case 6:case 7:case 8:return this.function();default:throw new torch.Error("File format has invalid type '"+n+"'.")}}boolean(){return this._reader.boolean()}bytes(n){return this._reader.bytes(n)}int32(){return this._reader.int32()}int64(){return this._reader.int64()}int64s(n){return this._reader.int64s(n)}float64(){return this._reader.float64()}string(){return this._reader.string()}object(){const n=this.int32();if(this._memo.has(n))return this._memo.get(n);let i=this.string(),t=null;i.startsWith("V ")?(t=this.string(),i=Number(i.split(" ")[1])):(t=i,i=0);const s={__type__:t};this._memo.set(n,s);let e=this._registry[t];return e?e.apply(s,[this,i]):(e=this._callback(t),e&&e.apply(s,[this,i]),this.nn(s)),s}table(){const n=this.int32();if(this._memo.has(n))return this._memo.get(n);const i={};this._memo.set(n,i);const t=this.int32();let s=!0,e=0;for(let h=0;h<t;h++){const r=this.read(),a=this.read();i[r]=a,Number.isInteger(r)&&r>=0?e+=r:s=!1}const o=Object.keys(i).length;if(s&&o*(o+1)==2*e){const h=[];for(let r=0;r<o;r++){let a=i[r+1];a==i&&(a=h),h.push(a)}return this._memo.set(n,h),h}return i}function(){const n=this.int32();if(this._memo.has(n))return this._memo.get(n);const i=this.int32(),t={__type__:"Function",size:i,dumped:this.bytes(i),upvalues:this.read()};return this._memo.set(n,t),t}nn(n){const i=this.read();if(i!=null)for(const t of Object.keys(i))n[t]=i[t]}tensor(n,i){const t=this.int32();n.dataType=i,n.size=this.int64s(t),n.stride=this.int64s(t),n.storage_offset=this.int64()-1,n.storage=this.read()}storage(n,i,t){n.dataType=i,n.itemSize=t,n.size=this.int64(),n.reader=this._reader.storage(n.size,n.itemSize,i),n.reset=function(){this.reader.reset()},n.read=function(){switch(i){case"uint8":return this.reader.byte();case"int8":return this.reader.int8();case"int16":return this.reader.int16();case"int32":return this.reader.int32();case"int64":return this.reader.int64();case"float32":return this.reader.float32();case"float64":return this.reader.float64()}return null}}},torch.BinaryReader=class{constructor(n){this._buffer=n,this._dataView=new DataView(this._buffer.buffer,this._buffer.byteOffset,this._buffer.byteLength),this._position=0,this._textDecoder=new TextDecoder("ascii")}reset(){this._position=0}skip(n){if(this._position+=n,this._position>this._buffer.length)throw new torch.Error("Expected "+(this._position-this._buffer.length)+" more bytes. The file might be corrupted. Unexpected end of file.")}boolean(){return this.int32()==1}bytes(n){const i=this._position;return this.skip(n),this._buffer.subarray(i,this._position)}int8(){const n=this._position;return this.skip(1),this._dataView.getInt8(n,!0)}int16(){const n=this._position;return this.skip(2),this._dataView.getInt16(n,!0)}int32(){const n=this._position;return this.skip(4),this._dataView.getInt32(n,!0)}int64(){const n=this._position;this.skip(8);const i=this._dataView.getUint32(n,!0),t=this._dataView.getUint32(n+4,!0);return new long.Long(i,t,!1).toNumber()}int64s(n){const i=[];for(let t=0;t<n;t++)i.push(this.int64());return i}float32(){const n=this._position;return this.skip(4),this._dataView.getFloat32(n,!0)}float64(){const n=this._position;return this.skip(8),this._dataView.getFloat64(n,!0)}string(){return this._textDecoder.decode(this.bytes(this.int32()))}storage(n,i){return new torch.BinaryReader(this.bytes(n*i))}},torch.TextReader=class{constructor(n,i){this._buffer=n,this._position=0,this._dataView=new DataView(this._buffer.buffer,this._buffer.byteOffset,this._buffer.byteLength),this._textDecoder=new TextDecoder("ascii"),this._separator=i||10}reset(){this._position=0}line(n){const i=this._position;for(;this._position<this._buffer.length&&n>-1;){if(this._buffer[this._position++]==this._separator)return this._buffer.slice(i,this._position-1);if(this._position==this._buffer.length)return this._buffer.slice(i,this._position);n--}throw new torch.Error("Line exceeded maximum length.")}boolean(){return this.int32()==1}bytes(n){return this.line(n)}int8(){return this.int64()}int16(){return this.int64()}int32(){return this.int64()}int64(){const n=this._textDecoder.decode(this.line(20)),i=Number.parseInt(n,10);if(Number.isNaN(n-i))throw new torch.Error("Couldn't parse int64 '"+n+"'.");return i}int64s(n){const i=[];if(n>0){const t=this._textDecoder.decode(this.line(Number.MAX_SAFE_INTEGER));for(const s of t.split(" ")){const e=Number.parseInt(s,10);if(Number.isNaN(s-e))throw new torch.Error("Couldn't parse int64 '"+s+"'.");i.push(e)}}return i}float32(){return this.float64()}float64(){const n=this._textDecoder.decode(this.line(24));if(n.startsWith("-nan"))return NaN;if(n.startsWith("nan"))return NaN;if(n.startsWith("inf"))return 1/0;if(n.startsWith("-inf"))return-1/0;const i=Number.parseFloat(n);if(Number.isNaN(n-i))throw new torch.Error("Couldn't parse float '"+n+"'.");return i}string(){const n=this.int32();if(n==0)return"";const i=this.line(n),t=this._textDecoder.decode(i);if(n!=t.length)throw torch.Error("Invalid text length.");return t}storage(n,i,t){if(n<=0)throw new torch.Error("Unsupported storage size '"+n+"'.");if(t==="uint8"){const e=this._position;this._position+=n;const o=this._buffer.slice(e,this._position);return this.line(0),new torch.BinaryReader(o)}const s=this.line(Number.MAX_SAFE_INTEGER);return new torch.TextReader(s,32)}},typeof module!="undefined"&&typeof module.exports=="object"&&(module.exports.ModelFactory=torch.ModelFactory);
