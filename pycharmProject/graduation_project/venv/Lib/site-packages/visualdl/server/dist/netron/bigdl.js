var bigdl=bigdl||{},long=long||{Long:require("long")},protobuf=protobuf||require("./protobuf");bigdl.ModelFactory=class{match(e){const a=e.identifier.split(".").pop().toLowerCase();if(a=="model"||a=="bigdl"){const t=e.tags("pb");if(t.has(2)&&t.has(7)&&t.has(8)&&t.has(9)&&t.has(10)&&t.has(11)&&t.has(12))return!0}}open(e,a){return a.require("./bigdl-proto").then(()=>bigdl.Metadata.open(a).then(t=>{const s=e.identifier;try{bigdl.proto=protobuf.get("bigdl").com.intel.analytics.bigdl.serialization;const r=protobuf.Reader.create(e.buffer),o=bigdl.proto.BigDLModule.decode(r);return new bigdl.Model(t,o)}catch(r){a.exception(r,!1);const o=r&&r.message?r.message:r.toString();throw new bigdl.Error(o.replace(/\.$/,"")+" in '"+s+"'.")}}))}},bigdl.Model=class{constructor(e,a){this._version=a&&a.version?a.version:"",this._graphs=[new bigdl.Graph(e,a)]}get format(){return"BigDL"+(this._version?" v"+this._version:"")}get graphs(){return this._graphs}},bigdl.Graph=class{constructor(e,a){this._type=a.moduleType,this._inputs=[],this._outputs=[],this._nodes=[],this._loadModule(e,"",a)}_loadModule(e,a,t){switch(t.moduleType){case"com.intel.analytics.bigdl.nn.StaticGraph":this._loadStaticGraph(e,a,t);break;case"com.intel.analytics.bigdl.nn.Sequential":this._loadSequential(e,a,t);break;case"com.intel.analytics.bigdl.nn.Input":this._inputs.push(new bigdl.Parameter(t.name,[new bigdl.Argument(t.name)]));break;default:this._nodes.push(new bigdl.Node(e,a,t))}}_loadSequential(e,a,t){a=a.length>0?a+"."+t.namePostfix:t.namePostfix;for(const s of t.subModules)this._loadModule(e,a,s)}_loadStaticGraph(e,a,t){a=a.length>0?a+"."+t.namePostfix:t.namePostfix;for(const s of t.subModules)this._loadModule(e,a,s)}get groups(){return this._groups||!1}get type(){return this._type}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}},bigdl.Parameter=class{constructor(e,a){this._name=e,this._arguments=a}get name(){return this._name}get visible(){return!0}get arguments(){return this._arguments}},bigdl.Argument=class{constructor(e,a,t){if(typeof e!="string")throw new bigdl.Error("Invalid argument identifier '"+JSON.stringify(e)+"'.");this._name=e,this._type=a||null,this._initializer=t||null}get name(){return this._name}get type(){return this._initializer?this._initializer.type:this._type}get initializer(){return this._initializer}},bigdl.Node=class{constructor(e,a,t){this._metadata=e,this._group=a,this._type=t.moduleType.split(".").pop(),this._name=t.name,this._attributes=[],this._inputs=[],this._outputs=[],this._inputs.push(new bigdl.Parameter("input",t.preModules.map(n=>new bigdl.Argument(n,null,null))));const s=e.type(this.type),r=s&&s.inputs?s.inputs.slice():[];if(r.shift(),t.weight&&(r.shift(),this._inputs.push(new bigdl.Parameter("weight",[new bigdl.Argument("",null,new bigdl.Tensor(t.weight))]))),t.bias&&(r.shift(),this._inputs.push(new bigdl.Parameter("bias",[new bigdl.Argument("",null,new bigdl.Tensor(t.bias))]))),t.parameters&&t.parameters.length>0)for(const n of t.parameters){const i=r.shift(),u=i?i.name:this._inputs.length.toString();this._inputs.push(new bigdl.Parameter(u,[new bigdl.Argument("",null,new bigdl.Tensor(n))]))}for(const n of Object.keys(t.attr)){const i=t.attr[n];n!=="module_numerics"&&n!=="module_tags"&&(i.dataType!==bigdl.proto.DataType.TENSOR?i.dataType===bigdl.proto.DataType.REGULARIZER&&i.value===void 0||(i.dataType!==bigdl.proto.DataType.ARRAY_VALUE||i.arrayValue.datatype!==bigdl.proto.DataType.TENSOR?this._attributes.push(new bigdl.Attribute(e.attribute(this._type,n),n,i)):this._inputs.push(new bigdl.Parameter(n,i.arrayValue.tensor.map(u=>new bigdl.Argument("",null,new bigdl.Tensor(u)))))):i.value&&this._inputs.push(new bigdl.Parameter(n,[new bigdl.Argument("",null,new bigdl.Tensor(i.tensorValue))])))}const o=this._name||this._type+t.namePostfix;this._outputs.push(new bigdl.Parameter("output",[new bigdl.Argument(o,null,null)]))}get group(){return this._group}get type(){return this._type}get metadata(){return this._metadata.type(this._type)}get name(){return this._name}get inputs(){return this._inputs}get outputs(){return this._outputs}get attributes(){return this._attributes}},bigdl.Attribute=class{constructor(e,a,t){switch(this._name=a,t.dataType){case bigdl.proto.DataType.INT32:this._type="int32",this._value=t.int32Value;break;case bigdl.proto.DataType.FLOAT:this._type="float32",this._value=t.floatValue;break;case bigdl.proto.DataType.DOUBLE:this._type="float64",this._value=t.doubleValue;break;case bigdl.proto.DataType.BOOL:this._type="boolean",this._value=t.boolValue;break;case bigdl.proto.DataType.REGULARIZER:this._value=t.value;break;case bigdl.proto.DataType.MODULE:this._value=t.bigDLModule;break;case bigdl.proto.DataType.NAME_ATTR_LIST:this._value=t.nameAttrListValue;break;case bigdl.proto.DataType.ARRAY_VALUE:switch(t.arrayValue.datatype){case bigdl.proto.DataType.INT32:this._type="int32[]",this._value=t.arrayValue.i32;break;case bigdl.proto.DataType.FLOAT:this._type="float32[]",this._value=t.arrayValue.flt;break;case bigdl.proto.DataType.STRING:this._type="string[]",this._value=t.arrayValue.str;break;case bigdl.proto.DataType.TENSOR:this._type="tensor[]",this._value=t.arrayValue.tensor;break;default:throw new bigdl.Error("Unsupported attribute array data type '"+t.arrayValue.datatype+"'.")}break;case bigdl.proto.DataType.DATA_FORMAT:switch(this._dataType="InputDataFormat",t.dataFormatValue){case 0:this._value="NCHW";break;case 1:this._value="NHWC"}break;default:throw new bigdl.Error("Unsupported attribute data type '"+t.dataType+"'.")}}get type(){return""}get name(){return this._name}get value(){return this._value}get visible(){return!0}},bigdl.Tensor=class{constructor(e){this._type=new bigdl.TensorType(e.datatype,new bigdl.TensorShape(e.size))}get kind(){return"Parameter"}get type(){return this._type}get state(){return"Not supported."}get value(){return null}toString(){return""}},bigdl.TensorType=class{constructor(e,a){switch(e){case bigdl.proto.DataType.FLOAT:this._dataType="float32";break;case bigdl.proto.DataType.DOUBLE:this._dataType="float64";break;default:throw new bigdl.Error("Unsupported tensor type '"+e+"'.")}this._shape=a}get dataType(){return this._dataType}get shape(){return this._shape}toString(){return(this.dataType||"?")+this._shape.toString()}},bigdl.TensorShape=class{constructor(e){this._dimensions=e.map(a=>a&&long.Long.isLong(a)?a.toNumber():a)}get dimensions(){return this._dimensions}toString(){return this._dimensions?"["+this._dimensions.map(e=>e.toString()).join(",")+"]":""}},bigdl.Metadata=class{static open(e){return bigdl.Metadata._metadata?Promise.resolve(bigdl.Metadata._metadata):e.request(null,"bigdl-metadata.json","utf-8").then(a=>(bigdl.Metadata._metadata=new bigdl.Metadata(a),bigdl.Metadata._metadata)).catch(()=>(bigdl.Metadata._metadata=new bigdl.Metadata(null),bigdl.Metadata._metadata))}constructor(e){if(this._map={},this._attributeCache={},e){const a=JSON.parse(e);if(a)for(const t of a)t.name&&t.schema&&(t.schema.name=t.name,this._map[t.name]=t.schema)}}type(e){return this._map[e]||null}attribute(e,a){let t=this._attributeCache[e];if(!t){t={};const s=this.type(e);if(s&&s.attributes&&s.attributes.length>0)for(const r of s.attributes)t[r.name]=r;this._attributeCache[e]=t}return t[a]||null}},bigdl.Error=class extends Error{constructor(e){super(e),this.name="Error loading BigDL model."}},typeof module!="undefined"&&typeof module.exports=="object"&&(module.exports.ModelFactory=bigdl.ModelFactory);
