var $root=protobuf.get("cntk");$root.CNTK={},$root.CNTK.proto={},$root.CNTK.proto.NDShape=class{constructor(){this.shape_dim=[]}static decode(e,r){const t=new $root.CNTK.proto.NDShape,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.shape_dim=e.array(t.shape_dim,()=>e.uint64(),a);break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.Axis=class{constructor(){}static decode(e,r){const t=new $root.CNTK.proto.Axis,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.static_axis_idx=e.int32();break;case 2:t.name=e.string();break;case 3:t.is_ordered_dynamic_axis=e.bool();break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.Axis.prototype.static_axis_idx=0,$root.CNTK.proto.Axis.prototype.name="",$root.CNTK.proto.Axis.prototype.is_ordered_dynamic_axis=!1,$root.CNTK.proto.NDArrayView=class{constructor(){}get values(){return $root.CNTK.proto.NDArrayView.valuesSet=$root.CNTK.proto.NDArrayView.valuesSet||new Set(["float_values","double_values","bytes_value","sint32_values"]),Object.keys(this).find(e=>$root.CNTK.proto.NDArrayView.valuesSet.has(e)&&this[e]!=null)}static decode(e,r){const t=new $root.CNTK.proto.NDArrayView,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.data_type=e.int32();break;case 2:t.storage_format=e.int32();break;case 3:t.shape=$root.CNTK.proto.NDShape.decode(e,e.uint32());break;case 4:t.float_values=$root.CNTK.proto.NDArrayView.FloatValues.decode(e,e.uint32());break;case 5:t.double_values=$root.CNTK.proto.NDArrayView.DoubleValues.decode(e,e.uint32());break;case 6:t.bytes_value=$root.CNTK.proto.NDArrayView.BytesValue.decode(e,e.uint32());break;case 7:t.sint32_values=$root.CNTK.proto.NDArrayView.IntValues.decode(e,e.uint32());break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.NDArrayView.prototype.data_type=0,$root.CNTK.proto.NDArrayView.prototype.storage_format=0,$root.CNTK.proto.NDArrayView.prototype.shape=null,$root.CNTK.proto.NDArrayView.DataType={Unknown:0,Float:1,Double:2,Float16:4,Int8:5,Int16:6},$root.CNTK.proto.NDArrayView.StorageFormat={Dense:0,SparseCSC:1,SparseBlockCol:2},$root.CNTK.proto.NDArrayView.FloatValues=class{constructor(){this.value=[]}static decode(e,r){const t=new $root.CNTK.proto.NDArrayView.FloatValues,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.value=e.floats(t.value,a);break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.NDArrayView.DoubleValues=class{constructor(){this.value=[]}static decode(e,r){const t=new $root.CNTK.proto.NDArrayView.DoubleValues,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.value=e.doubles(t.value,a);break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.NDArrayView.BytesValue=class{constructor(){}static decode(e,r){const t=new $root.CNTK.proto.NDArrayView.BytesValue,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.value=e.bytes();break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.NDArrayView.BytesValue.prototype.value=new Uint8Array([]),$root.CNTK.proto.NDArrayView.IntValues=class{constructor(){this.value=[]}static decode(e,r){const t=new $root.CNTK.proto.NDArrayView.IntValues,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.value=e.array(t.value,()=>e.sint32(),a);break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.Vector=class{constructor(){this.value=[]}static decode(e,r){const t=new $root.CNTK.proto.Vector,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.value.push($root.CNTK.proto.DictionaryValue.decode(e,e.uint32()));break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.Dictionary=class{constructor(){this.data={}}static decode(e,r){const t=new $root.CNTK.proto.Dictionary,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.version=e.uint64();break;case 2:e.pair(t.data,()=>e.string(),()=>$root.CNTK.proto.DictionaryValue.decode(e,e.uint32()));break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.Dictionary.prototype.version=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CNTK.proto.DictionaryValue=class{constructor(){}get value(){return $root.CNTK.proto.DictionaryValue.valueSet=$root.CNTK.proto.DictionaryValue.valueSet||new Set(["bool_value","int_value","size_t_value","float_value","double_value","string_value","nd_shape_value","axis_value","vector_value","dictionary_value","nd_array_view_value"]),Object.keys(this).find(e=>$root.CNTK.proto.DictionaryValue.valueSet.has(e)&&this[e]!=null)}static decode(e,r){const t=new $root.CNTK.proto.DictionaryValue,o=e.next(r);for(;e.end(o);){const a=e.uint32();switch(a>>>3){case 1:t.version=e.uint64();break;case 2:t.value_type=e.int32();break;case 3:t.bool_value=e.bool();break;case 4:t.int_value=e.int32();break;case 5:t.size_t_value=e.uint64();break;case 6:t.float_value=e.float();break;case 7:t.double_value=e.double();break;case 8:t.string_value=e.string();break;case 9:t.nd_shape_value=$root.CNTK.proto.NDShape.decode(e,e.uint32());break;case 10:t.axis_value=$root.CNTK.proto.Axis.decode(e,e.uint32());break;case 11:t.vector_value=$root.CNTK.proto.Vector.decode(e,e.uint32());break;case 12:t.dictionary_value=$root.CNTK.proto.Dictionary.decode(e,e.uint32());break;case 13:t.nd_array_view_value=$root.CNTK.proto.NDArrayView.decode(e,e.uint32());break;default:e.skipType(7&a)}}return t}},$root.CNTK.proto.DictionaryValue.prototype.version=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CNTK.proto.DictionaryValue.prototype.value_type=0,$root.CNTK.proto.DictionaryValue.Type={None:0,Bool:1,Int:2,SizeT:3,Float:4,Double:5,String:6,NDShape:7,Axis:8,Vector:9,Dictionary:10,NDArrayView:11};
