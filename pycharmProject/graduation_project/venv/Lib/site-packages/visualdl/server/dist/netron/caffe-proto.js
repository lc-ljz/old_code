var $root=protobuf.get("caffe");$root.caffe={},$root.caffe.BlobShape=class{constructor(){this.dim=[]}static decode(a,r){const e=new $root.caffe.BlobShape,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.dim=a.array(e.dim,()=>a.int64(),t);break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.BlobShape;for(a.start();!a.end();){const e=a.tag();switch(e){case"dim":a.array(r.dim,()=>a.integer());break;default:a.field(e,r)}}return r}},$root.caffe.BlobProto=class{constructor(){this.data=[],this.diff=[],this.double_data=[],this.double_diff=[]}static decode(a,r){const e=new $root.caffe.BlobProto,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 7:e.shape=$root.caffe.BlobShape.decode(a,a.uint32());break;case 5:e.data=a.floats(e.data,t);break;case 6:e.diff=a.floats(e.diff,t);break;case 8:e.double_data=a.doubles(e.double_data,t);break;case 9:e.double_diff=a.doubles(e.double_diff,t);break;case 1:e.num=a.int32();break;case 2:e.channels=a.int32();break;case 3:e.height=a.int32();break;case 4:e.width=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.BlobProto;for(a.start();!a.end();){const e=a.tag();switch(e){case"shape":r.shape=$root.caffe.BlobShape.decodeText(a,!0);break;case"data":a.array(r.data,()=>a.float());break;case"diff":a.array(r.diff,()=>a.float());break;case"double_data":a.array(r.double_data,()=>a.float());break;case"double_diff":a.array(r.double_diff,()=>a.float());break;case"num":r.num=a.integer();break;case"channels":r.channels=a.integer();break;case"height":r.height=a.integer();break;case"width":r.width=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.BlobProto.prototype.shape=null,$root.caffe.BlobProto.prototype.num=0,$root.caffe.BlobProto.prototype.channels=0,$root.caffe.BlobProto.prototype.height=0,$root.caffe.BlobProto.prototype.width=0,$root.caffe.BlobProtoVector=class{constructor(){this.blobs=[]}static decode(a,r){const e=new $root.caffe.BlobProtoVector,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.blobs.push($root.caffe.BlobProto.decode(a,a.uint32()));break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.BlobProtoVector;for(a.start();!a.end();){const e=a.tag();switch(e){case"blobs":r.blobs.push($root.caffe.BlobProto.decodeText(a,!0));break;default:a.field(e,r)}}return r}},$root.caffe.Datum=class{constructor(){this.float_data=[]}static decode(a,r){const e=new $root.caffe.Datum,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.channels=a.int32();break;case 2:e.height=a.int32();break;case 3:e.width=a.int32();break;case 4:e.data=a.bytes();break;case 5:e.label=a.int32();break;case 6:e.float_data=a.floats(e.float_data,t);break;case 7:e.encoded=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.Datum;for(a.start();!a.end();){const e=a.tag();switch(e){case"channels":r.channels=a.integer();break;case"height":r.height=a.integer();break;case"width":r.width=a.integer();break;case"data":r.data=a.bytes();break;case"label":r.label=a.integer();break;case"float_data":a.array(r.float_data,()=>a.float());break;case"encoded":r.encoded=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.Datum.prototype.channels=0,$root.caffe.Datum.prototype.height=0,$root.caffe.Datum.prototype.width=0,$root.caffe.Datum.prototype.data=new Uint8Array([]),$root.caffe.Datum.prototype.label=0,$root.caffe.Datum.prototype.encoded=!1,$root.caffe.FillerParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.FillerParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.type=a.string();break;case 2:e.value=a.float();break;case 3:e.min=a.float();break;case 4:e.max=a.float();break;case 5:e.mean=a.float();break;case 6:e.std=a.float();break;case 7:e.sparse=a.int32();break;case 8:e.variance_norm=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.FillerParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"type":r.type=a.string();break;case"value":r.value=a.float();break;case"min":r.min=a.float();break;case"max":r.max=a.float();break;case"mean":r.mean=a.float();break;case"std":r.std=a.float();break;case"sparse":r.sparse=a.integer();break;case"variance_norm":r.variance_norm=a.enum($root.caffe.FillerParameter.VarianceNorm);break;default:a.field(e,r)}}return r}},$root.caffe.FillerParameter.prototype.type="constant",$root.caffe.FillerParameter.prototype.value=0,$root.caffe.FillerParameter.prototype.min=0,$root.caffe.FillerParameter.prototype.max=1,$root.caffe.FillerParameter.prototype.mean=0,$root.caffe.FillerParameter.prototype.std=1,$root.caffe.FillerParameter.prototype.sparse=-1,$root.caffe.FillerParameter.prototype.variance_norm=0,$root.caffe.FillerParameter.VarianceNorm={FAN_IN:0,FAN_OUT:1,AVERAGE:2},$root.caffe.NetParameter=class{constructor(){this.input=[],this.input_shape=[],this.input_dim=[],this.layer=[],this.layers=[]}static decode(a,r){const e=new $root.caffe.NetParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.name=a.string();break;case 3:e.input.push(a.string());break;case 8:e.input_shape.push($root.caffe.BlobShape.decode(a,a.uint32()));break;case 4:e.input_dim=a.array(e.input_dim,()=>a.int32(),t);break;case 5:e.force_backward=a.bool();break;case 6:e.state=$root.caffe.NetState.decode(a,a.uint32());break;case 7:e.debug_info=a.bool();break;case 100:e.layer.push($root.caffe.LayerParameter.decode(a,a.uint32()));break;case 2:e.layers.push($root.caffe.V1LayerParameter.decode(a,a.uint32()));break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.NetParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"name":r.name=a.string();break;case"input":a.array(r.input,()=>a.string());break;case"input_shape":r.input_shape.push($root.caffe.BlobShape.decodeText(a,!0));break;case"input_dim":a.array(r.input_dim,()=>a.integer());break;case"force_backward":r.force_backward=a.boolean();break;case"state":r.state=$root.caffe.NetState.decodeText(a,!0);break;case"debug_info":r.debug_info=a.boolean();break;case"layer":r.layer.push($root.caffe.LayerParameter.decodeText(a,!0));break;case"layers":r.layers.push($root.caffe.V1LayerParameter.decodeText(a,!0));break;default:a.field(e,r)}}return r}},$root.caffe.NetParameter.prototype.name="",$root.caffe.NetParameter.prototype.force_backward=!1,$root.caffe.NetParameter.prototype.state=null,$root.caffe.NetParameter.prototype.debug_info=!1,$root.caffe.SolverParameter=class{constructor(){this.test_net=[],this.test_net_param=[],this.test_state=[],this.test_iter=[],this.stepvalue=[],this.weights=[]}static decode(a,r){const e=new $root.caffe.SolverParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 24:e.net=a.string();break;case 25:e.net_param=$root.caffe.NetParameter.decode(a,a.uint32());break;case 1:e.train_net=a.string();break;case 2:e.test_net.push(a.string());break;case 21:e.train_net_param=$root.caffe.NetParameter.decode(a,a.uint32());break;case 22:e.test_net_param.push($root.caffe.NetParameter.decode(a,a.uint32()));break;case 26:e.train_state=$root.caffe.NetState.decode(a,a.uint32());break;case 27:e.test_state.push($root.caffe.NetState.decode(a,a.uint32()));break;case 3:e.test_iter=a.array(e.test_iter,()=>a.int32(),t);break;case 4:e.test_interval=a.int32();break;case 19:e.test_compute_loss=a.bool();break;case 32:e.test_initialization=a.bool();break;case 5:e.base_lr=a.float();break;case 6:e.display=a.int32();break;case 33:e.average_loss=a.int32();break;case 7:e.max_iter=a.int32();break;case 36:e.iter_size=a.int32();break;case 8:e.lr_policy=a.string();break;case 9:e.gamma=a.float();break;case 10:e.power=a.float();break;case 11:e.momentum=a.float();break;case 12:e.weight_decay=a.float();break;case 29:e.regularization_type=a.string();break;case 13:e.stepsize=a.int32();break;case 34:e.stepvalue=a.array(e.stepvalue,()=>a.int32(),t);break;case 35:e.clip_gradients=a.float();break;case 14:e.snapshot=a.int32();break;case 15:e.snapshot_prefix=a.string();break;case 16:e.snapshot_diff=a.bool();break;case 37:e.snapshot_format=a.int32();break;case 17:e.solver_mode=a.int32();break;case 18:e.device_id=a.int32();break;case 20:e.random_seed=a.int64();break;case 40:e.type=a.string();break;case 31:e.delta=a.float();break;case 39:e.momentum2=a.float();break;case 38:e.rms_decay=a.float();break;case 23:e.debug_info=a.bool();break;case 28:e.snapshot_after_train=a.bool();break;case 30:e.solver_type=a.int32();break;case 41:e.layer_wise_reduce=a.bool();break;case 42:e.weights.push(a.string());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.SolverParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"net":r.net=a.string();break;case"net_param":r.net_param=$root.caffe.NetParameter.decodeText(a,!0);break;case"train_net":r.train_net=a.string();break;case"test_net":a.array(r.test_net,()=>a.string());break;case"train_net_param":r.train_net_param=$root.caffe.NetParameter.decodeText(a,!0);break;case"test_net_param":r.test_net_param.push($root.caffe.NetParameter.decodeText(a,!0));break;case"train_state":r.train_state=$root.caffe.NetState.decodeText(a,!0);break;case"test_state":r.test_state.push($root.caffe.NetState.decodeText(a,!0));break;case"test_iter":a.array(r.test_iter,()=>a.integer());break;case"test_interval":r.test_interval=a.integer();break;case"test_compute_loss":r.test_compute_loss=a.boolean();break;case"test_initialization":r.test_initialization=a.boolean();break;case"base_lr":r.base_lr=a.float();break;case"display":r.display=a.integer();break;case"average_loss":r.average_loss=a.integer();break;case"max_iter":r.max_iter=a.integer();break;case"iter_size":r.iter_size=a.integer();break;case"lr_policy":r.lr_policy=a.string();break;case"gamma":r.gamma=a.float();break;case"power":r.power=a.float();break;case"momentum":r.momentum=a.float();break;case"weight_decay":r.weight_decay=a.float();break;case"regularization_type":r.regularization_type=a.string();break;case"stepsize":r.stepsize=a.integer();break;case"stepvalue":a.array(r.stepvalue,()=>a.integer());break;case"clip_gradients":r.clip_gradients=a.float();break;case"snapshot":r.snapshot=a.integer();break;case"snapshot_prefix":r.snapshot_prefix=a.string();break;case"snapshot_diff":r.snapshot_diff=a.boolean();break;case"snapshot_format":r.snapshot_format=a.enum($root.caffe.SolverParameter.SnapshotFormat);break;case"solver_mode":r.solver_mode=a.enum($root.caffe.SolverParameter.SolverMode);break;case"device_id":r.device_id=a.integer();break;case"random_seed":r.random_seed=a.integer();break;case"type":r.type=a.string();break;case"delta":r.delta=a.float();break;case"momentum2":r.momentum2=a.float();break;case"rms_decay":r.rms_decay=a.float();break;case"debug_info":r.debug_info=a.boolean();break;case"snapshot_after_train":r.snapshot_after_train=a.boolean();break;case"solver_type":r.solver_type=a.enum($root.caffe.SolverParameter.SolverType);break;case"layer_wise_reduce":r.layer_wise_reduce=a.boolean();break;case"weights":a.array(r.weights,()=>a.string());break;default:a.field(e,r)}}return r}},$root.caffe.SolverParameter.prototype.net="",$root.caffe.SolverParameter.prototype.net_param=null,$root.caffe.SolverParameter.prototype.train_net="",$root.caffe.SolverParameter.prototype.train_net_param=null,$root.caffe.SolverParameter.prototype.train_state=null,$root.caffe.SolverParameter.prototype.test_interval=0,$root.caffe.SolverParameter.prototype.test_compute_loss=!1,$root.caffe.SolverParameter.prototype.test_initialization=!0,$root.caffe.SolverParameter.prototype.base_lr=0,$root.caffe.SolverParameter.prototype.display=0,$root.caffe.SolverParameter.prototype.average_loss=1,$root.caffe.SolverParameter.prototype.max_iter=0,$root.caffe.SolverParameter.prototype.iter_size=1,$root.caffe.SolverParameter.prototype.lr_policy="",$root.caffe.SolverParameter.prototype.gamma=0,$root.caffe.SolverParameter.prototype.power=0,$root.caffe.SolverParameter.prototype.momentum=0,$root.caffe.SolverParameter.prototype.weight_decay=0,$root.caffe.SolverParameter.prototype.regularization_type="L2",$root.caffe.SolverParameter.prototype.stepsize=0,$root.caffe.SolverParameter.prototype.clip_gradients=-1,$root.caffe.SolverParameter.prototype.snapshot=0,$root.caffe.SolverParameter.prototype.snapshot_prefix="",$root.caffe.SolverParameter.prototype.snapshot_diff=!1,$root.caffe.SolverParameter.prototype.snapshot_format=1,$root.caffe.SolverParameter.prototype.solver_mode=1,$root.caffe.SolverParameter.prototype.device_id=0,$root.caffe.SolverParameter.prototype.random_seed=protobuf.Long?protobuf.Long.fromBits(-1,-1,!1):-1,$root.caffe.SolverParameter.prototype.type="SGD",$root.caffe.SolverParameter.prototype.delta=1e-8,$root.caffe.SolverParameter.prototype.momentum2=.999,$root.caffe.SolverParameter.prototype.rms_decay=.99,$root.caffe.SolverParameter.prototype.debug_info=!1,$root.caffe.SolverParameter.prototype.snapshot_after_train=!0,$root.caffe.SolverParameter.prototype.solver_type=0,$root.caffe.SolverParameter.prototype.layer_wise_reduce=!0,$root.caffe.SolverParameter.SnapshotFormat={HDF5:0,BINARYPROTO:1},$root.caffe.SolverParameter.SolverMode={CPU:0,GPU:1},$root.caffe.SolverParameter.SolverType={SGD:0,NESTEROV:1,ADAGRAD:2,RMSPROP:3,ADADELTA:4,ADAM:5},$root.caffe.SolverState=class{constructor(){this.history=[]}static decode(a,r){const e=new $root.caffe.SolverState,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.iter=a.int32();break;case 2:e.learned_net=a.string();break;case 3:e.history.push($root.caffe.BlobProto.decode(a,a.uint32()));break;case 4:e.current_step=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.SolverState;for(a.start();!a.end();){const e=a.tag();switch(e){case"iter":r.iter=a.integer();break;case"learned_net":r.learned_net=a.string();break;case"history":r.history.push($root.caffe.BlobProto.decodeText(a,!0));break;case"current_step":r.current_step=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.SolverState.prototype.iter=0,$root.caffe.SolverState.prototype.learned_net="",$root.caffe.SolverState.prototype.current_step=0,$root.caffe.Phase={TRAIN:0,TEST:1},$root.caffe.NetState=class{constructor(){this.stage=[]}static decode(a,r){const e=new $root.caffe.NetState,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.phase=a.int32();break;case 2:e.level=a.int32();break;case 3:e.stage.push(a.string());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.NetState;for(a.start();!a.end();){const e=a.tag();switch(e){case"phase":r.phase=a.enum($root.caffe.Phase);break;case"level":r.level=a.integer();break;case"stage":a.array(r.stage,()=>a.string());break;default:a.field(e,r)}}return r}},$root.caffe.NetState.prototype.phase=1,$root.caffe.NetState.prototype.level=0,$root.caffe.NetStateRule=class{constructor(){this.stage=[],this.not_stage=[]}static decode(a,r){const e=new $root.caffe.NetStateRule,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.phase=a.int32();break;case 2:e.min_level=a.int32();break;case 3:e.max_level=a.int32();break;case 4:e.stage.push(a.string());break;case 5:e.not_stage.push(a.string());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.NetStateRule;for(a.start();!a.end();){const e=a.tag();switch(e){case"phase":r.phase=a.enum($root.caffe.Phase);break;case"min_level":r.min_level=a.integer();break;case"max_level":r.max_level=a.integer();break;case"stage":a.array(r.stage,()=>a.string());break;case"not_stage":a.array(r.not_stage,()=>a.string());break;default:a.field(e,r)}}return r}},$root.caffe.NetStateRule.prototype.phase=0,$root.caffe.NetStateRule.prototype.min_level=0,$root.caffe.NetStateRule.prototype.max_level=0,$root.caffe.ParamSpec=class{constructor(){}static decode(a,r){const e=new $root.caffe.ParamSpec,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.name=a.string();break;case 2:e.share_mode=a.int32();break;case 3:e.lr_mult=a.float();break;case 4:e.decay_mult=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ParamSpec;for(a.start();!a.end();){const e=a.tag();switch(e){case"name":r.name=a.string();break;case"share_mode":r.share_mode=a.enum($root.caffe.ParamSpec.DimCheckMode);break;case"lr_mult":r.lr_mult=a.float();break;case"decay_mult":r.decay_mult=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.ParamSpec.prototype.name="",$root.caffe.ParamSpec.prototype.share_mode=0,$root.caffe.ParamSpec.prototype.lr_mult=1,$root.caffe.ParamSpec.prototype.decay_mult=1,$root.caffe.ParamSpec.DimCheckMode={STRICT:0,PERMISSIVE:1},$root.caffe.LayerParameter=class{constructor(){this.bottom=[],this.top=[],this.loss_weight=[],this.param=[],this.blobs=[],this.propagate_down=[],this.include=[],this.exclude=[]}static decode(a,r){const e=new $root.caffe.LayerParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.name=a.string();break;case 2:e.type=a.string();break;case 3:e.bottom.push(a.string());break;case 4:e.top.push(a.string());break;case 10:e.phase=a.int32();break;case 5:e.loss_weight=a.floats(e.loss_weight,t);break;case 6:e.param.push($root.caffe.ParamSpec.decode(a,a.uint32()));break;case 7:e.blobs.push($root.caffe.BlobProto.decode(a,a.uint32()));break;case 11:e.propagate_down=a.array(e.propagate_down,()=>a.bool(),t);break;case 8:e.include.push($root.caffe.NetStateRule.decode(a,a.uint32()));break;case 9:e.exclude.push($root.caffe.NetStateRule.decode(a,a.uint32()));break;case 100:e.transform_param=$root.caffe.TransformationParameter.decode(a,a.uint32());break;case 101:e.loss_param=$root.caffe.LossParameter.decode(a,a.uint32());break;case 102:e.accuracy_param=$root.caffe.AccuracyParameter.decode(a,a.uint32());break;case 103:e.argmax_param=$root.caffe.ArgMaxParameter.decode(a,a.uint32());break;case 139:e.batch_norm_param=$root.caffe.BatchNormParameter.decode(a,a.uint32());break;case 141:e.bias_param=$root.caffe.BiasParameter.decode(a,a.uint32());break;case 148:e.clip_param=$root.caffe.ClipParameter.decode(a,a.uint32());break;case 104:e.concat_param=$root.caffe.ConcatParameter.decode(a,a.uint32());break;case 105:e.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decode(a,a.uint32());break;case 106:e.convolution_param=$root.caffe.ConvolutionParameter.decode(a,a.uint32());break;case 144:e.crop_param=$root.caffe.CropParameter.decode(a,a.uint32());break;case 107:e.data_param=$root.caffe.DataParameter.decode(a,a.uint32());break;case 108:e.dropout_param=$root.caffe.DropoutParameter.decode(a,a.uint32());break;case 109:e.dummy_data_param=$root.caffe.DummyDataParameter.decode(a,a.uint32());break;case 110:e.eltwise_param=$root.caffe.EltwiseParameter.decode(a,a.uint32());break;case 140:e.elu_param=$root.caffe.ELUParameter.decode(a,a.uint32());break;case 137:e.embed_param=$root.caffe.EmbedParameter.decode(a,a.uint32());break;case 111:e.exp_param=$root.caffe.ExpParameter.decode(a,a.uint32());break;case 135:e.flatten_param=$root.caffe.FlattenParameter.decode(a,a.uint32());break;case 112:e.hdf5_data_param=$root.caffe.HDF5DataParameter.decode(a,a.uint32());break;case 113:e.hdf5_output_param=$root.caffe.HDF5OutputParameter.decode(a,a.uint32());break;case 114:e.hinge_loss_param=$root.caffe.HingeLossParameter.decode(a,a.uint32());break;case 115:e.image_data_param=$root.caffe.ImageDataParameter.decode(a,a.uint32());break;case 116:e.infogain_loss_param=$root.caffe.InfogainLossParameter.decode(a,a.uint32());break;case 117:e.inner_product_param=$root.caffe.InnerProductParameter.decode(a,a.uint32());break;case 143:e.input_param=$root.caffe.InputParameter.decode(a,a.uint32());break;case 134:e.log_param=$root.caffe.LogParameter.decode(a,a.uint32());break;case 118:e.lrn_param=$root.caffe.LRNParameter.decode(a,a.uint32());break;case 119:e.memory_data_param=$root.caffe.MemoryDataParameter.decode(a,a.uint32());break;case 120:e.mvn_param=$root.caffe.MVNParameter.decode(a,a.uint32());break;case 145:e.parameter_param=$root.caffe.ParameterParameter.decode(a,a.uint32());break;case 121:e.pooling_param=$root.caffe.PoolingParameter.decode(a,a.uint32());break;case 122:e.power_param=$root.caffe.PowerParameter.decode(a,a.uint32());break;case 131:e.prelu_param=$root.caffe.PReLUParameter.decode(a,a.uint32());break;case 130:e.python_param=$root.caffe.PythonParameter.decode(a,a.uint32());break;case 146:e.recurrent_param=$root.caffe.RecurrentParameter.decode(a,a.uint32());break;case 136:e.reduction_param=$root.caffe.ReductionParameter.decode(a,a.uint32());break;case 123:e.relu_param=$root.caffe.ReLUParameter.decode(a,a.uint32());break;case 133:e.reshape_param=$root.caffe.ReshapeParameter.decode(a,a.uint32());break;case 142:e.scale_param=$root.caffe.ScaleParameter.decode(a,a.uint32());break;case 124:e.sigmoid_param=$root.caffe.SigmoidParameter.decode(a,a.uint32());break;case 125:e.softmax_param=$root.caffe.SoftmaxParameter.decode(a,a.uint32());break;case 132:e.spp_param=$root.caffe.SPPParameter.decode(a,a.uint32());break;case 126:e.slice_param=$root.caffe.SliceParameter.decode(a,a.uint32());break;case 147:e.swish_param=$root.caffe.SwishParameter.decode(a,a.uint32());break;case 127:e.tanh_param=$root.caffe.TanHParameter.decode(a,a.uint32());break;case 128:e.threshold_param=$root.caffe.ThresholdParameter.decode(a,a.uint32());break;case 138:e.tile_param=$root.caffe.TileParameter.decode(a,a.uint32());break;case 129:e.window_data_param=$root.caffe.WindowDataParameter.decode(a,a.uint32());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.LayerParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"name":r.name=a.string();break;case"type":r.type=a.string();break;case"bottom":a.array(r.bottom,()=>a.string());break;case"top":a.array(r.top,()=>a.string());break;case"phase":r.phase=a.enum($root.caffe.Phase);break;case"loss_weight":a.array(r.loss_weight,()=>a.float());break;case"param":r.param.push($root.caffe.ParamSpec.decodeText(a,!0));break;case"blobs":r.blobs.push($root.caffe.BlobProto.decodeText(a,!0));break;case"propagate_down":a.array(r.propagate_down,()=>a.boolean());break;case"include":r.include.push($root.caffe.NetStateRule.decodeText(a,!0));break;case"exclude":r.exclude.push($root.caffe.NetStateRule.decodeText(a,!0));break;case"transform_param":r.transform_param=$root.caffe.TransformationParameter.decodeText(a,!0);break;case"loss_param":r.loss_param=$root.caffe.LossParameter.decodeText(a,!0);break;case"accuracy_param":r.accuracy_param=$root.caffe.AccuracyParameter.decodeText(a,!0);break;case"argmax_param":r.argmax_param=$root.caffe.ArgMaxParameter.decodeText(a,!0);break;case"batch_norm_param":r.batch_norm_param=$root.caffe.BatchNormParameter.decodeText(a,!0);break;case"bias_param":r.bias_param=$root.caffe.BiasParameter.decodeText(a,!0);break;case"clip_param":r.clip_param=$root.caffe.ClipParameter.decodeText(a,!0);break;case"concat_param":r.concat_param=$root.caffe.ConcatParameter.decodeText(a,!0);break;case"contrastive_loss_param":r.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decodeText(a,!0);break;case"convolution_param":r.convolution_param=$root.caffe.ConvolutionParameter.decodeText(a,!0);break;case"crop_param":r.crop_param=$root.caffe.CropParameter.decodeText(a,!0);break;case"data_param":r.data_param=$root.caffe.DataParameter.decodeText(a,!0);break;case"dropout_param":r.dropout_param=$root.caffe.DropoutParameter.decodeText(a,!0);break;case"dummy_data_param":r.dummy_data_param=$root.caffe.DummyDataParameter.decodeText(a,!0);break;case"eltwise_param":r.eltwise_param=$root.caffe.EltwiseParameter.decodeText(a,!0);break;case"elu_param":r.elu_param=$root.caffe.ELUParameter.decodeText(a,!0);break;case"embed_param":r.embed_param=$root.caffe.EmbedParameter.decodeText(a,!0);break;case"exp_param":r.exp_param=$root.caffe.ExpParameter.decodeText(a,!0);break;case"flatten_param":r.flatten_param=$root.caffe.FlattenParameter.decodeText(a,!0);break;case"hdf5_data_param":r.hdf5_data_param=$root.caffe.HDF5DataParameter.decodeText(a,!0);break;case"hdf5_output_param":r.hdf5_output_param=$root.caffe.HDF5OutputParameter.decodeText(a,!0);break;case"hinge_loss_param":r.hinge_loss_param=$root.caffe.HingeLossParameter.decodeText(a,!0);break;case"image_data_param":r.image_data_param=$root.caffe.ImageDataParameter.decodeText(a,!0);break;case"infogain_loss_param":r.infogain_loss_param=$root.caffe.InfogainLossParameter.decodeText(a,!0);break;case"inner_product_param":r.inner_product_param=$root.caffe.InnerProductParameter.decodeText(a,!0);break;case"input_param":r.input_param=$root.caffe.InputParameter.decodeText(a,!0);break;case"log_param":r.log_param=$root.caffe.LogParameter.decodeText(a,!0);break;case"lrn_param":r.lrn_param=$root.caffe.LRNParameter.decodeText(a,!0);break;case"memory_data_param":r.memory_data_param=$root.caffe.MemoryDataParameter.decodeText(a,!0);break;case"mvn_param":r.mvn_param=$root.caffe.MVNParameter.decodeText(a,!0);break;case"parameter_param":r.parameter_param=$root.caffe.ParameterParameter.decodeText(a,!0);break;case"pooling_param":r.pooling_param=$root.caffe.PoolingParameter.decodeText(a,!0);break;case"power_param":r.power_param=$root.caffe.PowerParameter.decodeText(a,!0);break;case"prelu_param":r.prelu_param=$root.caffe.PReLUParameter.decodeText(a,!0);break;case"python_param":r.python_param=$root.caffe.PythonParameter.decodeText(a,!0);break;case"recurrent_param":r.recurrent_param=$root.caffe.RecurrentParameter.decodeText(a,!0);break;case"reduction_param":r.reduction_param=$root.caffe.ReductionParameter.decodeText(a,!0);break;case"relu_param":r.relu_param=$root.caffe.ReLUParameter.decodeText(a,!0);break;case"reshape_param":r.reshape_param=$root.caffe.ReshapeParameter.decodeText(a,!0);break;case"scale_param":r.scale_param=$root.caffe.ScaleParameter.decodeText(a,!0);break;case"sigmoid_param":r.sigmoid_param=$root.caffe.SigmoidParameter.decodeText(a,!0);break;case"softmax_param":r.softmax_param=$root.caffe.SoftmaxParameter.decodeText(a,!0);break;case"spp_param":r.spp_param=$root.caffe.SPPParameter.decodeText(a,!0);break;case"slice_param":r.slice_param=$root.caffe.SliceParameter.decodeText(a,!0);break;case"swish_param":r.swish_param=$root.caffe.SwishParameter.decodeText(a,!0);break;case"tanh_param":r.tanh_param=$root.caffe.TanHParameter.decodeText(a,!0);break;case"threshold_param":r.threshold_param=$root.caffe.ThresholdParameter.decodeText(a,!0);break;case"tile_param":r.tile_param=$root.caffe.TileParameter.decodeText(a,!0);break;case"window_data_param":r.window_data_param=$root.caffe.WindowDataParameter.decodeText(a,!0);break;default:a.field(e,r)}}return r}},$root.caffe.LayerParameter.prototype.name="",$root.caffe.LayerParameter.prototype.type="",$root.caffe.LayerParameter.prototype.phase=0,$root.caffe.LayerParameter.prototype.transform_param=null,$root.caffe.LayerParameter.prototype.loss_param=null,$root.caffe.LayerParameter.prototype.accuracy_param=null,$root.caffe.LayerParameter.prototype.argmax_param=null,$root.caffe.LayerParameter.prototype.batch_norm_param=null,$root.caffe.LayerParameter.prototype.bias_param=null,$root.caffe.LayerParameter.prototype.clip_param=null,$root.caffe.LayerParameter.prototype.concat_param=null,$root.caffe.LayerParameter.prototype.contrastive_loss_param=null,$root.caffe.LayerParameter.prototype.convolution_param=null,$root.caffe.LayerParameter.prototype.crop_param=null,$root.caffe.LayerParameter.prototype.data_param=null,$root.caffe.LayerParameter.prototype.dropout_param=null,$root.caffe.LayerParameter.prototype.dummy_data_param=null,$root.caffe.LayerParameter.prototype.eltwise_param=null,$root.caffe.LayerParameter.prototype.elu_param=null,$root.caffe.LayerParameter.prototype.embed_param=null,$root.caffe.LayerParameter.prototype.exp_param=null,$root.caffe.LayerParameter.prototype.flatten_param=null,$root.caffe.LayerParameter.prototype.hdf5_data_param=null,$root.caffe.LayerParameter.prototype.hdf5_output_param=null,$root.caffe.LayerParameter.prototype.hinge_loss_param=null,$root.caffe.LayerParameter.prototype.image_data_param=null,$root.caffe.LayerParameter.prototype.infogain_loss_param=null,$root.caffe.LayerParameter.prototype.inner_product_param=null,$root.caffe.LayerParameter.prototype.input_param=null,$root.caffe.LayerParameter.prototype.log_param=null,$root.caffe.LayerParameter.prototype.lrn_param=null,$root.caffe.LayerParameter.prototype.memory_data_param=null,$root.caffe.LayerParameter.prototype.mvn_param=null,$root.caffe.LayerParameter.prototype.parameter_param=null,$root.caffe.LayerParameter.prototype.pooling_param=null,$root.caffe.LayerParameter.prototype.power_param=null,$root.caffe.LayerParameter.prototype.prelu_param=null,$root.caffe.LayerParameter.prototype.python_param=null,$root.caffe.LayerParameter.prototype.recurrent_param=null,$root.caffe.LayerParameter.prototype.reduction_param=null,$root.caffe.LayerParameter.prototype.relu_param=null,$root.caffe.LayerParameter.prototype.reshape_param=null,$root.caffe.LayerParameter.prototype.scale_param=null,$root.caffe.LayerParameter.prototype.sigmoid_param=null,$root.caffe.LayerParameter.prototype.softmax_param=null,$root.caffe.LayerParameter.prototype.spp_param=null,$root.caffe.LayerParameter.prototype.slice_param=null,$root.caffe.LayerParameter.prototype.swish_param=null,$root.caffe.LayerParameter.prototype.tanh_param=null,$root.caffe.LayerParameter.prototype.threshold_param=null,$root.caffe.LayerParameter.prototype.tile_param=null,$root.caffe.LayerParameter.prototype.window_data_param=null,$root.caffe.TransformationParameter=class{constructor(){this.mean_value=[]}static decode(a,r){const e=new $root.caffe.TransformationParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.scale=a.float();break;case 2:e.mirror=a.bool();break;case 3:e.crop_size=a.uint32();break;case 4:e.mean_file=a.string();break;case 5:e.mean_value=a.floats(e.mean_value,t);break;case 6:e.force_color=a.bool();break;case 7:e.force_gray=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.TransformationParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"scale":r.scale=a.float();break;case"mirror":r.mirror=a.boolean();break;case"crop_size":r.crop_size=a.integer();break;case"mean_file":r.mean_file=a.string();break;case"mean_value":a.array(r.mean_value,()=>a.float());break;case"force_color":r.force_color=a.boolean();break;case"force_gray":r.force_gray=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.TransformationParameter.prototype.scale=1,$root.caffe.TransformationParameter.prototype.mirror=!1,$root.caffe.TransformationParameter.prototype.crop_size=0,$root.caffe.TransformationParameter.prototype.mean_file="",$root.caffe.TransformationParameter.prototype.force_color=!1,$root.caffe.TransformationParameter.prototype.force_gray=!1,$root.caffe.LossParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.LossParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.ignore_label=a.int32();break;case 3:e.normalization=a.int32();break;case 2:e.normalize=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.LossParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"ignore_label":r.ignore_label=a.integer();break;case"normalization":r.normalization=a.enum($root.caffe.LossParameter.NormalizationMode);break;case"normalize":r.normalize=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.LossParameter.prototype.ignore_label=0,$root.caffe.LossParameter.prototype.normalization=1,$root.caffe.LossParameter.prototype.normalize=!1,$root.caffe.LossParameter.NormalizationMode={FULL:0,VALID:1,BATCH_SIZE:2,NONE:3},$root.caffe.AccuracyParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.AccuracyParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.top_k=a.uint32();break;case 2:e.axis=a.int32();break;case 3:e.ignore_label=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.AccuracyParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"top_k":r.top_k=a.integer();break;case"axis":r.axis=a.integer();break;case"ignore_label":r.ignore_label=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.AccuracyParameter.prototype.top_k=1,$root.caffe.AccuracyParameter.prototype.axis=1,$root.caffe.AccuracyParameter.prototype.ignore_label=0,$root.caffe.ArgMaxParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ArgMaxParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.out_max_val=a.bool();break;case 2:e.top_k=a.uint32();break;case 3:e.axis=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ArgMaxParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"out_max_val":r.out_max_val=a.boolean();break;case"top_k":r.top_k=a.integer();break;case"axis":r.axis=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.ArgMaxParameter.prototype.out_max_val=!1,$root.caffe.ArgMaxParameter.prototype.top_k=1,$root.caffe.ArgMaxParameter.prototype.axis=0,$root.caffe.ClipParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ClipParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.min=a.float();break;case 2:e.max=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ClipParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"min":r.min=a.float();break;case"max":r.max=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.ClipParameter.prototype.min=0,$root.caffe.ClipParameter.prototype.max=0,$root.caffe.ConcatParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ConcatParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 2:e.axis=a.int32();break;case 1:e.concat_dim=a.uint32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ConcatParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"axis":r.axis=a.integer();break;case"concat_dim":r.concat_dim=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.ConcatParameter.prototype.axis=1,$root.caffe.ConcatParameter.prototype.concat_dim=1,$root.caffe.BatchNormParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.BatchNormParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.use_global_stats=a.bool();break;case 2:e.moving_average_fraction=a.float();break;case 3:e.eps=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.BatchNormParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"use_global_stats":r.use_global_stats=a.boolean();break;case"moving_average_fraction":r.moving_average_fraction=a.float();break;case"eps":r.eps=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.BatchNormParameter.prototype.use_global_stats=!1,$root.caffe.BatchNormParameter.prototype.moving_average_fraction=.999,$root.caffe.BatchNormParameter.prototype.eps=1e-5,$root.caffe.BiasParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.BiasParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.axis=a.int32();break;case 2:e.num_axes=a.int32();break;case 3:e.filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.BiasParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"axis":r.axis=a.integer();break;case"num_axes":r.num_axes=a.integer();break;case"filler":r.filler=$root.caffe.FillerParameter.decodeText(a,!0);break;default:a.field(e,r)}}return r}},$root.caffe.BiasParameter.prototype.axis=1,$root.caffe.BiasParameter.prototype.num_axes=1,$root.caffe.BiasParameter.prototype.filler=null,$root.caffe.ContrastiveLossParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ContrastiveLossParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.margin=a.float();break;case 2:e.legacy_version=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ContrastiveLossParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"margin":r.margin=a.float();break;case"legacy_version":r.legacy_version=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.ContrastiveLossParameter.prototype.margin=1,$root.caffe.ContrastiveLossParameter.prototype.legacy_version=!1,$root.caffe.ConvolutionParameter=class{constructor(){this.pad=[],this.kernel_size=[],this.stride=[],this.dilation=[]}static decode(a,r){const e=new $root.caffe.ConvolutionParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.num_output=a.uint32();break;case 2:e.bias_term=a.bool();break;case 3:e.pad=a.array(e.pad,()=>a.uint32(),t);break;case 4:e.kernel_size=a.array(e.kernel_size,()=>a.uint32(),t);break;case 6:e.stride=a.array(e.stride,()=>a.uint32(),t);break;case 18:e.dilation=a.array(e.dilation,()=>a.uint32(),t);break;case 9:e.pad_h=a.uint32();break;case 10:e.pad_w=a.uint32();break;case 11:e.kernel_h=a.uint32();break;case 12:e.kernel_w=a.uint32();break;case 13:e.stride_h=a.uint32();break;case 14:e.stride_w=a.uint32();break;case 5:e.group=a.uint32();break;case 7:e.weight_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 8:e.bias_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 15:e.engine=a.int32();break;case 16:e.axis=a.int32();break;case 17:e.force_nd_im2col=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ConvolutionParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"num_output":r.num_output=a.integer();break;case"bias_term":r.bias_term=a.boolean();break;case"pad":a.array(r.pad,()=>a.integer());break;case"kernel_size":a.array(r.kernel_size,()=>a.integer());break;case"stride":a.array(r.stride,()=>a.integer());break;case"dilation":a.array(r.dilation,()=>a.integer());break;case"pad_h":r.pad_h=a.integer();break;case"pad_w":r.pad_w=a.integer();break;case"kernel_h":r.kernel_h=a.integer();break;case"kernel_w":r.kernel_w=a.integer();break;case"stride_h":r.stride_h=a.integer();break;case"stride_w":r.stride_w=a.integer();break;case"group":r.group=a.integer();break;case"weight_filler":r.weight_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"bias_filler":r.bias_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"engine":r.engine=a.enum($root.caffe.ConvolutionParameter.Engine);break;case"axis":r.axis=a.integer();break;case"force_nd_im2col":r.force_nd_im2col=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.ConvolutionParameter.prototype.num_output=0,$root.caffe.ConvolutionParameter.prototype.bias_term=!0,$root.caffe.ConvolutionParameter.prototype.pad_h=0,$root.caffe.ConvolutionParameter.prototype.pad_w=0,$root.caffe.ConvolutionParameter.prototype.kernel_h=0,$root.caffe.ConvolutionParameter.prototype.kernel_w=0,$root.caffe.ConvolutionParameter.prototype.stride_h=0,$root.caffe.ConvolutionParameter.prototype.stride_w=0,$root.caffe.ConvolutionParameter.prototype.group=1,$root.caffe.ConvolutionParameter.prototype.weight_filler=null,$root.caffe.ConvolutionParameter.prototype.bias_filler=null,$root.caffe.ConvolutionParameter.prototype.engine=0,$root.caffe.ConvolutionParameter.prototype.axis=1,$root.caffe.ConvolutionParameter.prototype.force_nd_im2col=!1,$root.caffe.ConvolutionParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.CropParameter=class{constructor(){this.offset=[]}static decode(a,r){const e=new $root.caffe.CropParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.axis=a.int32();break;case 2:e.offset=a.array(e.offset,()=>a.uint32(),t);break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.CropParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"axis":r.axis=a.integer();break;case"offset":a.array(r.offset,()=>a.integer());break;default:a.field(e,r)}}return r}},$root.caffe.CropParameter.prototype.axis=2,$root.caffe.DataParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.DataParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.source=a.string();break;case 4:e.batch_size=a.uint32();break;case 7:e.rand_skip=a.uint32();break;case 8:e.backend=a.int32();break;case 2:e.scale=a.float();break;case 3:e.mean_file=a.string();break;case 5:e.crop_size=a.uint32();break;case 6:e.mirror=a.bool();break;case 9:e.force_encoded_color=a.bool();break;case 10:e.prefetch=a.uint32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.DataParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"source":r.source=a.string();break;case"batch_size":r.batch_size=a.integer();break;case"rand_skip":r.rand_skip=a.integer();break;case"backend":r.backend=a.enum($root.caffe.DataParameter.DB);break;case"scale":r.scale=a.float();break;case"mean_file":r.mean_file=a.string();break;case"crop_size":r.crop_size=a.integer();break;case"mirror":r.mirror=a.boolean();break;case"force_encoded_color":r.force_encoded_color=a.boolean();break;case"prefetch":r.prefetch=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.DataParameter.prototype.source="",$root.caffe.DataParameter.prototype.batch_size=0,$root.caffe.DataParameter.prototype.rand_skip=0,$root.caffe.DataParameter.prototype.backend=0,$root.caffe.DataParameter.prototype.scale=1,$root.caffe.DataParameter.prototype.mean_file="",$root.caffe.DataParameter.prototype.crop_size=0,$root.caffe.DataParameter.prototype.mirror=!1,$root.caffe.DataParameter.prototype.force_encoded_color=!1,$root.caffe.DataParameter.prototype.prefetch=4,$root.caffe.DataParameter.DB={LEVELDB:0,LMDB:1},$root.caffe.DropoutParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.DropoutParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.dropout_ratio=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.DropoutParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"dropout_ratio":r.dropout_ratio=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.DropoutParameter.prototype.dropout_ratio=.5,$root.caffe.DummyDataParameter=class{constructor(){this.data_filler=[],this.shape=[],this.num=[],this.channels=[],this.height=[],this.width=[]}static decode(a,r){const e=new $root.caffe.DummyDataParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.data_filler.push($root.caffe.FillerParameter.decode(a,a.uint32()));break;case 6:e.shape.push($root.caffe.BlobShape.decode(a,a.uint32()));break;case 2:e.num=a.array(e.num,()=>a.uint32(),t);break;case 3:e.channels=a.array(e.channels,()=>a.uint32(),t);break;case 4:e.height=a.array(e.height,()=>a.uint32(),t);break;case 5:e.width=a.array(e.width,()=>a.uint32(),t);break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.DummyDataParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"data_filler":r.data_filler.push($root.caffe.FillerParameter.decodeText(a,!0));break;case"shape":r.shape.push($root.caffe.BlobShape.decodeText(a,!0));break;case"num":a.array(r.num,()=>a.integer());break;case"channels":a.array(r.channels,()=>a.integer());break;case"height":a.array(r.height,()=>a.integer());break;case"width":a.array(r.width,()=>a.integer());break;default:a.field(e,r)}}return r}},$root.caffe.EltwiseParameter=class{constructor(){this.coeff=[]}static decode(a,r){const e=new $root.caffe.EltwiseParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.operation=a.int32();break;case 2:e.coeff=a.floats(e.coeff,t);break;case 3:e.stable_prod_grad=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.EltwiseParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"operation":r.operation=a.enum($root.caffe.EltwiseParameter.EltwiseOp);break;case"coeff":a.array(r.coeff,()=>a.float());break;case"stable_prod_grad":r.stable_prod_grad=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.EltwiseParameter.prototype.operation=1,$root.caffe.EltwiseParameter.prototype.stable_prod_grad=!0,$root.caffe.EltwiseParameter.EltwiseOp={PROD:0,SUM:1,MAX:2},$root.caffe.ELUParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ELUParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.alpha=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ELUParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"alpha":r.alpha=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.ELUParameter.prototype.alpha=1,$root.caffe.EmbedParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.EmbedParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.num_output=a.uint32();break;case 2:e.input_dim=a.uint32();break;case 3:e.bias_term=a.bool();break;case 4:e.weight_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 5:e.bias_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.EmbedParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"num_output":r.num_output=a.integer();break;case"input_dim":r.input_dim=a.integer();break;case"bias_term":r.bias_term=a.boolean();break;case"weight_filler":r.weight_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"bias_filler":r.bias_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;default:a.field(e,r)}}return r}},$root.caffe.EmbedParameter.prototype.num_output=0,$root.caffe.EmbedParameter.prototype.input_dim=0,$root.caffe.EmbedParameter.prototype.bias_term=!0,$root.caffe.EmbedParameter.prototype.weight_filler=null,$root.caffe.EmbedParameter.prototype.bias_filler=null,$root.caffe.ExpParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ExpParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.base=a.float();break;case 2:e.scale=a.float();break;case 3:e.shift=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ExpParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"base":r.base=a.float();break;case"scale":r.scale=a.float();break;case"shift":r.shift=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.ExpParameter.prototype.base=-1,$root.caffe.ExpParameter.prototype.scale=1,$root.caffe.ExpParameter.prototype.shift=0,$root.caffe.FlattenParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.FlattenParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.axis=a.int32();break;case 2:e.end_axis=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.FlattenParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"axis":r.axis=a.integer();break;case"end_axis":r.end_axis=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.FlattenParameter.prototype.axis=1,$root.caffe.FlattenParameter.prototype.end_axis=-1,$root.caffe.HDF5DataParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.HDF5DataParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.source=a.string();break;case 2:e.batch_size=a.uint32();break;case 3:e.shuffle=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.HDF5DataParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"source":r.source=a.string();break;case"batch_size":r.batch_size=a.integer();break;case"shuffle":r.shuffle=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.HDF5DataParameter.prototype.source="",$root.caffe.HDF5DataParameter.prototype.batch_size=0,$root.caffe.HDF5DataParameter.prototype.shuffle=!1,$root.caffe.HDF5OutputParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.HDF5OutputParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.file_name=a.string();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.HDF5OutputParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"file_name":r.file_name=a.string();break;default:a.field(e,r)}}return r}},$root.caffe.HDF5OutputParameter.prototype.file_name="",$root.caffe.HingeLossParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.HingeLossParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.norm=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.HingeLossParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"norm":r.norm=a.enum($root.caffe.HingeLossParameter.Norm);break;default:a.field(e,r)}}return r}},$root.caffe.HingeLossParameter.prototype.norm=1,$root.caffe.HingeLossParameter.Norm={L1:1,L2:2},$root.caffe.ImageDataParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ImageDataParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.source=a.string();break;case 4:e.batch_size=a.uint32();break;case 7:e.rand_skip=a.uint32();break;case 8:e.shuffle=a.bool();break;case 9:e.new_height=a.uint32();break;case 10:e.new_width=a.uint32();break;case 11:e.is_color=a.bool();break;case 2:e.scale=a.float();break;case 3:e.mean_file=a.string();break;case 5:e.crop_size=a.uint32();break;case 6:e.mirror=a.bool();break;case 12:e.root_folder=a.string();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ImageDataParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"source":r.source=a.string();break;case"batch_size":r.batch_size=a.integer();break;case"rand_skip":r.rand_skip=a.integer();break;case"shuffle":r.shuffle=a.boolean();break;case"new_height":r.new_height=a.integer();break;case"new_width":r.new_width=a.integer();break;case"is_color":r.is_color=a.boolean();break;case"scale":r.scale=a.float();break;case"mean_file":r.mean_file=a.string();break;case"crop_size":r.crop_size=a.integer();break;case"mirror":r.mirror=a.boolean();break;case"root_folder":r.root_folder=a.string();break;default:a.field(e,r)}}return r}},$root.caffe.ImageDataParameter.prototype.source="",$root.caffe.ImageDataParameter.prototype.batch_size=1,$root.caffe.ImageDataParameter.prototype.rand_skip=0,$root.caffe.ImageDataParameter.prototype.shuffle=!1,$root.caffe.ImageDataParameter.prototype.new_height=0,$root.caffe.ImageDataParameter.prototype.new_width=0,$root.caffe.ImageDataParameter.prototype.is_color=!0,$root.caffe.ImageDataParameter.prototype.scale=1,$root.caffe.ImageDataParameter.prototype.mean_file="",$root.caffe.ImageDataParameter.prototype.crop_size=0,$root.caffe.ImageDataParameter.prototype.mirror=!1,$root.caffe.ImageDataParameter.prototype.root_folder="",$root.caffe.InfogainLossParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.InfogainLossParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.source=a.string();break;case 2:e.axis=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.InfogainLossParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"source":r.source=a.string();break;case"axis":r.axis=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.InfogainLossParameter.prototype.source="",$root.caffe.InfogainLossParameter.prototype.axis=1,$root.caffe.InnerProductParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.InnerProductParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.num_output=a.uint32();break;case 2:e.bias_term=a.bool();break;case 3:e.weight_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 4:e.bias_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 5:e.axis=a.int32();break;case 6:e.transpose=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.InnerProductParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"num_output":r.num_output=a.integer();break;case"bias_term":r.bias_term=a.boolean();break;case"weight_filler":r.weight_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"bias_filler":r.bias_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"axis":r.axis=a.integer();break;case"transpose":r.transpose=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.InnerProductParameter.prototype.num_output=0,$root.caffe.InnerProductParameter.prototype.bias_term=!0,$root.caffe.InnerProductParameter.prototype.weight_filler=null,$root.caffe.InnerProductParameter.prototype.bias_filler=null,$root.caffe.InnerProductParameter.prototype.axis=1,$root.caffe.InnerProductParameter.prototype.transpose=!1,$root.caffe.InputParameter=class{constructor(){this.shape=[]}static decode(a,r){const e=new $root.caffe.InputParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.shape.push($root.caffe.BlobShape.decode(a,a.uint32()));break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.InputParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"shape":r.shape.push($root.caffe.BlobShape.decodeText(a,!0));break;default:a.field(e,r)}}return r}},$root.caffe.LogParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.LogParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.base=a.float();break;case 2:e.scale=a.float();break;case 3:e.shift=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.LogParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"base":r.base=a.float();break;case"scale":r.scale=a.float();break;case"shift":r.shift=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.LogParameter.prototype.base=-1,$root.caffe.LogParameter.prototype.scale=1,$root.caffe.LogParameter.prototype.shift=0,$root.caffe.LRNParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.LRNParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.local_size=a.uint32();break;case 2:e.alpha=a.float();break;case 3:e.beta=a.float();break;case 4:e.norm_region=a.int32();break;case 5:e.k=a.float();break;case 6:e.engine=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.LRNParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"local_size":r.local_size=a.integer();break;case"alpha":r.alpha=a.float();break;case"beta":r.beta=a.float();break;case"norm_region":r.norm_region=a.enum($root.caffe.LRNParameter.NormRegion);break;case"k":r.k=a.float();break;case"engine":r.engine=a.enum($root.caffe.LRNParameter.Engine);break;default:a.field(e,r)}}return r}},$root.caffe.LRNParameter.prototype.local_size=5,$root.caffe.LRNParameter.prototype.alpha=1,$root.caffe.LRNParameter.prototype.beta=.75,$root.caffe.LRNParameter.prototype.norm_region=0,$root.caffe.LRNParameter.prototype.k=1,$root.caffe.LRNParameter.prototype.engine=0,$root.caffe.LRNParameter.NormRegion={ACROSS_CHANNELS:0,WITHIN_CHANNEL:1},$root.caffe.LRNParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.MemoryDataParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.MemoryDataParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.batch_size=a.uint32();break;case 2:e.channels=a.uint32();break;case 3:e.height=a.uint32();break;case 4:e.width=a.uint32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.MemoryDataParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"batch_size":r.batch_size=a.integer();break;case"channels":r.channels=a.integer();break;case"height":r.height=a.integer();break;case"width":r.width=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.MemoryDataParameter.prototype.batch_size=0,$root.caffe.MemoryDataParameter.prototype.channels=0,$root.caffe.MemoryDataParameter.prototype.height=0,$root.caffe.MemoryDataParameter.prototype.width=0,$root.caffe.MVNParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.MVNParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.normalize_variance=a.bool();break;case 2:e.across_channels=a.bool();break;case 3:e.eps=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.MVNParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"normalize_variance":r.normalize_variance=a.boolean();break;case"across_channels":r.across_channels=a.boolean();break;case"eps":r.eps=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.MVNParameter.prototype.normalize_variance=!0,$root.caffe.MVNParameter.prototype.across_channels=!1,$root.caffe.MVNParameter.prototype.eps=1e-9,$root.caffe.ParameterParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ParameterParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.shape=$root.caffe.BlobShape.decode(a,a.uint32());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ParameterParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"shape":r.shape=$root.caffe.BlobShape.decodeText(a,!0);break;default:a.field(e,r)}}return r}},$root.caffe.ParameterParameter.prototype.shape=null,$root.caffe.PoolingParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.PoolingParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.pool=a.int32();break;case 4:e.pad=a.uint32();break;case 9:e.pad_h=a.uint32();break;case 10:e.pad_w=a.uint32();break;case 2:e.kernel_size=a.uint32();break;case 5:e.kernel_h=a.uint32();break;case 6:e.kernel_w=a.uint32();break;case 3:e.stride=a.uint32();break;case 7:e.stride_h=a.uint32();break;case 8:e.stride_w=a.uint32();break;case 11:e.engine=a.int32();break;case 12:e.global_pooling=a.bool();break;case 13:e.round_mode=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.PoolingParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"pool":r.pool=a.enum($root.caffe.PoolingParameter.PoolMethod);break;case"pad":r.pad=a.integer();break;case"pad_h":r.pad_h=a.integer();break;case"pad_w":r.pad_w=a.integer();break;case"kernel_size":r.kernel_size=a.integer();break;case"kernel_h":r.kernel_h=a.integer();break;case"kernel_w":r.kernel_w=a.integer();break;case"stride":r.stride=a.integer();break;case"stride_h":r.stride_h=a.integer();break;case"stride_w":r.stride_w=a.integer();break;case"engine":r.engine=a.enum($root.caffe.PoolingParameter.Engine);break;case"global_pooling":r.global_pooling=a.boolean();break;case"round_mode":r.round_mode=a.enum($root.caffe.PoolingParameter.RoundMode);break;default:a.field(e,r)}}return r}},$root.caffe.PoolingParameter.prototype.pool=0,$root.caffe.PoolingParameter.prototype.pad=0,$root.caffe.PoolingParameter.prototype.pad_h=0,$root.caffe.PoolingParameter.prototype.pad_w=0,$root.caffe.PoolingParameter.prototype.kernel_size=0,$root.caffe.PoolingParameter.prototype.kernel_h=0,$root.caffe.PoolingParameter.prototype.kernel_w=0,$root.caffe.PoolingParameter.prototype.stride=1,$root.caffe.PoolingParameter.prototype.stride_h=0,$root.caffe.PoolingParameter.prototype.stride_w=0,$root.caffe.PoolingParameter.prototype.engine=0,$root.caffe.PoolingParameter.prototype.global_pooling=!1,$root.caffe.PoolingParameter.prototype.round_mode=0,$root.caffe.PoolingParameter.PoolMethod={MAX:0,AVE:1,STOCHASTIC:2},$root.caffe.PoolingParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.PoolingParameter.RoundMode={CEIL:0,FLOOR:1},$root.caffe.PowerParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.PowerParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.power=a.float();break;case 2:e.scale=a.float();break;case 3:e.shift=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.PowerParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"power":r.power=a.float();break;case"scale":r.scale=a.float();break;case"shift":r.shift=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.PowerParameter.prototype.power=1,$root.caffe.PowerParameter.prototype.scale=1,$root.caffe.PowerParameter.prototype.shift=0,$root.caffe.PythonParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.PythonParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.module=a.string();break;case 2:e.layer=a.string();break;case 3:e.param_str=a.string();break;case 4:e.share_in_parallel=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.PythonParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"module":r.module=a.string();break;case"layer":r.layer=a.string();break;case"param_str":r.param_str=a.string();break;case"share_in_parallel":r.share_in_parallel=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.PythonParameter.prototype.module="",$root.caffe.PythonParameter.prototype.layer="",$root.caffe.PythonParameter.prototype.param_str="",$root.caffe.PythonParameter.prototype.share_in_parallel=!1,$root.caffe.RecurrentParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.RecurrentParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.num_output=a.uint32();break;case 2:e.weight_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 3:e.bias_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 4:e.debug_info=a.bool();break;case 5:e.expose_hidden=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.RecurrentParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"num_output":r.num_output=a.integer();break;case"weight_filler":r.weight_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"bias_filler":r.bias_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"debug_info":r.debug_info=a.boolean();break;case"expose_hidden":r.expose_hidden=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.RecurrentParameter.prototype.num_output=0,$root.caffe.RecurrentParameter.prototype.weight_filler=null,$root.caffe.RecurrentParameter.prototype.bias_filler=null,$root.caffe.RecurrentParameter.prototype.debug_info=!1,$root.caffe.RecurrentParameter.prototype.expose_hidden=!1,$root.caffe.ReductionParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ReductionParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.operation=a.int32();break;case 2:e.axis=a.int32();break;case 3:e.coeff=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ReductionParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"operation":r.operation=a.enum($root.caffe.ReductionParameter.ReductionOp);break;case"axis":r.axis=a.integer();break;case"coeff":r.coeff=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.ReductionParameter.prototype.operation=1,$root.caffe.ReductionParameter.prototype.axis=0,$root.caffe.ReductionParameter.prototype.coeff=1,$root.caffe.ReductionParameter.ReductionOp={SUM:1,ASUM:2,SUMSQ:3,MEAN:4},$root.caffe.ReLUParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ReLUParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.negative_slope=a.float();break;case 2:e.engine=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ReLUParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"negative_slope":r.negative_slope=a.float();break;case"engine":r.engine=a.enum($root.caffe.ReLUParameter.Engine);break;default:a.field(e,r)}}return r}},$root.caffe.ReLUParameter.prototype.negative_slope=0,$root.caffe.ReLUParameter.prototype.engine=0,$root.caffe.ReLUParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.ReshapeParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ReshapeParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.shape=$root.caffe.BlobShape.decode(a,a.uint32());break;case 2:e.axis=a.int32();break;case 3:e.num_axes=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ReshapeParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"shape":r.shape=$root.caffe.BlobShape.decodeText(a,!0);break;case"axis":r.axis=a.integer();break;case"num_axes":r.num_axes=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.ReshapeParameter.prototype.shape=null,$root.caffe.ReshapeParameter.prototype.axis=0,$root.caffe.ReshapeParameter.prototype.num_axes=-1,$root.caffe.ScaleParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ScaleParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.axis=a.int32();break;case 2:e.num_axes=a.int32();break;case 3:e.filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 4:e.bias_term=a.bool();break;case 5:e.bias_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ScaleParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"axis":r.axis=a.integer();break;case"num_axes":r.num_axes=a.integer();break;case"filler":r.filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"bias_term":r.bias_term=a.boolean();break;case"bias_filler":r.bias_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;default:a.field(e,r)}}return r}},$root.caffe.ScaleParameter.prototype.axis=1,$root.caffe.ScaleParameter.prototype.num_axes=1,$root.caffe.ScaleParameter.prototype.filler=null,$root.caffe.ScaleParameter.prototype.bias_term=!1,$root.caffe.ScaleParameter.prototype.bias_filler=null,$root.caffe.SigmoidParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.SigmoidParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.engine=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.SigmoidParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"engine":r.engine=a.enum($root.caffe.SigmoidParameter.Engine);break;default:a.field(e,r)}}return r}},$root.caffe.SigmoidParameter.prototype.engine=0,$root.caffe.SigmoidParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.SliceParameter=class{constructor(){this.slice_point=[]}static decode(a,r){const e=new $root.caffe.SliceParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 3:e.axis=a.int32();break;case 2:e.slice_point=a.array(e.slice_point,()=>a.uint32(),t);break;case 1:e.slice_dim=a.uint32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.SliceParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"axis":r.axis=a.integer();break;case"slice_point":a.array(r.slice_point,()=>a.integer());break;case"slice_dim":r.slice_dim=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.SliceParameter.prototype.axis=1,$root.caffe.SliceParameter.prototype.slice_dim=1,$root.caffe.SoftmaxParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.SoftmaxParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.engine=a.int32();break;case 2:e.axis=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.SoftmaxParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"engine":r.engine=a.enum($root.caffe.SoftmaxParameter.Engine);break;case"axis":r.axis=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.SoftmaxParameter.prototype.engine=0,$root.caffe.SoftmaxParameter.prototype.axis=1,$root.caffe.SoftmaxParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.SwishParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.SwishParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.beta=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.SwishParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"beta":r.beta=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.SwishParameter.prototype.beta=1,$root.caffe.TanHParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.TanHParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.engine=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.TanHParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"engine":r.engine=a.enum($root.caffe.TanHParameter.Engine);break;default:a.field(e,r)}}return r}},$root.caffe.TanHParameter.prototype.engine=0,$root.caffe.TanHParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.TileParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.TileParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.axis=a.int32();break;case 2:e.tiles=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.TileParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"axis":r.axis=a.integer();break;case"tiles":r.tiles=a.integer();break;default:a.field(e,r)}}return r}},$root.caffe.TileParameter.prototype.axis=1,$root.caffe.TileParameter.prototype.tiles=0,$root.caffe.ThresholdParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.ThresholdParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.threshold=a.float();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.ThresholdParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"threshold":r.threshold=a.float();break;default:a.field(e,r)}}return r}},$root.caffe.ThresholdParameter.prototype.threshold=0,$root.caffe.WindowDataParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.WindowDataParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.source=a.string();break;case 2:e.scale=a.float();break;case 3:e.mean_file=a.string();break;case 4:e.batch_size=a.uint32();break;case 5:e.crop_size=a.uint32();break;case 6:e.mirror=a.bool();break;case 7:e.fg_threshold=a.float();break;case 8:e.bg_threshold=a.float();break;case 9:e.fg_fraction=a.float();break;case 10:e.context_pad=a.uint32();break;case 11:e.crop_mode=a.string();break;case 12:e.cache_images=a.bool();break;case 13:e.root_folder=a.string();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.WindowDataParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"source":r.source=a.string();break;case"scale":r.scale=a.float();break;case"mean_file":r.mean_file=a.string();break;case"batch_size":r.batch_size=a.integer();break;case"crop_size":r.crop_size=a.integer();break;case"mirror":r.mirror=a.boolean();break;case"fg_threshold":r.fg_threshold=a.float();break;case"bg_threshold":r.bg_threshold=a.float();break;case"fg_fraction":r.fg_fraction=a.float();break;case"context_pad":r.context_pad=a.integer();break;case"crop_mode":r.crop_mode=a.string();break;case"cache_images":r.cache_images=a.boolean();break;case"root_folder":r.root_folder=a.string();break;default:a.field(e,r)}}return r}},$root.caffe.WindowDataParameter.prototype.source="",$root.caffe.WindowDataParameter.prototype.scale=1,$root.caffe.WindowDataParameter.prototype.mean_file="",$root.caffe.WindowDataParameter.prototype.batch_size=0,$root.caffe.WindowDataParameter.prototype.crop_size=0,$root.caffe.WindowDataParameter.prototype.mirror=!1,$root.caffe.WindowDataParameter.prototype.fg_threshold=.5,$root.caffe.WindowDataParameter.prototype.bg_threshold=.5,$root.caffe.WindowDataParameter.prototype.fg_fraction=.25,$root.caffe.WindowDataParameter.prototype.context_pad=0,$root.caffe.WindowDataParameter.prototype.crop_mode="warp",$root.caffe.WindowDataParameter.prototype.cache_images=!1,$root.caffe.WindowDataParameter.prototype.root_folder="",$root.caffe.SPPParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.SPPParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.pyramid_height=a.uint32();break;case 2:e.pool=a.int32();break;case 6:e.engine=a.int32();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.SPPParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"pyramid_height":r.pyramid_height=a.integer();break;case"pool":r.pool=a.enum($root.caffe.SPPParameter.PoolMethod);break;case"engine":r.engine=a.enum($root.caffe.SPPParameter.Engine);break;default:a.field(e,r)}}return r}},$root.caffe.SPPParameter.prototype.pyramid_height=0,$root.caffe.SPPParameter.prototype.pool=0,$root.caffe.SPPParameter.prototype.engine=0,$root.caffe.SPPParameter.PoolMethod={MAX:0,AVE:1,STOCHASTIC:2},$root.caffe.SPPParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.V1LayerParameter=class{constructor(){this.bottom=[],this.top=[],this.include=[],this.exclude=[],this.blobs=[],this.param=[],this.blob_share_mode=[],this.blobs_lr=[],this.weight_decay=[],this.loss_weight=[]}static decode(a,r){const e=new $root.caffe.V1LayerParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 2:e.bottom.push(a.string());break;case 3:e.top.push(a.string());break;case 4:e.name=a.string();break;case 32:e.include.push($root.caffe.NetStateRule.decode(a,a.uint32()));break;case 33:e.exclude.push($root.caffe.NetStateRule.decode(a,a.uint32()));break;case 5:e.type=a.int32();break;case 6:e.blobs.push($root.caffe.BlobProto.decode(a,a.uint32()));break;case 1001:e.param.push(a.string());break;case 1002:e.blob_share_mode=a.array(e.blob_share_mode,()=>a.int32(),t);break;case 7:e.blobs_lr=a.floats(e.blobs_lr,t);break;case 8:e.weight_decay=a.floats(e.weight_decay,t);break;case 35:e.loss_weight=a.floats(e.loss_weight,t);break;case 27:e.accuracy_param=$root.caffe.AccuracyParameter.decode(a,a.uint32());break;case 23:e.argmax_param=$root.caffe.ArgMaxParameter.decode(a,a.uint32());break;case 9:e.concat_param=$root.caffe.ConcatParameter.decode(a,a.uint32());break;case 40:e.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decode(a,a.uint32());break;case 10:e.convolution_param=$root.caffe.ConvolutionParameter.decode(a,a.uint32());break;case 11:e.data_param=$root.caffe.DataParameter.decode(a,a.uint32());break;case 12:e.dropout_param=$root.caffe.DropoutParameter.decode(a,a.uint32());break;case 26:e.dummy_data_param=$root.caffe.DummyDataParameter.decode(a,a.uint32());break;case 24:e.eltwise_param=$root.caffe.EltwiseParameter.decode(a,a.uint32());break;case 41:e.exp_param=$root.caffe.ExpParameter.decode(a,a.uint32());break;case 13:e.hdf5_data_param=$root.caffe.HDF5DataParameter.decode(a,a.uint32());break;case 14:e.hdf5_output_param=$root.caffe.HDF5OutputParameter.decode(a,a.uint32());break;case 29:e.hinge_loss_param=$root.caffe.HingeLossParameter.decode(a,a.uint32());break;case 15:e.image_data_param=$root.caffe.ImageDataParameter.decode(a,a.uint32());break;case 16:e.infogain_loss_param=$root.caffe.InfogainLossParameter.decode(a,a.uint32());break;case 17:e.inner_product_param=$root.caffe.InnerProductParameter.decode(a,a.uint32());break;case 18:e.lrn_param=$root.caffe.LRNParameter.decode(a,a.uint32());break;case 22:e.memory_data_param=$root.caffe.MemoryDataParameter.decode(a,a.uint32());break;case 34:e.mvn_param=$root.caffe.MVNParameter.decode(a,a.uint32());break;case 19:e.pooling_param=$root.caffe.PoolingParameter.decode(a,a.uint32());break;case 21:e.power_param=$root.caffe.PowerParameter.decode(a,a.uint32());break;case 30:e.relu_param=$root.caffe.ReLUParameter.decode(a,a.uint32());break;case 38:e.sigmoid_param=$root.caffe.SigmoidParameter.decode(a,a.uint32());break;case 39:e.softmax_param=$root.caffe.SoftmaxParameter.decode(a,a.uint32());break;case 31:e.slice_param=$root.caffe.SliceParameter.decode(a,a.uint32());break;case 37:e.tanh_param=$root.caffe.TanHParameter.decode(a,a.uint32());break;case 25:e.threshold_param=$root.caffe.ThresholdParameter.decode(a,a.uint32());break;case 20:e.window_data_param=$root.caffe.WindowDataParameter.decode(a,a.uint32());break;case 36:e.transform_param=$root.caffe.TransformationParameter.decode(a,a.uint32());break;case 42:e.loss_param=$root.caffe.LossParameter.decode(a,a.uint32());break;case 1:e.layer=$root.caffe.V0LayerParameter.decode(a,a.uint32());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.V1LayerParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"bottom":a.array(r.bottom,()=>a.string());break;case"top":a.array(r.top,()=>a.string());break;case"name":r.name=a.string();break;case"include":r.include.push($root.caffe.NetStateRule.decodeText(a,!0));break;case"exclude":r.exclude.push($root.caffe.NetStateRule.decodeText(a,!0));break;case"type":r.type=a.enum($root.caffe.V1LayerParameter.LayerType);break;case"blobs":r.blobs.push($root.caffe.BlobProto.decodeText(a,!0));break;case"param":a.array(r.param,()=>a.string());break;case"blob_share_mode":a.array(r.blob_share_mode,()=>a.enum($root.caffe.V1LayerParameter.DimCheckMode));break;case"blobs_lr":a.array(r.blobs_lr,()=>a.float());break;case"weight_decay":a.array(r.weight_decay,()=>a.float());break;case"loss_weight":a.array(r.loss_weight,()=>a.float());break;case"accuracy_param":r.accuracy_param=$root.caffe.AccuracyParameter.decodeText(a,!0);break;case"argmax_param":r.argmax_param=$root.caffe.ArgMaxParameter.decodeText(a,!0);break;case"concat_param":r.concat_param=$root.caffe.ConcatParameter.decodeText(a,!0);break;case"contrastive_loss_param":r.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decodeText(a,!0);break;case"convolution_param":r.convolution_param=$root.caffe.ConvolutionParameter.decodeText(a,!0);break;case"data_param":r.data_param=$root.caffe.DataParameter.decodeText(a,!0);break;case"dropout_param":r.dropout_param=$root.caffe.DropoutParameter.decodeText(a,!0);break;case"dummy_data_param":r.dummy_data_param=$root.caffe.DummyDataParameter.decodeText(a,!0);break;case"eltwise_param":r.eltwise_param=$root.caffe.EltwiseParameter.decodeText(a,!0);break;case"exp_param":r.exp_param=$root.caffe.ExpParameter.decodeText(a,!0);break;case"hdf5_data_param":r.hdf5_data_param=$root.caffe.HDF5DataParameter.decodeText(a,!0);break;case"hdf5_output_param":r.hdf5_output_param=$root.caffe.HDF5OutputParameter.decodeText(a,!0);break;case"hinge_loss_param":r.hinge_loss_param=$root.caffe.HingeLossParameter.decodeText(a,!0);break;case"image_data_param":r.image_data_param=$root.caffe.ImageDataParameter.decodeText(a,!0);break;case"infogain_loss_param":r.infogain_loss_param=$root.caffe.InfogainLossParameter.decodeText(a,!0);break;case"inner_product_param":r.inner_product_param=$root.caffe.InnerProductParameter.decodeText(a,!0);break;case"lrn_param":r.lrn_param=$root.caffe.LRNParameter.decodeText(a,!0);break;case"memory_data_param":r.memory_data_param=$root.caffe.MemoryDataParameter.decodeText(a,!0);break;case"mvn_param":r.mvn_param=$root.caffe.MVNParameter.decodeText(a,!0);break;case"pooling_param":r.pooling_param=$root.caffe.PoolingParameter.decodeText(a,!0);break;case"power_param":r.power_param=$root.caffe.PowerParameter.decodeText(a,!0);break;case"relu_param":r.relu_param=$root.caffe.ReLUParameter.decodeText(a,!0);break;case"sigmoid_param":r.sigmoid_param=$root.caffe.SigmoidParameter.decodeText(a,!0);break;case"softmax_param":r.softmax_param=$root.caffe.SoftmaxParameter.decodeText(a,!0);break;case"slice_param":r.slice_param=$root.caffe.SliceParameter.decodeText(a,!0);break;case"tanh_param":r.tanh_param=$root.caffe.TanHParameter.decodeText(a,!0);break;case"threshold_param":r.threshold_param=$root.caffe.ThresholdParameter.decodeText(a,!0);break;case"window_data_param":r.window_data_param=$root.caffe.WindowDataParameter.decodeText(a,!0);break;case"transform_param":r.transform_param=$root.caffe.TransformationParameter.decodeText(a,!0);break;case"loss_param":r.loss_param=$root.caffe.LossParameter.decodeText(a,!0);break;case"layer":r.layer=$root.caffe.V0LayerParameter.decodeText(a,!0);break;default:a.field(e,r)}}return r}},$root.caffe.V1LayerParameter.prototype.name="",$root.caffe.V1LayerParameter.prototype.type=0,$root.caffe.V1LayerParameter.prototype.accuracy_param=null,$root.caffe.V1LayerParameter.prototype.argmax_param=null,$root.caffe.V1LayerParameter.prototype.concat_param=null,$root.caffe.V1LayerParameter.prototype.contrastive_loss_param=null,$root.caffe.V1LayerParameter.prototype.convolution_param=null,$root.caffe.V1LayerParameter.prototype.data_param=null,$root.caffe.V1LayerParameter.prototype.dropout_param=null,$root.caffe.V1LayerParameter.prototype.dummy_data_param=null,$root.caffe.V1LayerParameter.prototype.eltwise_param=null,$root.caffe.V1LayerParameter.prototype.exp_param=null,$root.caffe.V1LayerParameter.prototype.hdf5_data_param=null,$root.caffe.V1LayerParameter.prototype.hdf5_output_param=null,$root.caffe.V1LayerParameter.prototype.hinge_loss_param=null,$root.caffe.V1LayerParameter.prototype.image_data_param=null,$root.caffe.V1LayerParameter.prototype.infogain_loss_param=null,$root.caffe.V1LayerParameter.prototype.inner_product_param=null,$root.caffe.V1LayerParameter.prototype.lrn_param=null,$root.caffe.V1LayerParameter.prototype.memory_data_param=null,$root.caffe.V1LayerParameter.prototype.mvn_param=null,$root.caffe.V1LayerParameter.prototype.pooling_param=null,$root.caffe.V1LayerParameter.prototype.power_param=null,$root.caffe.V1LayerParameter.prototype.relu_param=null,$root.caffe.V1LayerParameter.prototype.sigmoid_param=null,$root.caffe.V1LayerParameter.prototype.softmax_param=null,$root.caffe.V1LayerParameter.prototype.slice_param=null,$root.caffe.V1LayerParameter.prototype.tanh_param=null,$root.caffe.V1LayerParameter.prototype.threshold_param=null,$root.caffe.V1LayerParameter.prototype.window_data_param=null,$root.caffe.V1LayerParameter.prototype.transform_param=null,$root.caffe.V1LayerParameter.prototype.loss_param=null,$root.caffe.V1LayerParameter.prototype.layer=null,$root.caffe.V1LayerParameter.LayerType={NONE:0,ABSVAL:35,ACCURACY:1,ARGMAX:30,BNLL:2,CONCAT:3,CONTRASTIVE_LOSS:37,CONVOLUTION:4,DATA:5,DECONVOLUTION:39,DROPOUT:6,DUMMY_DATA:32,EUCLIDEAN_LOSS:7,ELTWISE:25,EXP:38,FLATTEN:8,HDF5_DATA:9,HDF5_OUTPUT:10,HINGE_LOSS:28,IM2COL:11,IMAGE_DATA:12,INFOGAIN_LOSS:13,INNER_PRODUCT:14,LRN:15,MEMORY_DATA:29,MULTINOMIAL_LOGISTIC_LOSS:16,MVN:34,POOLING:17,POWER:26,RELU:18,SIGMOID:19,SIGMOID_CROSS_ENTROPY_LOSS:27,SILENCE:36,SOFTMAX:20,SOFTMAX_LOSS:21,SPLIT:22,SLICE:33,TANH:23,WINDOW_DATA:24,THRESHOLD:31},$root.caffe.V1LayerParameter.DimCheckMode={STRICT:0,PERMISSIVE:1},$root.caffe.V0LayerParameter=class{constructor(){this.blobs=[],this.blobs_lr=[],this.weight_decay=[]}static decode(a,r){const e=new $root.caffe.V0LayerParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.name=a.string();break;case 2:e.type=a.string();break;case 3:e.num_output=a.uint32();break;case 4:e.biasterm=a.bool();break;case 5:e.weight_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 6:e.bias_filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 7:e.pad=a.uint32();break;case 8:e.kernelsize=a.uint32();break;case 9:e.group=a.uint32();break;case 10:e.stride=a.uint32();break;case 11:e.pool=a.int32();break;case 12:e.dropout_ratio=a.float();break;case 13:e.local_size=a.uint32();break;case 14:e.alpha=a.float();break;case 15:e.beta=a.float();break;case 22:e.k=a.float();break;case 16:e.source=a.string();break;case 17:e.scale=a.float();break;case 18:e.meanfile=a.string();break;case 19:e.batchsize=a.uint32();break;case 20:e.cropsize=a.uint32();break;case 21:e.mirror=a.bool();break;case 50:e.blobs.push($root.caffe.BlobProto.decode(a,a.uint32()));break;case 51:e.blobs_lr=a.floats(e.blobs_lr,t);break;case 52:e.weight_decay=a.floats(e.weight_decay,t);break;case 53:e.rand_skip=a.uint32();break;case 54:e.det_fg_threshold=a.float();break;case 55:e.det_bg_threshold=a.float();break;case 56:e.det_fg_fraction=a.float();break;case 58:e.det_context_pad=a.uint32();break;case 59:e.det_crop_mode=a.string();break;case 60:e.new_num=a.int32();break;case 61:e.new_channels=a.int32();break;case 62:e.new_height=a.int32();break;case 63:e.new_width=a.int32();break;case 64:e.shuffle_images=a.bool();break;case 65:e.concat_dim=a.uint32();break;case 1001:e.hdf5_output_param=$root.caffe.HDF5OutputParameter.decode(a,a.uint32());break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.V0LayerParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"name":r.name=a.string();break;case"type":r.type=a.string();break;case"num_output":r.num_output=a.integer();break;case"biasterm":r.biasterm=a.boolean();break;case"weight_filler":r.weight_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"bias_filler":r.bias_filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"pad":r.pad=a.integer();break;case"kernelsize":r.kernelsize=a.integer();break;case"group":r.group=a.integer();break;case"stride":r.stride=a.integer();break;case"pool":r.pool=a.enum($root.caffe.V0LayerParameter.PoolMethod);break;case"dropout_ratio":r.dropout_ratio=a.float();break;case"local_size":r.local_size=a.integer();break;case"alpha":r.alpha=a.float();break;case"beta":r.beta=a.float();break;case"k":r.k=a.float();break;case"source":r.source=a.string();break;case"scale":r.scale=a.float();break;case"meanfile":r.meanfile=a.string();break;case"batchsize":r.batchsize=a.integer();break;case"cropsize":r.cropsize=a.integer();break;case"mirror":r.mirror=a.boolean();break;case"blobs":r.blobs.push($root.caffe.BlobProto.decodeText(a,!0));break;case"blobs_lr":a.array(r.blobs_lr,()=>a.float());break;case"weight_decay":a.array(r.weight_decay,()=>a.float());break;case"rand_skip":r.rand_skip=a.integer();break;case"det_fg_threshold":r.det_fg_threshold=a.float();break;case"det_bg_threshold":r.det_bg_threshold=a.float();break;case"det_fg_fraction":r.det_fg_fraction=a.float();break;case"det_context_pad":r.det_context_pad=a.integer();break;case"det_crop_mode":r.det_crop_mode=a.string();break;case"new_num":r.new_num=a.integer();break;case"new_channels":r.new_channels=a.integer();break;case"new_height":r.new_height=a.integer();break;case"new_width":r.new_width=a.integer();break;case"shuffle_images":r.shuffle_images=a.boolean();break;case"concat_dim":r.concat_dim=a.integer();break;case"hdf5_output_param":r.hdf5_output_param=$root.caffe.HDF5OutputParameter.decodeText(a,!0);break;default:a.field(e,r)}}return r}},$root.caffe.V0LayerParameter.prototype.name="",$root.caffe.V0LayerParameter.prototype.type="",$root.caffe.V0LayerParameter.prototype.num_output=0,$root.caffe.V0LayerParameter.prototype.biasterm=!0,$root.caffe.V0LayerParameter.prototype.weight_filler=null,$root.caffe.V0LayerParameter.prototype.bias_filler=null,$root.caffe.V0LayerParameter.prototype.pad=0,$root.caffe.V0LayerParameter.prototype.kernelsize=0,$root.caffe.V0LayerParameter.prototype.group=1,$root.caffe.V0LayerParameter.prototype.stride=1,$root.caffe.V0LayerParameter.prototype.pool=0,$root.caffe.V0LayerParameter.prototype.dropout_ratio=.5,$root.caffe.V0LayerParameter.prototype.local_size=5,$root.caffe.V0LayerParameter.prototype.alpha=1,$root.caffe.V0LayerParameter.prototype.beta=.75,$root.caffe.V0LayerParameter.prototype.k=1,$root.caffe.V0LayerParameter.prototype.source="",$root.caffe.V0LayerParameter.prototype.scale=1,$root.caffe.V0LayerParameter.prototype.meanfile="",$root.caffe.V0LayerParameter.prototype.batchsize=0,$root.caffe.V0LayerParameter.prototype.cropsize=0,$root.caffe.V0LayerParameter.prototype.mirror=!1,$root.caffe.V0LayerParameter.prototype.rand_skip=0,$root.caffe.V0LayerParameter.prototype.det_fg_threshold=.5,$root.caffe.V0LayerParameter.prototype.det_bg_threshold=.5,$root.caffe.V0LayerParameter.prototype.det_fg_fraction=.25,$root.caffe.V0LayerParameter.prototype.det_context_pad=0,$root.caffe.V0LayerParameter.prototype.det_crop_mode="warp",$root.caffe.V0LayerParameter.prototype.new_num=0,$root.caffe.V0LayerParameter.prototype.new_channels=0,$root.caffe.V0LayerParameter.prototype.new_height=0,$root.caffe.V0LayerParameter.prototype.new_width=0,$root.caffe.V0LayerParameter.prototype.shuffle_images=!1,$root.caffe.V0LayerParameter.prototype.concat_dim=1,$root.caffe.V0LayerParameter.prototype.hdf5_output_param=null,$root.caffe.V0LayerParameter.PoolMethod={MAX:0,AVE:1,STOCHASTIC:2},$root.caffe.PReLUParameter=class{constructor(){}static decode(a,r){const e=new $root.caffe.PReLUParameter,c=a.next(r);for(;a.end(c);){const t=a.uint32();switch(t>>>3){case 1:e.filler=$root.caffe.FillerParameter.decode(a,a.uint32());break;case 2:e.channel_shared=a.bool();break;default:a.skipType(7&t)}}return e}static decodeText(a){const r=new $root.caffe.PReLUParameter;for(a.start();!a.end();){const e=a.tag();switch(e){case"filler":r.filler=$root.caffe.FillerParameter.decodeText(a,!0);break;case"channel_shared":r.channel_shared=a.boolean();break;default:a.field(e,r)}}return r}},$root.caffe.PReLUParameter.prototype.filler=null,$root.caffe.PReLUParameter.prototype.channel_shared=!1;
