var tnn=tnn||{},base=base||require("./base");tnn.ModelFactory=class{match(t){const e=t.identifier.toLowerCase();if(e.endsWith(".tnnproto")){let s=t.text;s=s.substring(0,Math.min(s.length,128));const h=s.split(`
`).shift().trim();if(h.startsWith('"')&&h.endsWith('"')){const n=h.replace(/(^")|("$)/g,"").split(",").shift().trim().split(" ");if(n.length===3||n.length>=4&&n[3]==="4206624770")return!0}}if(e.endsWith(".tnnmodel")){const s=t.buffer;if(s.length>4&&(s[0]|s[1]<<8|s[2]<<16|s[3]<<24)>>>0==4206624770)return!0}return!1}open(t,e){return tnn.Metadata.open(e).then(s=>{const h=t.identifier.toLowerCase();if(h.endsWith(".tnnproto")){const n=t.identifier.substring(0,t.identifier.length-9)+".tnnmodel";return t.request(n,null).then(r=>new tnn.Model(s,t.text,r)).catch(()=>new tnn.Model(s,t.text,null)).catch(r=>{const a=r&&r.message?r.message:r.toString();throw new tnn.Error(a.replace(/\.$/,"")+" in '"+h+"'.")})}if(h.endsWith(".tnnmodel")){const n=t.identifier.substring(0,t.identifier.length-9)+".tnnproto";return t.request(n,"utf-8").then(r=>new tnn.Model(s,r,t.buffer)).catch(r=>{const a=r&&r.message?r.message:r.toString();throw new tnn.Error(a.replace(/\.$/,"")+" in '"+h+"'.")})}})}},tnn.Model=class{constructor(t,e,s){this._graphs=[],this._graphs.push(new tnn.Graph(t,e,s))}get format(){return"TNN"}get graphs(){return this._graphs}},tnn.Graph=class{constructor(t,e,s){this._inputs=[],this._outputs=[],this._nodes=[];const h=new tnn.LayerResourceReader(s),n=new tnn.TextProtoReader(e);for(const r of n.inputs){const a=new tnn.TensorShape(r.shape),l=new tnn.TensorType("float32",a);this._inputs.push(new tnn.Parameter(r.name,[new tnn.Argument(r.name,l,null)]))}for(const r of n.outputs)this._outputs.push(new tnn.Parameter(r.name,[new tnn.Argument(r.name,null,null)]));for(const r of n.layers)this._nodes.push(new tnn.Node(t,h,r))}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}},tnn.Parameter=class{constructor(t,e){this._name=t,this._arguments=e}get name(){return this._name}get visible(){return!0}get arguments(){return this._arguments}},tnn.Argument=class{constructor(t,e,s){if(typeof t!="string")throw new tnn.Error("Invalid argument identifier '"+JSON.stringify(t)+"'.");this._name=t,this._type=e||null,this._initializer=s||null}get name(){return this._name}get type(){return this._initializer?this._initializer.type:this._type}get initializer(){return this._initializer}},tnn.Node=class{constructor(t,e,s){this._metadata=t,this._inputs=[],this._outputs=[],this._attributes=[],this._type=s.type,this._name=s.name;const h=t.operator(this._type);h&&(this._type=h);const n=t.type(this._type),r=n&&n.attributes?n&&n.attributes.slice():[],a=s.attributes.slice();for(;a.length>0;){const i=r.shift();let o=null,u="";if(i&&i.type==="int32[]"&&i.size)u=i.name,o=a.splice(0,s.attr[i.size]).map(p=>parseInt(p.value,10));else{const p=a.shift();u=p.key,o=p.value}this._attributes.push(new tnn.Attribute(i,u,o))}const l=s.inputs;let c=0;if(n&&n.inputs){for(const i of n.inputs)if(c<l.length||i.option!="optional"){const o=i.option=="variadic"?l.length-c:1,u=l.slice(c,c+o).filter(p=>p!=""||i.option!="optional").map(p=>new tnn.Argument(p,null,null));this._inputs.push(new tnn.Parameter(i.name,u)),c+=o}}else this._inputs=this._inputs.concat(l.slice(c).map((i,o)=>{const u=c+o==0?"input":(c+o).toString();return new tnn.Parameter(u,[new tnn.Argument(i,null,null)])}));const d=s.outputs;let _=0;if(n&&n.outputs){for(const i of n.outputs)if(_<d.length||i.option!="optional"){const o=i.option=="variadic"?d.length-_:1,u=d.slice(_,_+o).map(p=>new tnn.Argument(p,null,null));this._outputs.push(new tnn.Parameter(i.name,u)),_+=o}}else this._outputs=this._outputs.concat(d.slice(_).map((i,o)=>{const u=_+o==0?"output":(_+o).toString();return new tnn.Parameter(u,[new tnn.Argument(i,null,null)])}));switch(this._type){case"Convolution":case"ConvolutionDepthWise":case"Deconvolution":case"DeconvolutionDepthWise":{const i=e.read(this._name);if(i){const o=parseInt(s.attr[2]||0,10),u=parseInt(s.attr[3]||0,10),p=parseInt(s.attr[4]||u,10),g=i.filter.length;this._weight(i,"filter",[o,g/(o*u*p),u,p]),i.bias&&this._weight(i,"bias",[o]),i.quantized&&this._weight(i,"quantized",[o])}break}case"Conv3D":{const i=e.read(this._name);if(i){const o=parseInt(s.attr[2]||0,10),u=parseInt(s.attr[3]||0,10),p=parseInt(s.attr[4]||u,10),g=parseInt(s.attr[5]||u,10),f=i.filter.length;this._weight(i,"weight",[o,f/(o*u*p*g),u,p,g]),i.bias&&this._weight(e,"bias",[o])}break}case"InnerProduct":{const i=e.read(this._name);if(i){const o=parseInt(s.attr[0]||0,10),u=i.weight.length;this._weight(i,"weight",[o,u/o]),this._weight(i,"bias",[o]),i.weight.dataType==="int8"&&this._weight(i,"scale",[o])}break}case"PReLU":{const i=e.read(this._name);i&&this._weight(i,"slope",[i.slope.length]);break}case"BatchNormCxx":{const i=e.read(this._name);i&&(this._weight(i,"scale",[i.scale.length]),this._weight(i,"bias",[i.bias.length]));break}case"Div":case"Sub":case"Add":case"Mul":if(this._inputs.length===1){const i=e.read(this._name);if(i){const o=i.slope.length;this._weight(i,"slope",[o])}}break;case"HdrGuide":{const i=e.read(this._name);if(i){const o=i.ccm_weight.length;this._weight(i,"ccm_weight",[o]),this._weight(i,"ccm_bias",[o]),this._weight(i,"shifts",[o]),this._weight(i,"slopes",[o]),this._weight(i,"projection_weight",[o]),this._weight(i,"projection_bias",[o])}break}case"BlobScale":{const i=e.read(this._name);if(i){const o=i.scale.length;this._weight(i,"scale",[o]),this._weight(i,"bias",[o])}break}}}get type(){return this._type}get name(){return this._name}get metadata(){return this._metadata.type(this._type)}get attributes(){return this._attributes}get inputs(){return this._inputs}get outputs(){return this._outputs}_weight(t,e,s){const h=t[e];if(!h)throw new tnn.Error("Layer initializer'"+t.type+"."+e+"' not found '");const n=new tnn.Tensor(new tnn.TensorType(h.dataType,new tnn.TensorShape(s)),h.value);this._inputs.push(new tnn.Parameter(e,[new tnn.Argument("",null,n)]))}},tnn.Attribute=class{constructor(t,e,s){if(this._type="",this._name=e.toString(),this._value=s,t){switch(this._name=t.name,t.type&&(this._type=t.type),this._type){case"int32":this._value=parseInt(this._value,10);break;case"float32":this._value=parseFloat(this._value);break;case"float32[]":this._value=this._value.map(h=>parseFloat(h))}(Object.prototype.hasOwnProperty.call(t,"visible")&&!t.visible||Object.prototype.hasOwnProperty.call(t,"default")&&(this._value==t.default||this._value&&this._value.toString()==t.default.toString()))&&(this._visible=!1)}}get type(){return this._type}get name(){return this._name}get value(){return this._value}get visible(){return this._visible!=0}},tnn.Tensor=class{constructor(t,e){this._type=t,this._data=e}get kind(){return"Weight"}get type(){return this._type}get state(){return this._context().state||null}get value(){const t=this._context();return t.state?null:(t.limit=Number.MAX_SAFE_INTEGER,this._decode(t,0))}toString(){const t=this._context();if(t.state)return"";t.limit=1e4;const e=this._decode(t,0);return JSON.stringify(e,null,4)}_context(){const t={index:0,count:0,state:null};if(this._type.dataType=="?")return t.state="Tensor has unknown data type.",t;if(!this._type.shape)return t.state="Tensor has no dimensions.",t;if(!this._data)return t.state="Tensor data is empty.",t;switch(this._type.dataType){case"float16":case"float32":t.data=new DataView(this._data.buffer,this._data.byteOffset,this._data.byteLength);break;default:t.state="Tensor data type is not implemented."}return t.dataType=this._type.dataType,t.shape=this._type.shape.dimensions,t}_decode(t,e){const s=t.shape.length!==0?t.shape:[1],h=[],n=s[e];if(e==s.length-1)for(let r=0;r<n;r++){if(t.count>t.limit)return h.push("..."),h;switch(this._type.dataType){case"float32":h.push(t.data.getFloat32(t.index,!0)),t.index+=4,t.count++;break;case"float16":h.push(t.data.getFloat16(t.index,!0)),t.index+=2,t.count++}}else for(let r=0;r<n;r++){if(t.count>t.limit)return h.push("..."),h;h.push(this._decode(t,e+1))}return t.shape.length==0?h[0]:h}},tnn.TensorType=class{constructor(t,e){this._dataType=t||"?",this._shape=e}get dataType(){return this._dataType}get shape(){return this._shape}toString(){return this._dataType+this._shape.toString()}},tnn.TensorShape=class{constructor(t){this._dimensions=t}get dimensions(){return this._dimensions}toString(){return this._dimensions?"["+this._dimensions.map(t=>t?t.toString():"?").join(",")+"]":""}},tnn.Metadata=class{static open(t){return tnn.Metadata._metadata?Promise.resolve(tnn.Metadata._metadata):t.request(null,"tnn-metadata.json","utf-8").then(e=>(tnn.Metadata._metadata=new tnn.Metadata(e),tnn.Metadata._metadata)).catch(()=>(tnn.Metadata._metadata=new tnn.Metadata(null),tnn.Metadata._metadatas))}constructor(t){if(this._operatorMap=new Map,this._map=new Map,this._attributeCache=new Map,t){const e=JSON.parse(t);if(e)for(const s of e)s.name&&s.schema&&(s.schema.name=s.name,this._map.set(s.name,s.schema),Object.prototype.hasOwnProperty.call(s.schema,"operator")&&this._operatorMap.set(s.schema.operator,s.name))}}operator(t){return this._operatorMap.get(t)}type(t){return this._map.get(t)}attribute(t,e){const s=t+":"+e;if(!this._attributeCache.has(s)){const h=this.type(t);if(h&&h.attributes&&h.attributes.length>0)for(const n of h.attributes)this._attributeCache.set(t+":"+n.name,n);this._attributeCache.has(s)||this._attributeCache.set(s,null)}return this._attributeCache.get(s)}},tnn.TextProtoReader=class{constructor(t){const e=(n,r,a,l)=>n.split(r).map(c=>a?c.trim():c).filter(c=>!l||c),s=e(t.replace(/\r?\n|"/g,""),",",!0,!1);if(s.length<=5)throw new tnn.Error("Invalid line count.");const h=e(s.shift()," ",!0,!1);if(h.length<3)throw new tnn.Error("Invalid header size.");if(h.length>3&&h[3]!=="4206624770")throw new tnn.Error("Invalid signature '"+h[3]+"'.");for(this._inputs=e(s.shift(),":",!0,!1).map(n=>{const r=e(n," ",!0,!1);return{name:r.shift(),shape:r.map(a=>parseInt(a,10))}}),s.shift(),this._outputs=e(s.shift()," ",!0,!1).map(n=>({name:n})),s.shift(),this._layers=[];s.length>0;){const n=s.shift().trim();if(n.length>0){const r=e(n," ",!0,!0),a={};a.type=r.shift(),a.name=r.shift();const l=parseInt(r.shift(),10),c=parseInt(r.shift(),10);a.inputs=r.splice(0,l),a.outputs=r.splice(0,c),a.attr={},a.attributes=[];let d=0;for(const _ of r){const i=_.split(" ");if(i.length===1){let o=d,u=i.toString();const p=parseInt(o,10);p<0&&(u=u.split(",").map(g=>g.trim()),u.shift(),o=(-(p+23300)).toString()),a.attr[o]=u,a.attributes.push({key:o,value:u}),d++}}this._layers.push(a)}}}get inputs(){return this._inputs}get outputs(){return this._outputs}get layers(){return this._layers}},tnn.LayerResourceReader=class{constructor(t){if(this._layerResources=[],t){const e=new tnn.BinaryReader(t),s=e.uint32();if(s!==4206624770)throw new tnn.Error("Invalid blob header signature '"+s.toString()+"'.");const h=536870911&e.int32(),n=r=>{const a=r.uint32();if(a!==4206624770)throw new tnn.Error("Invalid raw signature '"+a.toString()+"'.");const l=r.int32();if(l>4)throw new tnn.Error("Unknown data type '"+l+"'.");const c=r.int32();return c<=0?null:{dataType:["float32","float16","int8","int32","bfloat16"][l],length:c/[4,2,1,4,2][l],value:r.bytes(c)}};for(let r=0;r<h;r++){const a={};switch(a.operator=e.int32(),a.type=e.string(),a.name=e.string(),a.type){case"Convolution":case"ConvolutionDepthWise":case"Deconvolution":case"DeconvolutionDepthWise":{e.expect(a.name);const l=e.int32();a.filter=n(e),l&&(a.bias=n(e)),a.filter.dataType==="int8"&&(a.quantized=n());break}case"Conv3D":{e.expect(a.name);const l=e.int32();a.filter=n(e),l&&(a.bias=n(e));break}case"InnerProduct":e.expect(a.name),a.weight=n(e),a.bias=n(e),a.weight.dataType==="int8"&&(a.scale=n());break;case"PReLU":e.expect(a.name),a.slope=n(e);break;case"Add":case"Div":case"Mul":case"Sub":a.slope=n(e);break;case"BatchNormCxx":a.scale=n(e),a.bias=n(e);break;case"HdrGuide":a.ccm_weight=n(e),a.ccm_bias=n(e),a.shifts=n(e),a.slopes=n(e),a.projection_weight=n(e),a.projection_bias=n(e);break;case"BlobScale":a.scale=n(e),a.bias=n(e);break;default:throw new tnn.Error("Unknown layer resource type '"+a.type+"'.")}this._layerResources.push(a)}if(!e.end())throw new tnn.Error("Invalid blob size.")}}read(t){const e=this._layerResources.shift();if(e&&e.name!==t)throw new tnn.Error("Invalid blob layer name '"+t+"'.");return e}},tnn.BinaryReader=class{constructor(t){this._buffer=t,this._dataView=new DataView(t.buffer,t.byteOffset,t.byteLength),this._position=0}end(){return this._position===this._buffer.length}skip(t){if(this._position+=t,this._position>this._buffer.length)throw new tnn.Error("Expected "+(this._position-this._buffer.length)+" more bytes. The file might be corrupted. Unexpected end of file.")}bytes(t){const e=this._position;return this.skip(t),this._buffer.subarray(e,this._position)}uint32(){const t=this._position;return this.skip(4),this._dataView.getUint32(t,!0)}int32(){const t=this._position;return this.skip(4),this._dataView.getInt32(t,!0)}string(){const t=this.int32(),e=this._position;this.skip(t);const s=this._buffer.subarray(e,this._position);return new TextDecoder("utf-8").decode(s)}expect(t){const e=this.string();if(t!==e)throw new tnn.Error("Invalid string '"+e+"' instead of '"+t+"'.")}},tnn.Error=class extends Error{constructor(t){super(t),this.name="Error loading TNN model."}},typeof module!="undefined"&&typeof module.exports=="object"&&(module.exports.ModelFactory=tnn.ModelFactory);
