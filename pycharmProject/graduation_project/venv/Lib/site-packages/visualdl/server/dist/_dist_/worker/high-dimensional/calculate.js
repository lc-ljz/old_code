import{PCA as u,UMAP as r,tSNE as m}from"../../resource/high-dimensional/index.js";const E=n=>{const p=t=>{const{vectors:e,variance:i,totalVariance:o}=u(t.input,t.dim,t.n);n.emit("RESULT",{vectors:e,variance:i,totalVariance:o})},c=t=>{const e=new m({dimension:t.n,perplexity:t.perplexity,epsilon:t.epsilon}),i=()=>{e.setData(t.input,t.dim),n.emit("RESULT",{vectors:e.solution,step:e.step})};i(),n.on("INFO",o=>{switch(o.type){case"step":return e.run(),n.emit("RESULT",{vectors:e.solution,step:e.step});case"reset":return i();case"params":{const s=o.data;(s==null?void 0:s.perplexity)!=null&&e.setPerplexity(s.perplexity),(s==null?void 0:s.epsilon)!=null&&e.setEpsilon(s.epsilon);return}default:return null}})},l=t=>{const e=r(t.n,t.neighbors,t.input,t.dim);e&&n.emit("RESULT",{vectors:e.embedding,epoch:e.nEpochs,nEpochs:e.nEpochs}),n.on("INFO",()=>{n.emit("INITIALIZED")})};n.on("RUN",({reduction:t,params:e})=>{switch(t){case"pca":return p(e);case"tsne":return c(e);case"umap":return l(e);default:return null}}),n.emit("INITIALIZED")};export default E;
