var $root=flatbuffers.get("armnn");$root.armnnSerializer=$root.armnnSerializer||{},$root.armnnSerializer.ActivationFunction={Sigmoid:0,TanH:1,Linear:2,ReLu:3,BoundedReLu:4,SoftReLu:5,LeakyReLu:6,Abs:7,Sqrt:8,Square:9,Elu:10,HardSwish:11},$root.armnnSerializer.ArgMinMaxFunction={Min:0,Max:1},$root.armnnSerializer.DataType={Float16:0,Float32:1,QuantisedAsymm8:2,Signed32:3,Boolean:4,QuantisedSymm16:5,QAsymmU8:6,QSymmS16:7,QAsymmS8:8,QSymmS8:9},$root.armnnSerializer.DataLayout={NHWC:0,NCHW:1},$root.armnnSerializer.ResizeMethod={NearestNeighbor:0,Bilinear:1},$root.armnnSerializer.TensorInfo=class{static decode(a,r){const e=new $root.armnnSerializer.TensorInfo;return e.dimensions=a.typedArray(r,4,Uint32Array),e.dataType=a.int8_(r,6,0),e.quantizationScale=a.float32_(r,8,1),e.quantizationOffset=a.int32_(r,10,0),e.quantizationScales=a.typedArray(r,12,Float32Array),e.quantizationDim=a.uint32_(r,14,0),e.dimensionality=a.uint32_(r,16,1),e}static decodeText(a,r){const e=new $root.armnnSerializer.TensorInfo;return e.dimensions=a.typedArray(r.dimensions,Uint32Array),e.dataType=$root.armnnSerializer.DataType[r.dataType],e.quantizationScale=a.value(r.quantizationScale,1),e.quantizationOffset=a.value(r.quantizationOffset,0),e.quantizationScales=a.typedArray(r.quantizationScales,Float32Array),e.quantizationDim=a.value(r.quantizationDim,0),e.dimensionality=a.value(r.dimensionality,1),e}},$root.armnnSerializer.Connection=class{static decode(a,r){const e=new $root.armnnSerializer.Connection;return e.sourceLayerIndex=a.uint32(r+0),e.outputSlotIndex=a.uint32(r+4),e}static decodeText(a,r){const e=new $root.armnnSerializer.Connection;return e.sourceLayerIndex=r.sourceLayerIndex,e.outputSlotIndex=r.outputSlotIndex,e}},$root.armnnSerializer.ByteData=class{static decode(a,r){const e=new $root.armnnSerializer.ByteData;return e.data=a.typedArray(r,4,Int8Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.ByteData;return e.data=a.typedArray(r.data,Int8Array),e}},$root.armnnSerializer.ShortData=class{static decode(a,r){const e=new $root.armnnSerializer.ShortData;return e.data=a.typedArray(r,4,Int16Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.ShortData;return e.data=a.typedArray(r.data,Int16Array),e}},$root.armnnSerializer.IntData=class{static decode(a,r){const e=new $root.armnnSerializer.IntData;return e.data=a.typedArray(r,4,Int32Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.IntData;return e.data=a.typedArray(r.data,Int32Array),e}},$root.armnnSerializer.LongData=class{static decode(a,r){const e=new $root.armnnSerializer.LongData;return e.data=a.int64s_(r,4),e}static decodeText(a,r){const e=new $root.armnnSerializer.LongData;return e.data=a.array(r.data),e}},$root.armnnSerializer.ConstTensorData=class{static decode(a,r,e){switch(e){case 1:return $root.armnnSerializer.ByteData.decode(a,r);case 2:return $root.armnnSerializer.ShortData.decode(a,r);case 3:return $root.armnnSerializer.IntData.decode(a,r);case 4:return $root.armnnSerializer.LongData.decode(a,r)}}static decodeText(a,r,e){switch(e){case"ByteData":return $root.armnnSerializer.ByteData.decodeText(a,r);case"ShortData":return $root.armnnSerializer.ShortData.decodeText(a,r);case"IntData":return $root.armnnSerializer.IntData.decodeText(a,r);case"LongData":return $root.armnnSerializer.LongData.decodeText(a,r)}}},$root.armnnSerializer.ConstTensor=class{static decode(a,r){const e=new $root.armnnSerializer.ConstTensor;return e.info=a.table(r,4,$root.armnnSerializer.TensorInfo.decode),e.data=a.union(r,6,$root.armnnSerializer.ConstTensorData.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ConstTensor;return e.info=a.object(r.info,$root.armnnSerializer.TensorInfo.decodeText),e.data=$root.armnnSerializer.ConstTensorData.decodeText(a,r.data,r.data_type),e}},$root.armnnSerializer.InputSlot=class{static decode(a,r){const e=new $root.armnnSerializer.InputSlot;return e.index=a.uint32_(r,4,0),e.connection=a.struct(r,6,$root.armnnSerializer.Connection.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.InputSlot;return e.index=a.value(r.index,0),e.connection=a.object(r.connection,$root.armnnSerializer.Connection.decodeText),e}},$root.armnnSerializer.OutputSlot=class{static decode(a,r){const e=new $root.armnnSerializer.OutputSlot;return e.index=a.uint32_(r,4,0),e.tensorInfo=a.table(r,6,$root.armnnSerializer.TensorInfo.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.OutputSlot;return e.index=a.value(r.index,0),e.tensorInfo=a.object(r.tensorInfo,$root.armnnSerializer.TensorInfo.decodeText),e}},$root.armnnSerializer.LayerType={Addition:0,Input:1,Multiplication:2,Output:3,Pooling2d:4,Reshape:5,Softmax:6,Convolution2d:7,DepthwiseConvolution2d:8,Activation:9,Permute:10,FullyConnected:11,Constant:12,SpaceToBatchNd:13,BatchToSpaceNd:14,Division:15,Minimum:16,Equal:17,Maximum:18,Normalization:19,Pad:20,Rsqrt:21,Floor:22,BatchNormalization:23,Greater:24,ResizeBilinear:25,Subtraction:26,StridedSlice:27,Gather:28,Mean:29,Merger:30,L2Normalization:31,Splitter:32,DetectionPostProcess:33,Lstm:34,Quantize:35,Dequantize:36,Merge:37,Switch:38,Concat:39,SpaceToDepth:40,Prelu:41,TransposeConvolution2d:42,Resize:43,Stack:44,QuantizedLstm:45,Abs:46,ArgMinMax:47,Slice:48,DepthToSpace:49,InstanceNormalization:50,LogSoftmax:51,Comparison:52,StandIn:53,ElementwiseUnary:54,Transpose:55,QLstm:56,Fill:57,Rank:58},$root.armnnSerializer.LayerBase=class{static decode(a,r){const e=new $root.armnnSerializer.LayerBase;return e.index=a.uint32_(r,4,0),e.layerName=a.string_(r,6,null),e.layerType=a.uint32_(r,8,0),e.inputSlots=a.tableArray(r,10,$root.armnnSerializer.InputSlot.decode),e.outputSlots=a.tableArray(r,12,$root.armnnSerializer.OutputSlot.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.LayerBase;return e.index=a.value(r.index,0),e.layerName=a.value(r.layerName,null),e.layerType=$root.armnnSerializer.LayerType[r.layerType],e.inputSlots=a.objectArray(r.inputSlots,$root.armnnSerializer.InputSlot.decodeText),e.outputSlots=a.objectArray(r.outputSlots,$root.armnnSerializer.OutputSlot.decodeText),e}},$root.armnnSerializer.BindableLayerBase=class{static decode(a,r){const e=new $root.armnnSerializer.BindableLayerBase;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.layerBindingId=a.int32_(r,6,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.BindableLayerBase;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.layerBindingId=a.value(r.layerBindingId,0),e}},$root.armnnSerializer.AbsLayer=class{static decode(a,r){const e=new $root.armnnSerializer.AbsLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.AbsLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.ActivationLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ActivationLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ActivationDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ActivationLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ActivationDescriptor.decodeText),e}},$root.armnnSerializer.ActivationDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ActivationDescriptor;return e.activationFunction=a.int8_(r,4,0),e.a=a.float32_(r,6,0),e.b=a.float32_(r,8,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.ActivationDescriptor;return e.activationFunction=$root.armnnSerializer.ActivationFunction[r.activationFunction],e.a=a.value(r.a,0),e.b=a.value(r.b,0),e}},$root.armnnSerializer.AdditionLayer=class{static decode(a,r){const e=new $root.armnnSerializer.AdditionLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.AdditionLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.ArgMinMaxLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ArgMinMaxLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ArgMinMaxDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ArgMinMaxLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ArgMinMaxDescriptor.decodeText),e}},$root.armnnSerializer.ArgMinMaxDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ArgMinMaxDescriptor;return e.argMinMaxFunction=a.int8_(r,4,0),e.axis=a.int32_(r,6,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.ArgMinMaxDescriptor;return e.argMinMaxFunction=$root.armnnSerializer.ArgMinMaxFunction[r.argMinMaxFunction],e.axis=a.value(r.axis,0),e}},$root.armnnSerializer.ComparisonOperation={Equal:0,Greater:1,GreaterOrEqual:2,Less:3,LessOrEqual:4,NotEqual:5},$root.armnnSerializer.ComparisonDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ComparisonDescriptor;return e.operation=a.int8_(r,4,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.ComparisonDescriptor;return e.operation=$root.armnnSerializer.ComparisonOperation[r.operation],e}},$root.armnnSerializer.ComparisonLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ComparisonLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ComparisonDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ComparisonLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ComparisonDescriptor.decodeText),e}},$root.armnnSerializer.ConstantLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ConstantLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.input=a.table(r,6,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ConstantLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.input=a.object(r.input,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.Convolution2dLayer=class{static decode(a,r){const e=new $root.armnnSerializer.Convolution2dLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.Convolution2dDescriptor.decode),e.weights=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.biases=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.Convolution2dLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.Convolution2dDescriptor.decodeText),e.weights=a.object(r.weights,$root.armnnSerializer.ConstTensor.decodeText),e.biases=a.object(r.biases,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.Convolution2dDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.Convolution2dDescriptor;return e.padLeft=a.uint32_(r,4,0),e.padRight=a.uint32_(r,6,0),e.padTop=a.uint32_(r,8,0),e.padBottom=a.uint32_(r,10,0),e.strideX=a.uint32_(r,12,0),e.strideY=a.uint32_(r,14,0),e.dilationX=a.uint32_(r,16,1),e.dilationY=a.uint32_(r,18,1),e.biasEnabled=a.bool_(r,20,!1),e.dataLayout=a.int8_(r,22,1),e}static decodeText(a,r){const e=new $root.armnnSerializer.Convolution2dDescriptor;return e.padLeft=a.value(r.padLeft,0),e.padRight=a.value(r.padRight,0),e.padTop=a.value(r.padTop,0),e.padBottom=a.value(r.padBottom,0),e.strideX=a.value(r.strideX,0),e.strideY=a.value(r.strideY,0),e.dilationX=a.value(r.dilationX,1),e.dilationY=a.value(r.dilationY,1),e.biasEnabled=a.value(r.biasEnabled,!1),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.DepthToSpaceLayer=class{static decode(a,r){const e=new $root.armnnSerializer.DepthToSpaceLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.DepthToSpaceDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.DepthToSpaceLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.DepthToSpaceDescriptor.decodeText),e}},$root.armnnSerializer.DepthToSpaceDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.DepthToSpaceDescriptor;return e.blockSize=a.uint32_(r,4,0),e.dataLayout=a.int8_(r,6,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.DepthToSpaceDescriptor;return e.blockSize=a.value(r.blockSize,0),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.DivisionLayer=class{static decode(a,r){const e=new $root.armnnSerializer.DivisionLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.DivisionLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.UnaryOperation={Abs:0,Rsqrt:1,Sqrt:2,Exp:3,Neg:4},$root.armnnSerializer.ElementwiseUnaryDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ElementwiseUnaryDescriptor;return e.operation=a.int8_(r,4,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.ElementwiseUnaryDescriptor;return e.operation=$root.armnnSerializer.UnaryOperation[r.operation],e}},$root.armnnSerializer.ElementwiseUnaryLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ElementwiseUnaryLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ElementwiseUnaryDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ElementwiseUnaryLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ElementwiseUnaryDescriptor.decodeText),e}},$root.armnnSerializer.EqualLayer=class{static decode(a,r){const e=new $root.armnnSerializer.EqualLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.EqualLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.FillLayer=class{static decode(a,r){const e=new $root.armnnSerializer.FillLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.FillDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.FillLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.FillDescriptor.decodeText),e}},$root.armnnSerializer.FillDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.FillDescriptor;return e.value=a.float32_(r,4,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.FillDescriptor;return e.value=a.value(r.value,0),e}},$root.armnnSerializer.FloorLayer=class{static decode(a,r){const e=new $root.armnnSerializer.FloorLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.FloorLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.FullyConnectedLayer=class{static decode(a,r){const e=new $root.armnnSerializer.FullyConnectedLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.FullyConnectedDescriptor.decode),e.weights=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.biases=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.FullyConnectedLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.FullyConnectedDescriptor.decodeText),e.weights=a.object(r.weights,$root.armnnSerializer.ConstTensor.decodeText),e.biases=a.object(r.biases,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.FullyConnectedDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.FullyConnectedDescriptor;return e.biasEnabled=a.bool_(r,4,!1),e.transposeWeightsMatrix=a.bool_(r,6,!1),e}static decodeText(a,r){const e=new $root.armnnSerializer.FullyConnectedDescriptor;return e.biasEnabled=a.value(r.biasEnabled,!1),e.transposeWeightsMatrix=a.value(r.transposeWeightsMatrix,!1),e}},$root.armnnSerializer.GatherLayer=class{static decode(a,r){const e=new $root.armnnSerializer.GatherLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.GatherDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.GatherLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.GatherDescriptor.decodeText),e}},$root.armnnSerializer.GatherDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.GatherDescriptor;return e.axis=a.int32_(r,4,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.GatherDescriptor;return e.axis=a.value(r.axis,0),e}},$root.armnnSerializer.GreaterLayer=class{static decode(a,r){const e=new $root.armnnSerializer.GreaterLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.GreaterLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.InputLayer=class{static decode(a,r){const e=new $root.armnnSerializer.InputLayer;return e.base=a.table(r,4,$root.armnnSerializer.BindableLayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.InputLayer;return e.base=a.object(r.base,$root.armnnSerializer.BindableLayerBase.decodeText),e}},$root.armnnSerializer.InstanceNormalizationLayer=class{static decode(a,r){const e=new $root.armnnSerializer.InstanceNormalizationLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.InstanceNormalizationDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.InstanceNormalizationLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.InstanceNormalizationDescriptor.decodeText),e}},$root.armnnSerializer.InstanceNormalizationDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.InstanceNormalizationDescriptor;return e.gamma=a.float32_(r,4,0),e.beta=a.float32_(r,6,0),e.eps=a.float32_(r,8,0),e.dataLayout=a.int8_(r,10,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.InstanceNormalizationDescriptor;return e.gamma=a.value(r.gamma,0),e.beta=a.value(r.beta,0),e.eps=a.value(r.eps,0),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.LogSoftmaxLayer=class{static decode(a,r){const e=new $root.armnnSerializer.LogSoftmaxLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.LogSoftmaxDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.LogSoftmaxLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.LogSoftmaxDescriptor.decodeText),e}},$root.armnnSerializer.LogSoftmaxDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.LogSoftmaxDescriptor;return e.beta=a.float32_(r,4,1),e.axis=a.int32_(r,6,-1),e}static decodeText(a,r){const e=new $root.armnnSerializer.LogSoftmaxDescriptor;return e.beta=a.value(r.beta,1),e.axis=a.value(r.axis,-1),e}},$root.armnnSerializer.L2NormalizationLayer=class{static decode(a,r){const e=new $root.armnnSerializer.L2NormalizationLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.L2NormalizationDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.L2NormalizationLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.L2NormalizationDescriptor.decodeText),e}},$root.armnnSerializer.L2NormalizationDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.L2NormalizationDescriptor;return e.dataLayout=a.int8_(r,4,1),e.eps=a.float32_(r,6,1e-12),e}static decodeText(a,r){const e=new $root.armnnSerializer.L2NormalizationDescriptor;return e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e.eps=a.value(r.eps,1e-12),e}},$root.armnnSerializer.MinimumLayer=class{static decode(a,r){const e=new $root.armnnSerializer.MinimumLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.MinimumLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.MaximumLayer=class{static decode(a,r){const e=new $root.armnnSerializer.MaximumLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.MaximumLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.MultiplicationLayer=class{static decode(a,r){const e=new $root.armnnSerializer.MultiplicationLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.MultiplicationLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.Pooling2dLayer=class{static decode(a,r){const e=new $root.armnnSerializer.Pooling2dLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.Pooling2dDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.Pooling2dLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.Pooling2dDescriptor.decodeText),e}},$root.armnnSerializer.PoolingAlgorithm={Max:0,Average:1,L2:2},$root.armnnSerializer.OutputShapeRounding={Floor:0,Ceiling:1},$root.armnnSerializer.PaddingMethod={IgnoreValue:0,Exclude:1},$root.armnnSerializer.Pooling2dDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.Pooling2dDescriptor;return e.poolType=a.int8_(r,4,0),e.padLeft=a.uint32_(r,6,0),e.padRight=a.uint32_(r,8,0),e.padTop=a.uint32_(r,10,0),e.padBottom=a.uint32_(r,12,0),e.poolWidth=a.uint32_(r,14,0),e.poolHeight=a.uint32_(r,16,0),e.strideX=a.uint32_(r,18,0),e.strideY=a.uint32_(r,20,0),e.outputShapeRounding=a.int8_(r,22,0),e.paddingMethod=a.int8_(r,24,0),e.dataLayout=a.int8_(r,26,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.Pooling2dDescriptor;return e.poolType=$root.armnnSerializer.PoolingAlgorithm[r.poolType],e.padLeft=a.value(r.padLeft,0),e.padRight=a.value(r.padRight,0),e.padTop=a.value(r.padTop,0),e.padBottom=a.value(r.padBottom,0),e.poolWidth=a.value(r.poolWidth,0),e.poolHeight=a.value(r.poolHeight,0),e.strideX=a.value(r.strideX,0),e.strideY=a.value(r.strideY,0),e.outputShapeRounding=$root.armnnSerializer.OutputShapeRounding[r.outputShapeRounding],e.paddingMethod=$root.armnnSerializer.PaddingMethod[r.paddingMethod],e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.QuantizeLayer=class{static decode(a,r){const e=new $root.armnnSerializer.QuantizeLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.QuantizeLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.SoftmaxLayer=class{static decode(a,r){const e=new $root.armnnSerializer.SoftmaxLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.SoftmaxDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SoftmaxLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.SoftmaxDescriptor.decodeText),e}},$root.armnnSerializer.SoftmaxDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.SoftmaxDescriptor;return e.beta=a.float32_(r,4,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.SoftmaxDescriptor;return e.beta=a.value(r.beta,0),e}},$root.armnnSerializer.DepthwiseConvolution2dLayer=class{static decode(a,r){const e=new $root.armnnSerializer.DepthwiseConvolution2dLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.DepthwiseConvolution2dDescriptor.decode),e.weights=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.biases=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.DepthwiseConvolution2dLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.DepthwiseConvolution2dDescriptor.decodeText),e.weights=a.object(r.weights,$root.armnnSerializer.ConstTensor.decodeText),e.biases=a.object(r.biases,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.DepthwiseConvolution2dDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.DepthwiseConvolution2dDescriptor;return e.padLeft=a.uint32_(r,4,0),e.padRight=a.uint32_(r,6,0),e.padTop=a.uint32_(r,8,0),e.padBottom=a.uint32_(r,10,0),e.strideX=a.uint32_(r,12,0),e.strideY=a.uint32_(r,14,0),e.dilationX=a.uint32_(r,16,1),e.dilationY=a.uint32_(r,18,1),e.biasEnabled=a.bool_(r,20,!1),e.dataLayout=a.int8_(r,22,1),e}static decodeText(a,r){const e=new $root.armnnSerializer.DepthwiseConvolution2dDescriptor;return e.padLeft=a.value(r.padLeft,0),e.padRight=a.value(r.padRight,0),e.padTop=a.value(r.padTop,0),e.padBottom=a.value(r.padBottom,0),e.strideX=a.value(r.strideX,0),e.strideY=a.value(r.strideY,0),e.dilationX=a.value(r.dilationX,1),e.dilationY=a.value(r.dilationY,1),e.biasEnabled=a.value(r.biasEnabled,!1),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.OutputLayer=class{static decode(a,r){const e=new $root.armnnSerializer.OutputLayer;return e.base=a.table(r,4,$root.armnnSerializer.BindableLayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.OutputLayer;return e.base=a.object(r.base,$root.armnnSerializer.BindableLayerBase.decodeText),e}},$root.armnnSerializer.ReshapeLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ReshapeLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ReshapeDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ReshapeLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ReshapeDescriptor.decodeText),e}},$root.armnnSerializer.ReshapeDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ReshapeDescriptor;return e.targetShape=a.typedArray(r,4,Uint32Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.ReshapeDescriptor;return e.targetShape=a.typedArray(r.targetShape,Uint32Array),e}},$root.armnnSerializer.PermuteLayer=class{static decode(a,r){const e=new $root.armnnSerializer.PermuteLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.PermuteDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.PermuteLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.PermuteDescriptor.decodeText),e}},$root.armnnSerializer.PermuteDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.PermuteDescriptor;return e.dimMappings=a.typedArray(r,4,Uint32Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.PermuteDescriptor;return e.dimMappings=a.typedArray(r.dimMappings,Uint32Array),e}},$root.armnnSerializer.SpaceToBatchNdLayer=class{static decode(a,r){const e=new $root.armnnSerializer.SpaceToBatchNdLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.SpaceToBatchNdDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SpaceToBatchNdLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.SpaceToBatchNdDescriptor.decodeText),e}},$root.armnnSerializer.SpaceToBatchNdDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.SpaceToBatchNdDescriptor;return e.blockShape=a.typedArray(r,4,Uint32Array),e.padList=a.typedArray(r,6,Uint32Array),e.dataLayout=a.int8_(r,8,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.SpaceToBatchNdDescriptor;return e.blockShape=a.typedArray(r.blockShape,Uint32Array),e.padList=a.typedArray(r.padList,Uint32Array),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.SpaceToDepthLayer=class{static decode(a,r){const e=new $root.armnnSerializer.SpaceToDepthLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.SpaceToDepthDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SpaceToDepthLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.SpaceToDepthDescriptor.decodeText),e}},$root.armnnSerializer.SpaceToDepthDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.SpaceToDepthDescriptor;return e.blockSize=a.uint32_(r,4,0),e.dataLayout=a.int8_(r,6,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.SpaceToDepthDescriptor;return e.blockSize=a.value(r.blockSize,0),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.SubtractionLayer=class{static decode(a,r){const e=new $root.armnnSerializer.SubtractionLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SubtractionLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.BatchToSpaceNdLayer=class{static decode(a,r){const e=new $root.armnnSerializer.BatchToSpaceNdLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.BatchToSpaceNdDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.BatchToSpaceNdLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.BatchToSpaceNdDescriptor.decodeText),e}},$root.armnnSerializer.BatchToSpaceNdDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.BatchToSpaceNdDescriptor;return e.blockShape=a.typedArray(r,4,Uint32Array),e.crops=a.typedArray(r,6,Uint32Array),e.dataLayout=a.int8_(r,8,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.BatchToSpaceNdDescriptor;return e.blockShape=a.typedArray(r.blockShape,Uint32Array),e.crops=a.typedArray(r.crops,Uint32Array),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.NormalizationAlgorithmChannel={Across:0,Within:1},$root.armnnSerializer.NormalizationAlgorithmMethod={LocalBrightness:0,LocalContrast:1},$root.armnnSerializer.NormalizationLayer=class{static decode(a,r){const e=new $root.armnnSerializer.NormalizationLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.NormalizationDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.NormalizationLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.NormalizationDescriptor.decodeText),e}},$root.armnnSerializer.NormalizationDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.NormalizationDescriptor;return e.normChannelType=a.int8_(r,4,0),e.normMethodType=a.int8_(r,6,0),e.normSize=a.uint32_(r,8,0),e.alpha=a.float32_(r,10,0),e.beta=a.float32_(r,12,0),e.k=a.float32_(r,14,0),e.dataLayout=a.int8_(r,16,1),e}static decodeText(a,r){const e=new $root.armnnSerializer.NormalizationDescriptor;return e.normChannelType=$root.armnnSerializer.NormalizationAlgorithmChannel[r.normChannelType],e.normMethodType=$root.armnnSerializer.NormalizationAlgorithmMethod[r.normMethodType],e.normSize=a.value(r.normSize,0),e.alpha=a.value(r.alpha,0),e.beta=a.value(r.beta,0),e.k=a.value(r.k,0),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.MeanLayer=class{static decode(a,r){const e=new $root.armnnSerializer.MeanLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.MeanDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.MeanLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.MeanDescriptor.decodeText),e}},$root.armnnSerializer.MeanDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.MeanDescriptor;return e.axis=a.typedArray(r,4,Uint32Array),e.keepDims=a.bool_(r,6,!1),e}static decodeText(a,r){const e=new $root.armnnSerializer.MeanDescriptor;return e.axis=a.typedArray(r.axis,Uint32Array),e.keepDims=a.value(r.keepDims,!1),e}},$root.armnnSerializer.PadLayer=class{static decode(a,r){const e=new $root.armnnSerializer.PadLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.PadDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.PadLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.PadDescriptor.decodeText),e}},$root.armnnSerializer.PadDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.PadDescriptor;return e.padList=a.typedArray(r,4,Uint32Array),e.padValue=a.float32_(r,6,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.PadDescriptor;return e.padList=a.typedArray(r.padList,Uint32Array),e.padValue=a.value(r.padValue,0),e}},$root.armnnSerializer.RsqrtLayer=class{static decode(a,r){const e=new $root.armnnSerializer.RsqrtLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.RsqrtLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.BatchNormalizationLayer=class{static decode(a,r){const e=new $root.armnnSerializer.BatchNormalizationLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.BatchNormalizationDescriptor.decode),e.mean=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.variance=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e.beta=a.table(r,12,$root.armnnSerializer.ConstTensor.decode),e.gamma=a.table(r,14,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.BatchNormalizationLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.BatchNormalizationDescriptor.decodeText),e.mean=a.object(r.mean,$root.armnnSerializer.ConstTensor.decodeText),e.variance=a.object(r.variance,$root.armnnSerializer.ConstTensor.decodeText),e.beta=a.object(r.beta,$root.armnnSerializer.ConstTensor.decodeText),e.gamma=a.object(r.gamma,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.BatchNormalizationDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.BatchNormalizationDescriptor;return e.eps=a.float32_(r,4,0),e.dataLayout=a.int8_(r,6,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.BatchNormalizationDescriptor;return e.eps=a.value(r.eps,0),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.ResizeBilinearLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ResizeBilinearLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ResizeBilinearDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ResizeBilinearLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ResizeBilinearDescriptor.decodeText),e}},$root.armnnSerializer.ResizeBilinearDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ResizeBilinearDescriptor;return e.targetWidth=a.uint32_(r,4,0),e.targetHeight=a.uint32_(r,6,0),e.dataLayout=a.int8_(r,8,0),e.alignCorners=a.bool_(r,10,!1),e.halfPixelCenters=a.bool_(r,12,!1),e}static decodeText(a,r){const e=new $root.armnnSerializer.ResizeBilinearDescriptor;return e.targetWidth=a.value(r.targetWidth,0),e.targetHeight=a.value(r.targetHeight,0),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e.alignCorners=a.value(r.alignCorners,!1),e.halfPixelCenters=a.value(r.halfPixelCenters,!1),e}},$root.armnnSerializer.SliceLayer=class{static decode(a,r){const e=new $root.armnnSerializer.SliceLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.SliceDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SliceLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.SliceDescriptor.decodeText),e}},$root.armnnSerializer.SliceDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.SliceDescriptor;return e.begin=a.typedArray(r,4,Uint32Array),e.size=a.typedArray(r,6,Uint32Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.SliceDescriptor;return e.begin=a.typedArray(r.begin,Uint32Array),e.size=a.typedArray(r.size,Uint32Array),e}},$root.armnnSerializer.StridedSliceLayer=class{static decode(a,r){const e=new $root.armnnSerializer.StridedSliceLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.StridedSliceDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.StridedSliceLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.StridedSliceDescriptor.decodeText),e}},$root.armnnSerializer.StridedSliceDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.StridedSliceDescriptor;return e.begin=a.typedArray(r,4,Int32Array),e.end=a.typedArray(r,6,Int32Array),e.stride=a.typedArray(r,8,Int32Array),e.beginMask=a.int32_(r,10,0),e.endMask=a.int32_(r,12,0),e.shrinkAxisMask=a.int32_(r,14,0),e.ellipsisMask=a.int32_(r,16,0),e.newAxisMask=a.int32_(r,18,0),e.dataLayout=a.int8_(r,20,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.StridedSliceDescriptor;return e.begin=a.typedArray(r.begin,Int32Array),e.end=a.typedArray(r.end,Int32Array),e.stride=a.typedArray(r.stride,Int32Array),e.beginMask=a.value(r.beginMask,0),e.endMask=a.value(r.endMask,0),e.shrinkAxisMask=a.value(r.shrinkAxisMask,0),e.ellipsisMask=a.value(r.ellipsisMask,0),e.newAxisMask=a.value(r.newAxisMask,0),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.ConcatLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ConcatLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.OriginsDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ConcatLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.OriginsDescriptor.decodeText),e}},$root.armnnSerializer.MergerLayer=class{static decode(a,r){const e=new $root.armnnSerializer.MergerLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.OriginsDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.MergerLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.OriginsDescriptor.decodeText),e}},$root.armnnSerializer.UintVector=class{static decode(a,r){const e=new $root.armnnSerializer.UintVector;return e.data=a.typedArray(r,4,Uint32Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.UintVector;return e.data=a.typedArray(r.data,Uint32Array),e}},$root.armnnSerializer.OriginsDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.OriginsDescriptor;return e.concatAxis=a.uint32_(r,4,0),e.numViews=a.uint32_(r,6,0),e.numDimensions=a.uint32_(r,8,0),e.viewOrigins=a.tableArray(r,10,$root.armnnSerializer.UintVector.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.OriginsDescriptor;return e.concatAxis=a.value(r.concatAxis,0),e.numViews=a.value(r.numViews,0),e.numDimensions=a.value(r.numDimensions,0),e.viewOrigins=a.objectArray(r.viewOrigins,$root.armnnSerializer.UintVector.decodeText),e}},$root.armnnSerializer.ViewsDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ViewsDescriptor;return e.origins=a.table(r,4,$root.armnnSerializer.OriginsDescriptor.decode),e.viewSizes=a.tableArray(r,6,$root.armnnSerializer.UintVector.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ViewsDescriptor;return e.origins=a.object(r.origins,$root.armnnSerializer.OriginsDescriptor.decodeText),e.viewSizes=a.objectArray(r.viewSizes,$root.armnnSerializer.UintVector.decodeText),e}},$root.armnnSerializer.SplitterLayer=class{static decode(a,r){const e=new $root.armnnSerializer.SplitterLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ViewsDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SplitterLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ViewsDescriptor.decodeText),e}},$root.armnnSerializer.DetectionPostProcessLayer=class{static decode(a,r){const e=new $root.armnnSerializer.DetectionPostProcessLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.DetectionPostProcessDescriptor.decode),e.anchors=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.DetectionPostProcessLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.DetectionPostProcessDescriptor.decodeText),e.anchors=a.object(r.anchors,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.DetectionPostProcessDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.DetectionPostProcessDescriptor;return e.maxDetections=a.uint32_(r,4,0),e.maxClassesPerDetection=a.uint32_(r,6,0),e.detectionsPerClass=a.uint32_(r,8,0),e.nmsScoreThreshold=a.float32_(r,10,0),e.nmsIouThreshold=a.float32_(r,12,0),e.numClasses=a.uint32_(r,14,0),e.useRegularNms=a.bool_(r,16,!1),e.scaleX=a.float32_(r,18,0),e.scaleY=a.float32_(r,20,0),e.scaleW=a.float32_(r,22,0),e.scaleH=a.float32_(r,24,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.DetectionPostProcessDescriptor;return e.maxDetections=a.value(r.maxDetections,0),e.maxClassesPerDetection=a.value(r.maxClassesPerDetection,0),e.detectionsPerClass=a.value(r.detectionsPerClass,0),e.nmsScoreThreshold=a.value(r.nmsScoreThreshold,0),e.nmsIouThreshold=a.value(r.nmsIouThreshold,0),e.numClasses=a.value(r.numClasses,0),e.useRegularNms=a.value(r.useRegularNms,!1),e.scaleX=a.value(r.scaleX,0),e.scaleY=a.value(r.scaleY,0),e.scaleW=a.value(r.scaleW,0),e.scaleH=a.value(r.scaleH,0),e}},$root.armnnSerializer.LstmInputParams=class{static decode(a,r){const e=new $root.armnnSerializer.LstmInputParams;return e.inputToForgetWeights=a.table(r,4,$root.armnnSerializer.ConstTensor.decode),e.inputToCellWeights=a.table(r,6,$root.armnnSerializer.ConstTensor.decode),e.inputToOutputWeights=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.recurrentToForgetWeights=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e.recurrentToCellWeights=a.table(r,12,$root.armnnSerializer.ConstTensor.decode),e.recurrentToOutputWeights=a.table(r,14,$root.armnnSerializer.ConstTensor.decode),e.forgetGateBias=a.table(r,16,$root.armnnSerializer.ConstTensor.decode),e.cellBias=a.table(r,18,$root.armnnSerializer.ConstTensor.decode),e.outputGateBias=a.table(r,20,$root.armnnSerializer.ConstTensor.decode),e.inputToInputWeights=a.table(r,22,$root.armnnSerializer.ConstTensor.decode),e.recurrentToInputWeights=a.table(r,24,$root.armnnSerializer.ConstTensor.decode),e.cellToInputWeights=a.table(r,26,$root.armnnSerializer.ConstTensor.decode),e.inputGateBias=a.table(r,28,$root.armnnSerializer.ConstTensor.decode),e.projectionWeights=a.table(r,30,$root.armnnSerializer.ConstTensor.decode),e.projectionBias=a.table(r,32,$root.armnnSerializer.ConstTensor.decode),e.cellToForgetWeights=a.table(r,34,$root.armnnSerializer.ConstTensor.decode),e.cellToOutputWeights=a.table(r,36,$root.armnnSerializer.ConstTensor.decode),e.inputLayerNormWeights=a.table(r,38,$root.armnnSerializer.ConstTensor.decode),e.forgetLayerNormWeights=a.table(r,40,$root.armnnSerializer.ConstTensor.decode),e.cellLayerNormWeights=a.table(r,42,$root.armnnSerializer.ConstTensor.decode),e.outputLayerNormWeights=a.table(r,44,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.LstmInputParams;return e.inputToForgetWeights=a.object(r.inputToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputToCellWeights=a.object(r.inputToCellWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputToOutputWeights=a.object(r.inputToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToForgetWeights=a.object(r.recurrentToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToCellWeights=a.object(r.recurrentToCellWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToOutputWeights=a.object(r.recurrentToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.forgetGateBias=a.object(r.forgetGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.cellBias=a.object(r.cellBias,$root.armnnSerializer.ConstTensor.decodeText),e.outputGateBias=a.object(r.outputGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.inputToInputWeights=a.object(r.inputToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToInputWeights=a.object(r.recurrentToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.cellToInputWeights=a.object(r.cellToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputGateBias=a.object(r.inputGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.projectionWeights=a.object(r.projectionWeights,$root.armnnSerializer.ConstTensor.decodeText),e.projectionBias=a.object(r.projectionBias,$root.armnnSerializer.ConstTensor.decodeText),e.cellToForgetWeights=a.object(r.cellToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.cellToOutputWeights=a.object(r.cellToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputLayerNormWeights=a.object(r.inputLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e.forgetLayerNormWeights=a.object(r.forgetLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e.cellLayerNormWeights=a.object(r.cellLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e.outputLayerNormWeights=a.object(r.outputLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.LstmDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.LstmDescriptor;return e.activationFunc=a.uint32_(r,4,0),e.clippingThresCell=a.float32_(r,6,0),e.clippingThresProj=a.float32_(r,8,0),e.cifgEnabled=a.bool_(r,10,!0),e.peepholeEnabled=a.bool_(r,12,!1),e.projectionEnabled=a.bool_(r,14,!1),e.layerNormEnabled=a.bool_(r,16,!1),e}static decodeText(a,r){const e=new $root.armnnSerializer.LstmDescriptor;return e.activationFunc=a.value(r.activationFunc,0),e.clippingThresCell=a.value(r.clippingThresCell,0),e.clippingThresProj=a.value(r.clippingThresProj,0),e.cifgEnabled=a.value(r.cifgEnabled,!0),e.peepholeEnabled=a.value(r.peepholeEnabled,!1),e.projectionEnabled=a.value(r.projectionEnabled,!1),e.layerNormEnabled=a.value(r.layerNormEnabled,!1),e}},$root.armnnSerializer.LstmLayer=class{static decode(a,r){const e=new $root.armnnSerializer.LstmLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.LstmDescriptor.decode),e.inputParams=a.table(r,8,$root.armnnSerializer.LstmInputParams.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.LstmLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.LstmDescriptor.decodeText),e.inputParams=a.object(r.inputParams,$root.armnnSerializer.LstmInputParams.decodeText),e}},$root.armnnSerializer.QLstmInputParams=class{static decode(a,r){const e=new $root.armnnSerializer.QLstmInputParams;return e.inputToForgetWeights=a.table(r,4,$root.armnnSerializer.ConstTensor.decode),e.inputToCellWeights=a.table(r,6,$root.armnnSerializer.ConstTensor.decode),e.inputToOutputWeights=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.recurrentToForgetWeights=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e.recurrentToCellWeights=a.table(r,12,$root.armnnSerializer.ConstTensor.decode),e.recurrentToOutputWeights=a.table(r,14,$root.armnnSerializer.ConstTensor.decode),e.forgetGateBias=a.table(r,16,$root.armnnSerializer.ConstTensor.decode),e.cellBias=a.table(r,18,$root.armnnSerializer.ConstTensor.decode),e.outputGateBias=a.table(r,20,$root.armnnSerializer.ConstTensor.decode),e.inputToInputWeights=a.table(r,22,$root.armnnSerializer.ConstTensor.decode),e.recurrentToInputWeights=a.table(r,24,$root.armnnSerializer.ConstTensor.decode),e.inputGateBias=a.table(r,26,$root.armnnSerializer.ConstTensor.decode),e.projectionWeights=a.table(r,28,$root.armnnSerializer.ConstTensor.decode),e.projectionBias=a.table(r,30,$root.armnnSerializer.ConstTensor.decode),e.cellToInputWeights=a.table(r,32,$root.armnnSerializer.ConstTensor.decode),e.cellToForgetWeights=a.table(r,34,$root.armnnSerializer.ConstTensor.decode),e.cellToOutputWeights=a.table(r,36,$root.armnnSerializer.ConstTensor.decode),e.inputLayerNormWeights=a.table(r,38,$root.armnnSerializer.ConstTensor.decode),e.forgetLayerNormWeights=a.table(r,40,$root.armnnSerializer.ConstTensor.decode),e.cellLayerNormWeights=a.table(r,42,$root.armnnSerializer.ConstTensor.decode),e.outputLayerNormWeights=a.table(r,44,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.QLstmInputParams;return e.inputToForgetWeights=a.object(r.inputToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputToCellWeights=a.object(r.inputToCellWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputToOutputWeights=a.object(r.inputToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToForgetWeights=a.object(r.recurrentToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToCellWeights=a.object(r.recurrentToCellWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToOutputWeights=a.object(r.recurrentToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.forgetGateBias=a.object(r.forgetGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.cellBias=a.object(r.cellBias,$root.armnnSerializer.ConstTensor.decodeText),e.outputGateBias=a.object(r.outputGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.inputToInputWeights=a.object(r.inputToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToInputWeights=a.object(r.recurrentToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputGateBias=a.object(r.inputGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.projectionWeights=a.object(r.projectionWeights,$root.armnnSerializer.ConstTensor.decodeText),e.projectionBias=a.object(r.projectionBias,$root.armnnSerializer.ConstTensor.decodeText),e.cellToInputWeights=a.object(r.cellToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.cellToForgetWeights=a.object(r.cellToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.cellToOutputWeights=a.object(r.cellToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputLayerNormWeights=a.object(r.inputLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e.forgetLayerNormWeights=a.object(r.forgetLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e.cellLayerNormWeights=a.object(r.cellLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e.outputLayerNormWeights=a.object(r.outputLayerNormWeights,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.QLstmDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.QLstmDescriptor;return e.cifgEnabled=a.bool_(r,4,!0),e.peepholeEnabled=a.bool_(r,6,!1),e.projectionEnabled=a.bool_(r,8,!1),e.layerNormEnabled=a.bool_(r,10,!1),e.cellClip=a.float32_(r,12,0),e.projectionClip=a.float32_(r,14,0),e.inputIntermediateScale=a.float32_(r,16,0),e.forgetIntermediateScale=a.float32_(r,18,0),e.cellIntermediateScale=a.float32_(r,20,0),e.outputIntermediateScale=a.float32_(r,22,0),e.hiddenStateZeroPoint=a.int32_(r,24,0),e.hiddenStateScale=a.float32_(r,26,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.QLstmDescriptor;return e.cifgEnabled=a.value(r.cifgEnabled,!0),e.peepholeEnabled=a.value(r.peepholeEnabled,!1),e.projectionEnabled=a.value(r.projectionEnabled,!1),e.layerNormEnabled=a.value(r.layerNormEnabled,!1),e.cellClip=a.value(r.cellClip,0),e.projectionClip=a.value(r.projectionClip,0),e.inputIntermediateScale=a.value(r.inputIntermediateScale,0),e.forgetIntermediateScale=a.value(r.forgetIntermediateScale,0),e.cellIntermediateScale=a.value(r.cellIntermediateScale,0),e.outputIntermediateScale=a.value(r.outputIntermediateScale,0),e.hiddenStateZeroPoint=a.value(r.hiddenStateZeroPoint,0),e.hiddenStateScale=a.value(r.hiddenStateScale,0),e}},$root.armnnSerializer.QLstmLayer=class{static decode(a,r){const e=new $root.armnnSerializer.QLstmLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.QLstmDescriptor.decode),e.inputParams=a.table(r,8,$root.armnnSerializer.QLstmInputParams.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.QLstmLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.QLstmDescriptor.decodeText),e.inputParams=a.object(r.inputParams,$root.armnnSerializer.QLstmInputParams.decodeText),e}},$root.armnnSerializer.QuantizedLstmInputParams=class{static decode(a,r){const e=new $root.armnnSerializer.QuantizedLstmInputParams;return e.inputToInputWeights=a.table(r,4,$root.armnnSerializer.ConstTensor.decode),e.inputToForgetWeights=a.table(r,6,$root.armnnSerializer.ConstTensor.decode),e.inputToCellWeights=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.inputToOutputWeights=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e.recurrentToInputWeights=a.table(r,12,$root.armnnSerializer.ConstTensor.decode),e.recurrentToForgetWeights=a.table(r,14,$root.armnnSerializer.ConstTensor.decode),e.recurrentToCellWeights=a.table(r,16,$root.armnnSerializer.ConstTensor.decode),e.recurrentToOutputWeights=a.table(r,18,$root.armnnSerializer.ConstTensor.decode),e.inputGateBias=a.table(r,20,$root.armnnSerializer.ConstTensor.decode),e.forgetGateBias=a.table(r,22,$root.armnnSerializer.ConstTensor.decode),e.cellBias=a.table(r,24,$root.armnnSerializer.ConstTensor.decode),e.outputGateBias=a.table(r,26,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.QuantizedLstmInputParams;return e.inputToInputWeights=a.object(r.inputToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputToForgetWeights=a.object(r.inputToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputToCellWeights=a.object(r.inputToCellWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputToOutputWeights=a.object(r.inputToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToInputWeights=a.object(r.recurrentToInputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToForgetWeights=a.object(r.recurrentToForgetWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToCellWeights=a.object(r.recurrentToCellWeights,$root.armnnSerializer.ConstTensor.decodeText),e.recurrentToOutputWeights=a.object(r.recurrentToOutputWeights,$root.armnnSerializer.ConstTensor.decodeText),e.inputGateBias=a.object(r.inputGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.forgetGateBias=a.object(r.forgetGateBias,$root.armnnSerializer.ConstTensor.decodeText),e.cellBias=a.object(r.cellBias,$root.armnnSerializer.ConstTensor.decodeText),e.outputGateBias=a.object(r.outputGateBias,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.QuantizedLstmLayer=class{static decode(a,r){const e=new $root.armnnSerializer.QuantizedLstmLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.inputParams=a.table(r,6,$root.armnnSerializer.QuantizedLstmInputParams.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.QuantizedLstmLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.inputParams=a.object(r.inputParams,$root.armnnSerializer.QuantizedLstmInputParams.decodeText),e}},$root.armnnSerializer.DequantizeLayer=class{static decode(a,r){const e=new $root.armnnSerializer.DequantizeLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.DequantizeLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.MergeLayer=class{static decode(a,r){const e=new $root.armnnSerializer.MergeLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.MergeLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.SwitchLayer=class{static decode(a,r){const e=new $root.armnnSerializer.SwitchLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SwitchLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.PreluLayer=class{static decode(a,r){const e=new $root.armnnSerializer.PreluLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.PreluLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.TransposeConvolution2dLayer=class{static decode(a,r){const e=new $root.armnnSerializer.TransposeConvolution2dLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.TransposeConvolution2dDescriptor.decode),e.weights=a.table(r,8,$root.armnnSerializer.ConstTensor.decode),e.biases=a.table(r,10,$root.armnnSerializer.ConstTensor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.TransposeConvolution2dLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.TransposeConvolution2dDescriptor.decodeText),e.weights=a.object(r.weights,$root.armnnSerializer.ConstTensor.decodeText),e.biases=a.object(r.biases,$root.armnnSerializer.ConstTensor.decodeText),e}},$root.armnnSerializer.TransposeConvolution2dDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.TransposeConvolution2dDescriptor;return e.padLeft=a.uint32_(r,4,0),e.padRight=a.uint32_(r,6,0),e.padTop=a.uint32_(r,8,0),e.padBottom=a.uint32_(r,10,0),e.strideX=a.uint32_(r,12,0),e.strideY=a.uint32_(r,14,0),e.biasEnabled=a.bool_(r,16,!1),e.dataLayout=a.int8_(r,18,1),e}static decodeText(a,r){const e=new $root.armnnSerializer.TransposeConvolution2dDescriptor;return e.padLeft=a.value(r.padLeft,0),e.padRight=a.value(r.padRight,0),e.padTop=a.value(r.padTop,0),e.padBottom=a.value(r.padBottom,0),e.strideX=a.value(r.strideX,0),e.strideY=a.value(r.strideY,0),e.biasEnabled=a.value(r.biasEnabled,!1),e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e}},$root.armnnSerializer.TransposeLayer=class{static decode(a,r){const e=new $root.armnnSerializer.TransposeLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.TransposeDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.TransposeLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.TransposeDescriptor.decodeText),e}},$root.armnnSerializer.TransposeDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.TransposeDescriptor;return e.dimMappings=a.typedArray(r,4,Uint32Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.TransposeDescriptor;return e.dimMappings=a.typedArray(r.dimMappings,Uint32Array),e}},$root.armnnSerializer.ResizeLayer=class{static decode(a,r){const e=new $root.armnnSerializer.ResizeLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.ResizeDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.ResizeLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.ResizeDescriptor.decodeText),e}},$root.armnnSerializer.ResizeDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.ResizeDescriptor;return e.targetHeight=a.uint32_(r,4,0),e.targetWidth=a.uint32_(r,6,0),e.method=a.int8_(r,8,0),e.dataLayout=a.int8_(r,10,0),e.alignCorners=a.bool_(r,12,!1),e.halfPixelCenters=a.bool_(r,14,!1),e}static decodeText(a,r){const e=new $root.armnnSerializer.ResizeDescriptor;return e.targetHeight=a.value(r.targetHeight,0),e.targetWidth=a.value(r.targetWidth,0),e.method=$root.armnnSerializer.ResizeMethod[r.method],e.dataLayout=$root.armnnSerializer.DataLayout[r.dataLayout],e.alignCorners=a.value(r.alignCorners,!1),e.halfPixelCenters=a.value(r.halfPixelCenters,!1),e}},$root.armnnSerializer.StackLayer=class{static decode(a,r){const e=new $root.armnnSerializer.StackLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.StackDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.StackLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.StackDescriptor.decodeText),e}},$root.armnnSerializer.StackDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.StackDescriptor;return e.axis=a.uint32_(r,4,0),e.numInputs=a.uint32_(r,6,0),e.inputShape=a.typedArray(r,8,Uint32Array),e}static decodeText(a,r){const e=new $root.armnnSerializer.StackDescriptor;return e.axis=a.value(r.axis,0),e.numInputs=a.value(r.numInputs,0),e.inputShape=a.typedArray(r.inputShape,Uint32Array),e}},$root.armnnSerializer.StandInDescriptor=class{static decode(a,r){const e=new $root.armnnSerializer.StandInDescriptor;return e.numInputs=a.uint32_(r,4,0),e.numOutputs=a.uint32_(r,6,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.StandInDescriptor;return e.numInputs=a.value(r.numInputs,0),e.numOutputs=a.value(r.numOutputs,0),e}},$root.armnnSerializer.StandInLayer=class{static decode(a,r){const e=new $root.armnnSerializer.StandInLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e.descriptor=a.table(r,6,$root.armnnSerializer.StandInDescriptor.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.StandInLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e.descriptor=a.object(r.descriptor,$root.armnnSerializer.StandInDescriptor.decodeText),e}},$root.armnnSerializer.RankLayer=class{static decode(a,r){const e=new $root.armnnSerializer.RankLayer;return e.base=a.table(r,4,$root.armnnSerializer.LayerBase.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.RankLayer;return e.base=a.object(r.base,$root.armnnSerializer.LayerBase.decodeText),e}},$root.armnnSerializer.Layer=class{static decode(a,r,e){switch(e){case 1:return $root.armnnSerializer.ActivationLayer.decode(a,r);case 2:return $root.armnnSerializer.AdditionLayer.decode(a,r);case 3:return $root.armnnSerializer.BatchToSpaceNdLayer.decode(a,r);case 4:return $root.armnnSerializer.BatchNormalizationLayer.decode(a,r);case 5:return $root.armnnSerializer.ConstantLayer.decode(a,r);case 6:return $root.armnnSerializer.Convolution2dLayer.decode(a,r);case 7:return $root.armnnSerializer.DepthwiseConvolution2dLayer.decode(a,r);case 8:return $root.armnnSerializer.FullyConnectedLayer.decode(a,r);case 9:return $root.armnnSerializer.InputLayer.decode(a,r);case 10:return $root.armnnSerializer.MultiplicationLayer.decode(a,r);case 11:return $root.armnnSerializer.OutputLayer.decode(a,r);case 12:return $root.armnnSerializer.PermuteLayer.decode(a,r);case 13:return $root.armnnSerializer.Pooling2dLayer.decode(a,r);case 14:return $root.armnnSerializer.ReshapeLayer.decode(a,r);case 15:return $root.armnnSerializer.SoftmaxLayer.decode(a,r);case 16:return $root.armnnSerializer.SpaceToBatchNdLayer.decode(a,r);case 17:return $root.armnnSerializer.DivisionLayer.decode(a,r);case 18:return $root.armnnSerializer.MinimumLayer.decode(a,r);case 19:return $root.armnnSerializer.EqualLayer.decode(a,r);case 20:return $root.armnnSerializer.MaximumLayer.decode(a,r);case 21:return $root.armnnSerializer.NormalizationLayer.decode(a,r);case 22:return $root.armnnSerializer.PadLayer.decode(a,r);case 23:return $root.armnnSerializer.RsqrtLayer.decode(a,r);case 24:return $root.armnnSerializer.FloorLayer.decode(a,r);case 25:return $root.armnnSerializer.GreaterLayer.decode(a,r);case 26:return $root.armnnSerializer.ResizeBilinearLayer.decode(a,r);case 27:return $root.armnnSerializer.SubtractionLayer.decode(a,r);case 28:return $root.armnnSerializer.StridedSliceLayer.decode(a,r);case 29:return $root.armnnSerializer.GatherLayer.decode(a,r);case 30:return $root.armnnSerializer.MeanLayer.decode(a,r);case 31:return $root.armnnSerializer.MergerLayer.decode(a,r);case 32:return $root.armnnSerializer.L2NormalizationLayer.decode(a,r);case 33:return $root.armnnSerializer.SplitterLayer.decode(a,r);case 34:return $root.armnnSerializer.DetectionPostProcessLayer.decode(a,r);case 35:return $root.armnnSerializer.LstmLayer.decode(a,r);case 36:return $root.armnnSerializer.QuantizedLstmLayer.decode(a,r);case 37:return $root.armnnSerializer.QuantizeLayer.decode(a,r);case 38:return $root.armnnSerializer.DequantizeLayer.decode(a,r);case 39:return $root.armnnSerializer.MergeLayer.decode(a,r);case 40:return $root.armnnSerializer.SwitchLayer.decode(a,r);case 41:return $root.armnnSerializer.ConcatLayer.decode(a,r);case 42:return $root.armnnSerializer.SpaceToDepthLayer.decode(a,r);case 43:return $root.armnnSerializer.PreluLayer.decode(a,r);case 44:return $root.armnnSerializer.TransposeConvolution2dLayer.decode(a,r);case 45:return $root.armnnSerializer.ResizeLayer.decode(a,r);case 46:return $root.armnnSerializer.StackLayer.decode(a,r);case 47:return $root.armnnSerializer.AbsLayer.decode(a,r);case 48:return $root.armnnSerializer.ArgMinMaxLayer.decode(a,r);case 49:return $root.armnnSerializer.SliceLayer.decode(a,r);case 50:return $root.armnnSerializer.DepthToSpaceLayer.decode(a,r);case 51:return $root.armnnSerializer.InstanceNormalizationLayer.decode(a,r);case 52:return $root.armnnSerializer.LogSoftmaxLayer.decode(a,r);case 53:return $root.armnnSerializer.ComparisonLayer.decode(a,r);case 54:return $root.armnnSerializer.StandInLayer.decode(a,r);case 55:return $root.armnnSerializer.ElementwiseUnaryLayer.decode(a,r);case 56:return $root.armnnSerializer.TransposeLayer.decode(a,r);case 57:return $root.armnnSerializer.QLstmLayer.decode(a,r);case 58:return $root.armnnSerializer.FillLayer.decode(a,r);case 59:return $root.armnnSerializer.RankLayer.decode(a,r)}}static decodeText(a,r,e){switch(e){case"ActivationLayer":return $root.armnnSerializer.ActivationLayer.decodeText(a,r);case"AdditionLayer":return $root.armnnSerializer.AdditionLayer.decodeText(a,r);case"BatchToSpaceNdLayer":return $root.armnnSerializer.BatchToSpaceNdLayer.decodeText(a,r);case"BatchNormalizationLayer":return $root.armnnSerializer.BatchNormalizationLayer.decodeText(a,r);case"ConstantLayer":return $root.armnnSerializer.ConstantLayer.decodeText(a,r);case"Convolution2dLayer":return $root.armnnSerializer.Convolution2dLayer.decodeText(a,r);case"DepthwiseConvolution2dLayer":return $root.armnnSerializer.DepthwiseConvolution2dLayer.decodeText(a,r);case"FullyConnectedLayer":return $root.armnnSerializer.FullyConnectedLayer.decodeText(a,r);case"InputLayer":return $root.armnnSerializer.InputLayer.decodeText(a,r);case"MultiplicationLayer":return $root.armnnSerializer.MultiplicationLayer.decodeText(a,r);case"OutputLayer":return $root.armnnSerializer.OutputLayer.decodeText(a,r);case"PermuteLayer":return $root.armnnSerializer.PermuteLayer.decodeText(a,r);case"Pooling2dLayer":return $root.armnnSerializer.Pooling2dLayer.decodeText(a,r);case"ReshapeLayer":return $root.armnnSerializer.ReshapeLayer.decodeText(a,r);case"SoftmaxLayer":return $root.armnnSerializer.SoftmaxLayer.decodeText(a,r);case"SpaceToBatchNdLayer":return $root.armnnSerializer.SpaceToBatchNdLayer.decodeText(a,r);case"DivisionLayer":return $root.armnnSerializer.DivisionLayer.decodeText(a,r);case"MinimumLayer":return $root.armnnSerializer.MinimumLayer.decodeText(a,r);case"EqualLayer":return $root.armnnSerializer.EqualLayer.decodeText(a,r);case"MaximumLayer":return $root.armnnSerializer.MaximumLayer.decodeText(a,r);case"NormalizationLayer":return $root.armnnSerializer.NormalizationLayer.decodeText(a,r);case"PadLayer":return $root.armnnSerializer.PadLayer.decodeText(a,r);case"RsqrtLayer":return $root.armnnSerializer.RsqrtLayer.decodeText(a,r);case"FloorLayer":return $root.armnnSerializer.FloorLayer.decodeText(a,r);case"GreaterLayer":return $root.armnnSerializer.GreaterLayer.decodeText(a,r);case"ResizeBilinearLayer":return $root.armnnSerializer.ResizeBilinearLayer.decodeText(a,r);case"SubtractionLayer":return $root.armnnSerializer.SubtractionLayer.decodeText(a,r);case"StridedSliceLayer":return $root.armnnSerializer.StridedSliceLayer.decodeText(a,r);case"GatherLayer":return $root.armnnSerializer.GatherLayer.decodeText(a,r);case"MeanLayer":return $root.armnnSerializer.MeanLayer.decodeText(a,r);case"MergerLayer":return $root.armnnSerializer.MergerLayer.decodeText(a,r);case"L2NormalizationLayer":return $root.armnnSerializer.L2NormalizationLayer.decodeText(a,r);case"SplitterLayer":return $root.armnnSerializer.SplitterLayer.decodeText(a,r);case"DetectionPostProcessLayer":return $root.armnnSerializer.DetectionPostProcessLayer.decodeText(a,r);case"LstmLayer":return $root.armnnSerializer.LstmLayer.decodeText(a,r);case"QuantizedLstmLayer":return $root.armnnSerializer.QuantizedLstmLayer.decodeText(a,r);case"QuantizeLayer":return $root.armnnSerializer.QuantizeLayer.decodeText(a,r);case"DequantizeLayer":return $root.armnnSerializer.DequantizeLayer.decodeText(a,r);case"MergeLayer":return $root.armnnSerializer.MergeLayer.decodeText(a,r);case"SwitchLayer":return $root.armnnSerializer.SwitchLayer.decodeText(a,r);case"ConcatLayer":return $root.armnnSerializer.ConcatLayer.decodeText(a,r);case"SpaceToDepthLayer":return $root.armnnSerializer.SpaceToDepthLayer.decodeText(a,r);case"PreluLayer":return $root.armnnSerializer.PreluLayer.decodeText(a,r);case"TransposeConvolution2dLayer":return $root.armnnSerializer.TransposeConvolution2dLayer.decodeText(a,r);case"ResizeLayer":return $root.armnnSerializer.ResizeLayer.decodeText(a,r);case"StackLayer":return $root.armnnSerializer.StackLayer.decodeText(a,r);case"AbsLayer":return $root.armnnSerializer.AbsLayer.decodeText(a,r);case"ArgMinMaxLayer":return $root.armnnSerializer.ArgMinMaxLayer.decodeText(a,r);case"SliceLayer":return $root.armnnSerializer.SliceLayer.decodeText(a,r);case"DepthToSpaceLayer":return $root.armnnSerializer.DepthToSpaceLayer.decodeText(a,r);case"InstanceNormalizationLayer":return $root.armnnSerializer.InstanceNormalizationLayer.decodeText(a,r);case"LogSoftmaxLayer":return $root.armnnSerializer.LogSoftmaxLayer.decodeText(a,r);case"ComparisonLayer":return $root.armnnSerializer.ComparisonLayer.decodeText(a,r);case"StandInLayer":return $root.armnnSerializer.StandInLayer.decodeText(a,r);case"ElementwiseUnaryLayer":return $root.armnnSerializer.ElementwiseUnaryLayer.decodeText(a,r);case"TransposeLayer":return $root.armnnSerializer.TransposeLayer.decodeText(a,r);case"QLstmLayer":return $root.armnnSerializer.QLstmLayer.decodeText(a,r);case"FillLayer":return $root.armnnSerializer.FillLayer.decodeText(a,r);case"RankLayer":return $root.armnnSerializer.RankLayer.decodeText(a,r)}}},$root.armnnSerializer.AnyLayer=class{static decode(a,r){const e=new $root.armnnSerializer.AnyLayer;return e.layer=a.union(r,4,$root.armnnSerializer.Layer.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.AnyLayer;return e.layer=$root.armnnSerializer.Layer.decodeText(a,r.layer,r.layer_type),e}},$root.armnnSerializer.FeatureCompatibilityVersions=class{static decode(a,r){const e=new $root.armnnSerializer.FeatureCompatibilityVersions;return e.bindingIdsScheme=a.uint32_(r,4,0),e}static decodeText(a,r){const e=new $root.armnnSerializer.FeatureCompatibilityVersions;return e.bindingIdsScheme=a.value(r.bindingIdsScheme,0),e}},$root.armnnSerializer.SerializedGraph=class{static identifier(a){return a.identifier("ARMN")}static create(a){return $root.armnnSerializer.SerializedGraph.decode(a,a.root)}static createText(a){return $root.armnnSerializer.SerializedGraph.decodeText(a,a.root)}static decode(a,r){const e=new $root.armnnSerializer.SerializedGraph;return e.layers=a.tableArray(r,4,$root.armnnSerializer.AnyLayer.decode),e.inputIds=a.typedArray(r,6,Int32Array),e.outputIds=a.typedArray(r,8,Int32Array),e.featureVersions=a.table(r,10,$root.armnnSerializer.FeatureCompatibilityVersions.decode),e}static decodeText(a,r){const e=new $root.armnnSerializer.SerializedGraph;return e.layers=a.objectArray(r.layers,$root.armnnSerializer.AnyLayer.decodeText),e.inputIds=a.typedArray(r.inputIds,Int32Array),e.outputIds=a.typedArray(r.outputIds,Int32Array),e.featureVersions=a.object(r.featureVersions,$root.armnnSerializer.FeatureCompatibilityVersions.decodeText),e}};
